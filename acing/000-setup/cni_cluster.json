{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": [
        {
            "metadata": {
                "name": "cni-acing-control-plane",
                "uid": "6e2363cc-5ffc-4d9d-b925-6e4a8fa3f262",
                "resourceVersion": "333",
                "creationTimestamp": "2023-02-22T03:56:26Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "cni-acing-control-plane",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ],
                "providerID": "kind://docker/cni-acing/cni-acing-control-plane",
                "taints": [
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "5",
                    "ephemeral-storage": "61255492Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8039792Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "5",
                    "ephemeral-storage": "61255492Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8039792Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:56:39Z",
                        "lastTransitionTime": "2023-02-22T03:56:22Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:56:39Z",
                        "lastTransitionTime": "2023-02-22T03:56:22Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:56:39Z",
                        "lastTransitionTime": "2023-02-22T03:56:22Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:56:39Z",
                        "lastTransitionTime": "2023-02-22T03:56:22Z",
                        "reason": "KubeletNotReady",
                        "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.6"
                    },
                    {
                        "type": "Hostname",
                        "address": "cni-acing-control-plane"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "24575c365fde408785de379171cb7e50",
                    "systemUUID": "24575c365fde408785de379171cb7e50",
                    "bootID": "f0a096b1-b971-4c8f-a4a0-699728a6a63c",
                    "kernelVersion": "5.10.104-linuxkit",
                    "osImage": "Ubuntu 22.04.1 LTS",
                    "containerRuntimeVersion": "containerd://1.6.7",
                    "kubeletVersion": "v1.25.0-beta.0",
                    "kubeProxyVersion": "v1.25.0-beta.0",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.4-0"
                        ],
                        "sizeBytes": 81120118
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-08-08@sha256:35196bdd6d2f36fef29d74f6357d5ba9bbca81bd3949bd38624a881d2b235458",
                            "registry.k8s.io/kube-apiserver:v1.25.0-beta.0"
                        ],
                        "sizeBytes": 73894378
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-08-08@sha256:04cf59ec400632ed3804e6cb6e96671e5f0c3af90584a1a47161d3e28acb08bc",
                            "registry.k8s.io/kube-controller-manager:v1.25.0-beta.0"
                        ],
                        "sizeBytes": 61966456
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-08-08@sha256:8a9a17eb5367e4b0a5d2443fa29a5d88f894554c36b71738938348fec7d99bc5",
                            "registry.k8s.io/kube-proxy:v1.25.0-beta.0"
                        ],
                        "sizeBytes": 59450365
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-08-08@sha256:5055a0053203ed6dce363b63bfef01f83c2dd9086c741e6121ee57e791d19914",
                            "registry.k8s.io/kube-scheduler:v1.25.0-beta.0"
                        ],
                        "sizeBytes": 50498168
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20220726-ed811e41"
                        ],
                        "sizeBytes": 23675326
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v0.0.22-kind.0"
                        ],
                        "sizeBytes": 15578330
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.9.3"
                        ],
                        "sizeBytes": 13423150
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20220607-9a4d8d2a"
                        ],
                        "sizeBytes": 2749880
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 268400
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "cni-acing-worker",
                "uid": "aad7be46-3ce5-490a-b3cc-45998b104789",
                "resourceVersion": "448",
                "creationTimestamp": "2023-02-22T03:56:51Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "cni-acing-worker",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.1.0/24",
                "podCIDRs": [
                    "10.244.1.0/24"
                ],
                "providerID": "kind://docker/cni-acing/cni-acing-worker",
                "taints": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "5",
                    "ephemeral-storage": "61255492Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8039792Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "5",
                    "ephemeral-storage": "61255492Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8039792Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:57:01Z",
                        "lastTransitionTime": "2023-02-22T03:56:51Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:57:01Z",
                        "lastTransitionTime": "2023-02-22T03:56:51Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:57:01Z",
                        "lastTransitionTime": "2023-02-22T03:56:51Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:57:01Z",
                        "lastTransitionTime": "2023-02-22T03:56:51Z",
                        "reason": "KubeletNotReady",
                        "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.5"
                    },
                    {
                        "type": "Hostname",
                        "address": "cni-acing-worker"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "216d35a3fc894f91a9d08d197a79c2c9",
                    "systemUUID": "216d35a3fc894f91a9d08d197a79c2c9",
                    "bootID": "f0a096b1-b971-4c8f-a4a0-699728a6a63c",
                    "kernelVersion": "5.10.104-linuxkit",
                    "osImage": "Ubuntu 22.04.1 LTS",
                    "containerRuntimeVersion": "containerd://1.6.7",
                    "kubeletVersion": "v1.25.0-beta.0",
                    "kubeProxyVersion": "v1.25.0-beta.0",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.4-0"
                        ],
                        "sizeBytes": 81120118
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-08-08@sha256:35196bdd6d2f36fef29d74f6357d5ba9bbca81bd3949bd38624a881d2b235458",
                            "registry.k8s.io/kube-apiserver:v1.25.0-beta.0"
                        ],
                        "sizeBytes": 73894378
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-08-08@sha256:04cf59ec400632ed3804e6cb6e96671e5f0c3af90584a1a47161d3e28acb08bc",
                            "registry.k8s.io/kube-controller-manager:v1.25.0-beta.0"
                        ],
                        "sizeBytes": 61966456
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-08-08@sha256:8a9a17eb5367e4b0a5d2443fa29a5d88f894554c36b71738938348fec7d99bc5",
                            "registry.k8s.io/kube-proxy:v1.25.0-beta.0"
                        ],
                        "sizeBytes": 59450365
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-08-08@sha256:5055a0053203ed6dce363b63bfef01f83c2dd9086c741e6121ee57e791d19914",
                            "registry.k8s.io/kube-scheduler:v1.25.0-beta.0"
                        ],
                        "sizeBytes": 50498168
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20220726-ed811e41"
                        ],
                        "sizeBytes": 23675326
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v0.0.22-kind.0"
                        ],
                        "sizeBytes": 15578330
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.9.3"
                        ],
                        "sizeBytes": 13423150
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20220607-9a4d8d2a"
                        ],
                        "sizeBytes": 2749880
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 268400
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-565d847f94-4g7th.1746095c92165b34",
                "namespace": "kube-system",
                "uid": "c6dc3dd6-25d3-454d-831c-40be96bf3474",
                "resourceVersion": "369",
                "creationTimestamp": "2023-02-22T03:56:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-4g7th",
                "uid": "b67f257a-121f-4d0a-9f21-43c2b2359d80",
                "apiVersion": "v1",
                "resourceVersion": "368"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:56:44Z",
            "lastTimestamp": "2023-02-22T03:56:44Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-sn9vq.1746095c92989106",
                "namespace": "kube-system",
                "uid": "cc05955c-6c3f-4bd2-b3d7-5c02153cf959",
                "resourceVersion": "375",
                "creationTimestamp": "2023-02-22T03:56:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-sn9vq",
                "uid": "aa43bddc-56a6-409b-89df-88f66c948fff",
                "apiVersion": "v1",
                "resourceVersion": "371"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:56:44Z",
            "lastTimestamp": "2023-02-22T03:56:44Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94.1746095c9212e18e",
                "namespace": "kube-system",
                "uid": "4257100d-e0f9-4f9c-aa3d-b1c887920136",
                "resourceVersion": "370",
                "creationTimestamp": "2023-02-22T03:56:44Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-565d847f94",
                "uid": "93d59d4f-e2c9-47d0-8a61-a39de68ec99a",
                "apiVersion": "apps/v1",
                "resourceVersion": "340"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-565d847f94-4g7th",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:44Z",
            "lastTimestamp": "2023-02-22T03:56:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94.1746095c928b7db2",
                "namespace": "kube-system",
                "uid": "f5d77122-9044-4df2-a0f2-88bb10a8ee35",
                "resourceVersion": "374",
                "creationTimestamp": "2023-02-22T03:56:44Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-565d847f94",
                "uid": "93d59d4f-e2c9-47d0-8a61-a39de68ec99a",
                "apiVersion": "apps/v1",
                "resourceVersion": "340"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-565d847f94-sn9vq",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:44Z",
            "lastTimestamp": "2023-02-22T03:56:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.1746095c7d40dcb1",
                "namespace": "kube-system",
                "uid": "179307a8-1eec-4355-8f1c-f4f4e44ada25",
                "resourceVersion": "342",
                "creationTimestamp": "2023-02-22T03:56:44Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "87bb1f38-ab15-4948-abc9-adfe41a06282",
                "apiVersion": "apps/v1",
                "resourceVersion": "229"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-565d847f94 to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:44Z",
            "lastTimestamp": "2023-02-22T03:56:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-cni-acing-control-plane.1746095c65c0b352",
                "namespace": "kube-system",
                "uid": "0b62e0d6-2431-4c32-972c-d4a2aa3a9198",
                "resourceVersion": "331",
                "creationTimestamp": "2023-02-22T03:56:43Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-cni-acing-control-plane",
                "uid": "000018a1-b3c1-4181-8e6f-6e8dfa749b6b",
                "apiVersion": "v1",
                "resourceVersion": "288"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:43Z",
            "lastTimestamp": "2023-02-22T03:56:43Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-cni-acing-control-plane.1746095c65b04e38",
                "namespace": "kube-system",
                "uid": "65123660-a1c2-4375-ab6a-650cc64222cd",
                "resourceVersion": "330",
                "creationTimestamp": "2023-02-22T03:56:43Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-cni-acing-control-plane",
                "uid": "5512d4e1-6b41-493e-afaa-5312e34dc509",
                "apiVersion": "v1",
                "resourceVersion": "278"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:43Z",
            "lastTimestamp": "2023-02-22T03:56:43Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-cni-acing-control-plane.1746095c65a6d2f9",
                "namespace": "kube-system",
                "uid": "cd3ae684-3228-4f1c-a4cd-2280cf28fa21",
                "resourceVersion": "329",
                "creationTimestamp": "2023-02-22T03:56:43Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-cni-acing-control-plane",
                "uid": "0d235449-25e4-4a73-bbf5-8e179d473526",
                "apiVersion": "v1",
                "resourceVersion": "282"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:43Z",
            "lastTimestamp": "2023-02-22T03:56:43Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager.174609593546ad09",
                "namespace": "kube-system",
                "uid": "1be963f5-4cdf-40f4-ad52-ab8b372e5560",
                "resourceVersion": "249",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "2edaa686-4c3b-4c1d-b039-c844795c13fe",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "248"
            },
            "reason": "LeaderElection",
            "message": "cni-acing-control-plane_7c646c5b-4c06-454f-b731-d1db70aab631 became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2023-02-22T03:56:29Z",
            "lastTimestamp": "2023-02-22T03:56:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-l5k5w.1746095c8ca71024",
                "namespace": "kube-system",
                "uid": "5f75615c-a8bf-419d-a01f-229675be23a9",
                "resourceVersion": "366",
                "creationTimestamp": "2023-02-22T03:56:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-l5k5w",
                "uid": "46fcab3e-f07a-4d0b-ac15-1c9467f4f781",
                "apiVersion": "v1",
                "resourceVersion": "362"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-l5k5w to cni-acing-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:56:44Z",
            "lastTimestamp": "2023-02-22T03:56:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-l5k5w.1746095ca49bb844",
                "namespace": "kube-system",
                "uid": "b7db445e-dbc3-46be-8b63-a6ea059b8c0a",
                "resourceVersion": "386",
                "creationTimestamp": "2023-02-22T03:56:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-l5k5w",
                "uid": "46fcab3e-f07a-4d0b-ac15-1c9467f4f781",
                "apiVersion": "v1",
                "resourceVersion": "364",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.25.0-beta.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:44Z",
            "lastTimestamp": "2023-02-22T03:56:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-l5k5w.1746095caff1e864",
                "namespace": "kube-system",
                "uid": "fbcd5ecd-3bd2-43e6-961c-9d8f477da24b",
                "resourceVersion": "388",
                "creationTimestamp": "2023-02-22T03:56:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-l5k5w",
                "uid": "46fcab3e-f07a-4d0b-ac15-1c9467f4f781",
                "apiVersion": "v1",
                "resourceVersion": "364",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:44Z",
            "lastTimestamp": "2023-02-22T03:56:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-l5k5w.1746095cb4f98646",
                "namespace": "kube-system",
                "uid": "1242bab4-0ba3-421a-b598-06e28a1540d7",
                "resourceVersion": "389",
                "creationTimestamp": "2023-02-22T03:56:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-l5k5w",
                "uid": "46fcab3e-f07a-4d0b-ac15-1c9467f4f781",
                "apiVersion": "v1",
                "resourceVersion": "364",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:45Z",
            "lastTimestamp": "2023-02-22T03:56:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-vbzcx.1746095e3df2dbdb",
                "namespace": "kube-system",
                "uid": "a15a67bf-06c5-4ba2-a00f-6ad86728be61",
                "resourceVersion": "423",
                "creationTimestamp": "2023-02-22T03:56:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vbzcx",
                "uid": "52c03c35-a10e-4bb8-81b5-e1fa0a1a607d",
                "apiVersion": "v1",
                "resourceVersion": "418"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-vbzcx to cni-acing-worker",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:56:51Z",
            "lastTimestamp": "2023-02-22T03:56:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-vbzcx.1746095ea88df969",
                "namespace": "kube-system",
                "uid": "52e787fb-4660-4138-a403-839a63c61706",
                "resourceVersion": "429",
                "creationTimestamp": "2023-02-22T03:56:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vbzcx",
                "uid": "52c03c35-a10e-4bb8-81b5-e1fa0a1a607d",
                "apiVersion": "v1",
                "resourceVersion": "420",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.25.0-beta.0\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:56:53Z",
            "lastTimestamp": "2023-02-22T03:56:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-vbzcx.1746095eb5ddc75c",
                "namespace": "kube-system",
                "uid": "cbaf8e90-7709-4aea-873f-8e5068bd77b1",
                "resourceVersion": "430",
                "creationTimestamp": "2023-02-22T03:56:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vbzcx",
                "uid": "52c03c35-a10e-4bb8-81b5-e1fa0a1a607d",
                "apiVersion": "v1",
                "resourceVersion": "420",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:56:53Z",
            "lastTimestamp": "2023-02-22T03:56:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-vbzcx.1746095ebb2bfcdc",
                "namespace": "kube-system",
                "uid": "a2da606a-b5c0-4437-8d7a-f85dfa527d7c",
                "resourceVersion": "432",
                "creationTimestamp": "2023-02-22T03:56:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vbzcx",
                "uid": "52c03c35-a10e-4bb8-81b5-e1fa0a1a607d",
                "apiVersion": "v1",
                "resourceVersion": "420",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:56:53Z",
            "lastTimestamp": "2023-02-22T03:56:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.1746095c8c66c0c3",
                "namespace": "kube-system",
                "uid": "34973aa4-5cab-4465-b1eb-45df4d44ff72",
                "resourceVersion": "363",
                "creationTimestamp": "2023-02-22T03:56:44Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "272adbab-7a7c-4a04-8226-5912d63977a0",
                "apiVersion": "apps/v1",
                "resourceVersion": "233"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-l5k5w",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:44Z",
            "lastTimestamp": "2023-02-22T03:56:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.1746095e3dbdb2a4",
                "namespace": "kube-system",
                "uid": "a095b072-e2de-47db-8972-88440efb8fef",
                "resourceVersion": "421",
                "creationTimestamp": "2023-02-22T03:56:51Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "272adbab-7a7c-4a04-8226-5912d63977a0",
                "apiVersion": "apps/v1",
                "resourceVersion": "392"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-vbzcx",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:51Z",
            "lastTimestamp": "2023-02-22T03:56:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-cni-acing-control-plane.1746095c65c2a7f9",
                "namespace": "kube-system",
                "uid": "eae00716-59b7-422a-a64c-884ff0ea10cf",
                "resourceVersion": "332",
                "creationTimestamp": "2023-02-22T03:56:43Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-cni-acing-control-plane",
                "uid": "1ac5f95e-d315-4baf-8ef1-e17dd92a9f36",
                "apiVersion": "v1",
                "resourceVersion": "275"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:43Z",
            "lastTimestamp": "2023-02-22T03:56:43Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.174609596588f072",
                "namespace": "kube-system",
                "uid": "c5cf971a-0b16-490f-986b-7b72aebdb0f2",
                "resourceVersion": "265",
                "creationTimestamp": "2023-02-22T03:56:30Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "01abd9cb-e0cb-4904-be78-d478dab60e2a",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "263"
            },
            "reason": "LeaderElection",
            "message": "cni-acing-control-plane_fd5b648d-62d3-4264-b757-ab3d0d9ed740 became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:56:30Z",
            "lastTimestamp": "2023-02-22T03:56:30Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "94ce110b-f0f0-4618-8bb7-260b335a63c1",
                "resourceVersion": "231",
                "creationTimestamp": "2023-02-22T03:56:29Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "272adbab-7a7c-4a04-8226-5912d63977a0",
                "resourceVersion": "436",
                "generation": 1,
                "creationTimestamp": "2023-02-22T03:56:29Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.25.0-beta.0",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "87bb1f38-ab15-4948-abc9-adfe41a06282",
                "resourceVersion": "385",
                "generation": 1,
                "creationTimestamp": "2023-02-22T03:56:29Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "unavailableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "False",
                        "lastUpdateTime": "2023-02-22T03:56:44Z",
                        "lastTransitionTime": "2023-02-22T03:56:44Z",
                        "reason": "MinimumReplicasUnavailable",
                        "message": "Deployment does not have minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-02-22T03:56:44Z",
                        "lastTransitionTime": "2023-02-22T03:56:44Z",
                        "reason": "ReplicaSetUpdated",
                        "message": "ReplicaSet \"coredns-565d847f94\" is progressing."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-565d847f94",
                "namespace": "kube-system",
                "uid": "93d59d4f-e2c9-47d0-8a61-a39de68ec99a",
                "resourceVersion": "384",
                "generation": 1,
                "creationTimestamp": "2023-02-22T03:56:44Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "565d847f94"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "87bb1f38-ab15-4948-abc9-adfe41a06282",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "565d847f94"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "565d847f94"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-565d847f94-4g7th",
                "generateName": "coredns-565d847f94-",
                "namespace": "kube-system",
                "uid": "b67f257a-121f-4d0a-9f21-43c2b2359d80",
                "resourceVersion": "372",
                "creationTimestamp": "2023-02-22T03:56:44Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "565d847f94"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-565d847f94",
                        "uid": "93d59d4f-e2c9-47d0-8a61-a39de68ec99a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-48kqj",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-48kqj",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:44Z",
                        "reason": "Unschedulable",
                        "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling."
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-sn9vq",
                "generateName": "coredns-565d847f94-",
                "namespace": "kube-system",
                "uid": "aa43bddc-56a6-409b-89df-88f66c948fff",
                "resourceVersion": "377",
                "creationTimestamp": "2023-02-22T03:56:44Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "565d847f94"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-565d847f94",
                        "uid": "93d59d4f-e2c9-47d0-8a61-a39de68ec99a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-kgkcx",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-kgkcx",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:44Z",
                        "reason": "Unschedulable",
                        "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling."
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-cni-acing-control-plane",
                "namespace": "kube-system",
                "uid": "000018a1-b3c1-4181-8e6f-6e8dfa749b6b",
                "resourceVersion": "398",
                "creationTimestamp": "2023-02-22T03:56:29Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.18.0.6:2379",
                    "kubernetes.io/config.hash": "9283edca4f05bbb9bce63805382f9d3b",
                    "kubernetes.io/config.mirror": "9283edca4f05bbb9bce63805382f9d3b",
                    "kubernetes.io/config.seen": "2023-02-22T03:56:29.557980750Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "cni-acing-control-plane",
                        "uid": "6e2363cc-5ffc-4d9d-b925-6e4a8fa3f262",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.5.4-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.18.0.6:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://172.18.0.6:2380",
                            "--initial-cluster=cni-acing-control-plane=https://172.18.0.6:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.6:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.18.0.6:2380",
                            "--name=cni-acing-control-plane",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health?exclude=NOSPACE\u0026serializable=true",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health?serializable=false",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "cni-acing-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:29Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:39Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:39Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:29Z"
                    }
                ],
                "hostIP": "172.18.0.6",
                "podIP": "172.18.0.6",
                "podIPs": [
                    {
                        "ip": "172.18.0.6"
                    }
                ],
                "startTime": "2023-02-22T03:56:29Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:56:23Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/etcd:3.5.4-0",
                        "imageID": "sha256:8e041a3b0ba8b5f930b1732f7e2ddb654b1739c89b068ff433008d633a51cd03",
                        "containerID": "containerd://2987dc834691b9ebe0a494f1d4880a845e87d99632e2cd671ce772334f232e70",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-cni-acing-control-plane",
                "namespace": "kube-system",
                "uid": "5512d4e1-6b41-493e-afaa-5312e34dc509",
                "resourceVersion": "400",
                "creationTimestamp": "2023-02-22T03:56:29Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.18.0.6:6443",
                    "kubernetes.io/config.hash": "5c2f049ddd6ec19801a10d3cd50862e3",
                    "kubernetes.io/config.mirror": "5c2f049ddd6ec19801a10d3cd50862e3",
                    "kubernetes.io/config.seen": "2023-02-22T03:56:29.557983916Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "cni-acing-control-plane",
                        "uid": "6e2363cc-5ffc-4d9d-b925-6e4a8fa3f262",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.25.0-beta.0",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.18.0.6",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--runtime-config=",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.6",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 6443,
                                "host": "172.18.0.6",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.6",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "cni-acing-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:30Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:35Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:35Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:30Z"
                    }
                ],
                "hostIP": "172.18.0.6",
                "podIP": "172.18.0.6",
                "podIPs": [
                    {
                        "ip": "172.18.0.6"
                    }
                ],
                "startTime": "2023-02-22T03:56:30Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:56:22Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-apiserver:v1.25.0-beta.0",
                        "imageID": "docker.io/library/import-2022-08-08@sha256:35196bdd6d2f36fef29d74f6357d5ba9bbca81bd3949bd38624a881d2b235458",
                        "containerID": "containerd://1b66227c627bb272c6f1b75b809cdd1b492277203a33b0f903900902cd4c8b55",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-cni-acing-control-plane",
                "namespace": "kube-system",
                "uid": "0d235449-25e4-4a73-bbf5-8e179d473526",
                "resourceVersion": "401",
                "creationTimestamp": "2023-02-22T03:56:30Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "5fd61d062e634fd14af4fa6f9e878324",
                    "kubernetes.io/config.mirror": "5fd61d062e634fd14af4fa6f9e878324",
                    "kubernetes.io/config.seen": "2023-02-22T03:56:29.557984625Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "cni-acing-control-plane",
                        "uid": "6e2363cc-5ffc-4d9d-b925-6e4a8fa3f262",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.25.0-beta.0",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=cni-acing",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "cni-acing-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:29Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:37Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:37Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:29Z"
                    }
                ],
                "hostIP": "172.18.0.6",
                "podIP": "172.18.0.6",
                "podIPs": [
                    {
                        "ip": "172.18.0.6"
                    }
                ],
                "startTime": "2023-02-22T03:56:29Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:56:22Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-controller-manager:v1.25.0-beta.0",
                        "imageID": "docker.io/library/import-2022-08-08@sha256:04cf59ec400632ed3804e6cb6e96671e5f0c3af90584a1a47161d3e28acb08bc",
                        "containerID": "containerd://54183edbe4285afcc8c84d2d8a3a28121223b918b295e955faa70714d5f25f2d",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-l5k5w",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "46fcab3e-f07a-4d0b-ac15-1c9467f4f781",
                "resourceVersion": "391",
                "creationTimestamp": "2023-02-22T03:56:44Z",
                "labels": {
                    "controller-revision-hash": "6d59f879b4",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "272adbab-7a7c-4a04-8226-5912d63977a0",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-zksl2",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.25.0-beta.0",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-zksl2",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "cni-acing-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "cni-acing-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:44Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:45Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:45Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:44Z"
                    }
                ],
                "hostIP": "172.18.0.6",
                "podIP": "172.18.0.6",
                "podIPs": [
                    {
                        "ip": "172.18.0.6"
                    }
                ],
                "startTime": "2023-02-22T03:56:44Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:56:45Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.25.0-beta.0",
                        "imageID": "docker.io/library/import-2022-08-08@sha256:8a9a17eb5367e4b0a5d2443fa29a5d88f894554c36b71738938348fec7d99bc5",
                        "containerID": "containerd://92402d92f443d94d89334de3b80941fd415e8b531d7a8618a9157570407e6ba8",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-vbzcx",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "52c03c35-a10e-4bb8-81b5-e1fa0a1a607d",
                "resourceVersion": "435",
                "creationTimestamp": "2023-02-22T03:56:51Z",
                "labels": {
                    "controller-revision-hash": "6d59f879b4",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "272adbab-7a7c-4a04-8226-5912d63977a0",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-vhz55",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.25.0-beta.0",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-vhz55",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "cni-acing-worker",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "cni-acing-worker"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:52Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:54Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:54Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:51Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "startTime": "2023-02-22T03:56:52Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:56:53Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.25.0-beta.0",
                        "imageID": "docker.io/library/import-2022-08-08@sha256:8a9a17eb5367e4b0a5d2443fa29a5d88f894554c36b71738938348fec7d99bc5",
                        "containerID": "containerd://7ddc14318f58156fab2c23eee05dc78054df8fc85552b37b44f21c20f119ea20",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-cni-acing-control-plane",
                "namespace": "kube-system",
                "uid": "1ac5f95e-d315-4baf-8ef1-e17dd92a9f36",
                "resourceVersion": "399",
                "creationTimestamp": "2023-02-22T03:56:29Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "77d9ab89993faf6b986a2f8dd4d48fcd",
                    "kubernetes.io/config.mirror": "77d9ab89993faf6b986a2f8dd4d48fcd",
                    "kubernetes.io/config.seen": "2023-02-22T03:56:29.557985083Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "cni-acing-control-plane",
                        "uid": "6e2363cc-5ffc-4d9d-b925-6e4a8fa3f262",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.25.0-beta.0",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "cni-acing-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:30Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:34Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:34Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:56:30Z"
                    }
                ],
                "hostIP": "172.18.0.6",
                "podIP": "172.18.0.6",
                "podIPs": [
                    {
                        "ip": "172.18.0.6"
                    }
                ],
                "startTime": "2023-02-22T03:56:30Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:56:22Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-scheduler:v1.25.0-beta.0",
                        "imageID": "docker.io/library/import-2022-08-08@sha256:5055a0053203ed6dce363b63bfef01f83c2dd9086c741e6121ee57e791d19914",
                        "containerID": "containerd://3575ae5f18e8734a8fb2962557095aca2c32ccc63c73c9eb5108a6fb78005981",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-565d847f94-4g7th ====
==== END logs for container coredns of pod kube-system/coredns-565d847f94-4g7th ====
==== START logs for container coredns of pod kube-system/coredns-565d847f94-sn9vq ====
==== END logs for container coredns of pod kube-system/coredns-565d847f94-sn9vq ====
==== START logs for container etcd of pod kube-system/etcd-cni-acing-control-plane ====
{"level":"warn","ts":"2023-02-22T03:56:23.836Z","caller":"flags/flag.go:93","msg":"unrecognized environment variable","environment-variable":"ETCD_UNSUPPORTED_ARCH=arm64"}
{"level":"info","ts":"2023-02-22T03:56:23.836Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://172.18.0.6:2379","--cert-file=/etc/kubernetes/pki/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://172.18.0.6:2380","--initial-cluster=cni-acing-control-plane=https://172.18.0.6:2380","--key-file=/etc/kubernetes/pki/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.6:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://172.18.0.6:2380","--name=cni-acing-control-plane","--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/etc/kubernetes/pki/etcd/peer.key","--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--snapshot-count=10000","--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"]}
{"level":"info","ts":"2023-02-22T03:56:23.837Z","caller":"embed/etcd.go:131","msg":"configuring peer listeners","listen-peer-urls":["https://172.18.0.6:2380"]}
{"level":"info","ts":"2023-02-22T03:56:23.837Z","caller":"embed/etcd.go:479","msg":"starting with peer TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-02-22T03:56:23.838Z","caller":"embed/etcd.go:139","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.6:2379"]}
{"level":"info","ts":"2023-02-22T03:56:23.838Z","caller":"embed/etcd.go:308","msg":"starting an etcd server","etcd-version":"3.5.4","git-sha":"08407ff76","go-version":"go1.16.2","go-os":"linux","go-arch":"arm64","max-cpu-set":5,"max-cpu-available":5,"member-initialized":false,"name":"cni-acing-control-plane","data-dir":"/var/lib/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://172.18.0.6:2380"],"listen-peer-urls":["https://172.18.0.6:2380"],"advertise-client-urls":["https://172.18.0.6:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.6:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"cni-acing-control-plane=https://172.18.0.6:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-size-bytes":2147483648,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2023-02-22T03:56:23.842Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/etcd/member/snap/db","took":"3.137ms"}
{"level":"info","ts":"2023-02-22T03:56:23.846Z","caller":"etcdserver/raft.go:448","msg":"starting local member","local-member-id":"ed3b372f1d693cef","cluster-id":"f80639f1568ba2ed"}
{"level":"info","ts":"2023-02-22T03:56:23.846Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef switched to configuration voters=()"}
{"level":"info","ts":"2023-02-22T03:56:23.846Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef became follower at term 0"}
{"level":"info","ts":"2023-02-22T03:56:23.846Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft ed3b372f1d693cef [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2023-02-22T03:56:23.846Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef became follower at term 1"}
{"level":"info","ts":"2023-02-22T03:56:23.846Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef switched to configuration voters=(17094317486111276271)"}
{"level":"warn","ts":"2023-02-22T03:56:23.847Z","caller":"auth/store.go:1220","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-02-22T03:56:23.849Z","caller":"mvcc/kvstore.go:415","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2023-02-22T03:56:23.850Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-02-22T03:56:23.851Z","caller":"etcdserver/server.go:851","msg":"starting etcd server","local-member-id":"ed3b372f1d693cef","local-server-version":"3.5.4","cluster-version":"to_be_decided"}
{"level":"info","ts":"2023-02-22T03:56:23.851Z","caller":"etcdserver/server.go:736","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"ed3b372f1d693cef","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2023-02-22T03:56:23.851Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef switched to configuration voters=(17094317486111276271)"}
{"level":"info","ts":"2023-02-22T03:56:23.851Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"f80639f1568ba2ed","local-member-id":"ed3b372f1d693cef","added-peer-id":"ed3b372f1d693cef","added-peer-peer-urls":["https://172.18.0.6:2380"]}
{"level":"info","ts":"2023-02-22T03:56:23.852Z","caller":"embed/etcd.go:688","msg":"starting with client TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-02-22T03:56:23.852Z","caller":"embed/etcd.go:277","msg":"now serving peer/client/metrics","local-member-id":"ed3b372f1d693cef","initial-advertise-peer-urls":["https://172.18.0.6:2380"],"listen-peer-urls":["https://172.18.0.6:2380"],"advertise-client-urls":["https://172.18.0.6:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.6:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-02-22T03:56:23.852Z","caller":"embed/etcd.go:763","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-02-22T03:56:23.852Z","caller":"embed/etcd.go:581","msg":"serving peer traffic","address":"172.18.0.6:2380"}
{"level":"info","ts":"2023-02-22T03:56:23.852Z","caller":"embed/etcd.go:553","msg":"cmux::serve","address":"172.18.0.6:2380"}
{"level":"info","ts":"2023-02-22T03:56:24.246Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef is starting a new election at term 1"}
{"level":"info","ts":"2023-02-22T03:56:24.246Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef became pre-candidate at term 1"}
{"level":"info","ts":"2023-02-22T03:56:24.246Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef received MsgPreVoteResp from ed3b372f1d693cef at term 1"}
{"level":"info","ts":"2023-02-22T03:56:24.246Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef became candidate at term 2"}
{"level":"info","ts":"2023-02-22T03:56:24.246Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef received MsgVoteResp from ed3b372f1d693cef at term 2"}
{"level":"info","ts":"2023-02-22T03:56:24.246Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"ed3b372f1d693cef became leader at term 2"}
{"level":"info","ts":"2023-02-22T03:56:24.246Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: ed3b372f1d693cef elected leader ed3b372f1d693cef at term 2"}
{"level":"info","ts":"2023-02-22T03:56:24.247Z","caller":"etcdserver/server.go:2507","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2023-02-22T03:56:24.248Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"f80639f1568ba2ed","local-member-id":"ed3b372f1d693cef","cluster-version":"3.5"}
{"level":"info","ts":"2023-02-22T03:56:24.248Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-02-22T03:56:24.248Z","caller":"etcdserver/server.go:2531","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2023-02-22T03:56:24.248Z","caller":"etcdserver/server.go:2042","msg":"published local member to cluster through raft","local-member-id":"ed3b372f1d693cef","local-member-attributes":"{Name:cni-acing-control-plane ClientURLs:[https://172.18.0.6:2379]}","request-path":"/0/members/ed3b372f1d693cef/attributes","cluster-id":"f80639f1568ba2ed","publish-timeout":"7s"}
{"level":"info","ts":"2023-02-22T03:56:24.248Z","caller":"embed/serve.go:98","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-02-22T03:56:24.248Z","caller":"embed/serve.go:98","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-02-22T03:56:24.249Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-02-22T03:56:24.249Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2023-02-22T03:56:24.250Z","caller":"embed/serve.go:188","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-02-22T03:56:24.250Z","caller":"embed/serve.go:188","msg":"serving client traffic securely","address":"172.18.0.6:2379"}
==== END logs for container etcd of pod kube-system/etcd-cni-acing-control-plane ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-cni-acing-control-plane ====
I0222 03:56:22.404287       1 server.go:563] external host was not specified, using 172.18.0.6
I0222 03:56:22.405909       1 server.go:161] Version: v1.25.0-beta.0
I0222 03:56:22.405922       1 server.go:163] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:56:22.613026       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0222 03:56:22.613046       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
I0222 03:56:22.613861       1 shared_informer.go:255] Waiting for caches to sync for node_authorizer
I0222 03:56:22.615062       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0222 03:56:22.615073       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
W0222 03:56:22.616923       1 logging.go:59] [core] [Channel #1 SubChannel #2] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing dial tcp 127.0.0.1:2379: connect: connection refused"
W0222 03:56:23.612788       1 logging.go:59] [core] [Channel #5 SubChannel #6] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing dial tcp 127.0.0.1:2379: connect: connection refused"
W0222 03:56:23.612842       1 logging.go:59] [core] [Channel #3 SubChannel #4] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing dial tcp 127.0.0.1:2379: connect: connection refused"
W0222 03:56:23.617135       1 logging.go:59] [core] [Channel #1 SubChannel #2] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing dial tcp 127.0.0.1:2379: connect: connection refused"
W0222 03:56:25.456123       1 genericapiserver.go:656] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I0222 03:56:25.457004       1 instance.go:260] Using reconciler: lease
I0222 03:56:25.589925       1 instance.go:573] API group "internal.apiserver.k8s.io" is not enabled, skipping.
W0222 03:56:25.835657       1 genericapiserver.go:656] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W0222 03:56:25.836815       1 genericapiserver.go:656] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
W0222 03:56:25.839471       1 genericapiserver.go:656] Skipping API autoscaling/v2beta1 because it has no resources.
W0222 03:56:25.842234       1 genericapiserver.go:656] Skipping API batch/v1beta1 because it has no resources.
W0222 03:56:25.844192       1 genericapiserver.go:656] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W0222 03:56:25.846418       1 genericapiserver.go:656] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W0222 03:56:25.846500       1 genericapiserver.go:656] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
W0222 03:56:25.851402       1 genericapiserver.go:656] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W0222 03:56:25.853981       1 genericapiserver.go:656] Skipping API node.k8s.io/v1beta1 because it has no resources.
W0222 03:56:25.854009       1 genericapiserver.go:656] Skipping API node.k8s.io/v1alpha1 because it has no resources.
W0222 03:56:25.854054       1 genericapiserver.go:656] Skipping API policy/v1beta1 because it has no resources.
W0222 03:56:25.856712       1 genericapiserver.go:656] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W0222 03:56:25.856737       1 genericapiserver.go:656] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
W0222 03:56:25.857559       1 genericapiserver.go:656] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W0222 03:56:25.857580       1 genericapiserver.go:656] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
W0222 03:56:25.860032       1 genericapiserver.go:656] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
W0222 03:56:25.861922       1 genericapiserver.go:656] Skipping API flowcontrol.apiserver.k8s.io/v1alpha1 because it has no resources.
W0222 03:56:25.863829       1 genericapiserver.go:656] Skipping API apps/v1beta2 because it has no resources.
W0222 03:56:25.863853       1 genericapiserver.go:656] Skipping API apps/v1beta1 because it has no resources.
W0222 03:56:25.864772       1 genericapiserver.go:656] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W0222 03:56:25.865469       1 genericapiserver.go:656] Skipping API events.k8s.io/v1beta1 because it has no resources.
I0222 03:56:25.866006       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0222 03:56:25.866023       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
W0222 03:56:25.878504       1 genericapiserver.go:656] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0222 03:56:26.653259       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0222 03:56:26.653408       1 secure_serving.go:210] Serving securely on [::]:6443
I0222 03:56:26.653432       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key"
I0222 03:56:26.653442       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0222 03:56:26.653274       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0222 03:56:26.654274       1 apf_controller.go:300] Starting API Priority and Fairness config controller
I0222 03:56:26.654415       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0222 03:56:26.654441       1 shared_informer.go:255] Waiting for caches to sync for cluster_authentication_trust_controller
I0222 03:56:26.654459       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key"
I0222 03:56:26.655365       1 available_controller.go:491] Starting AvailableConditionController
I0222 03:56:26.655379       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0222 03:56:26.655623       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0222 03:56:26.655643       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0222 03:56:26.655656       1 autoregister_controller.go:141] Starting autoregister controller
I0222 03:56:26.655658       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0222 03:56:26.670832       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0222 03:56:26.670854       1 shared_informer.go:255] Waiting for caches to sync for crd-autoregister
I0222 03:56:26.673287       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0222 03:56:26.673513       1 customresource_discovery_controller.go:209] Starting DiscoveryController
I0222 03:56:26.673827       1 controller.go:83] Starting OpenAPI AggregationController
I0222 03:56:26.675393       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0222 03:56:26.676368       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0222 03:56:26.677364       1 controller.go:85] Starting OpenAPI controller
I0222 03:56:26.677620       1 controller.go:85] Starting OpenAPI V3 controller
I0222 03:56:26.677727       1 naming_controller.go:291] Starting NamingConditionController
I0222 03:56:26.677762       1 establishing_controller.go:76] Starting EstablishingController
I0222 03:56:26.677798       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0222 03:56:26.677863       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0222 03:56:26.677885       1 crd_finalizer.go:266] Starting CRDFinalizer
I0222 03:56:26.683474       1 controller.go:616] quota admission added evaluator for: namespaces
I0222 03:56:26.714798       1 shared_informer.go:262] Caches are synced for node_authorizer
I0222 03:56:26.754458       1 apf_controller.go:305] Running API Priority and Fairness config worker
I0222 03:56:26.754591       1 shared_informer.go:262] Caches are synced for cluster_authentication_trust_controller
I0222 03:56:26.755427       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0222 03:56:26.755769       1 cache.go:39] Caches are synced for autoregister controller
I0222 03:56:26.756000       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0222 03:56:26.771794       1 shared_informer.go:262] Caches are synced for crd-autoregister
I0222 03:56:27.506183       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0222 03:56:27.656444       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0222 03:56:27.659332       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0222 03:56:27.659353       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0222 03:56:27.897013       1 controller.go:616] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0222 03:56:27.918149       1 controller.go:616] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0222 03:56:27.998485       1 alloc.go:327] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W0222 03:56:28.002061       1 lease.go:250] Resetting endpoints for master service "kubernetes" to [172.18.0.6]
I0222 03:56:28.002591       1 controller.go:616] quota admission added evaluator for: endpoints
I0222 03:56:28.004725       1 controller.go:616] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0222 03:56:29.504181       1 controller.go:616] quota admission added evaluator for: serviceaccounts
I0222 03:56:29.509514       1 controller.go:616] quota admission added evaluator for: deployments.apps
I0222 03:56:29.516949       1 alloc.go:327] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0222 03:56:29.525187       1 controller.go:616] quota admission added evaluator for: daemonsets.apps
I0222 03:56:29.569538       1 controller.go:616] quota admission added evaluator for: leases.coordination.k8s.io
I0222 03:56:44.083529       1 controller.go:616] quota admission added evaluator for: replicasets.apps
I0222 03:56:44.335664       1 controller.go:616] quota admission added evaluator for: controllerrevisions.apps
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-cni-acing-control-plane ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-cni-acing-control-plane ====
I0222 03:56:22.601312       1 serving.go:348] Generated self-signed cert in-memory
I0222 03:56:22.871195       1 controllermanager.go:178] Version: v1.25.0-beta.0
I0222 03:56:22.871212       1 controllermanager.go:180] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:56:22.871983       1 secure_serving.go:210] Serving securely on 127.0.0.1:10257
I0222 03:56:22.872052       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0222 03:56:22.872085       1 leaderelection.go:248] attempting to acquire leader lease kube-system/kube-controller-manager...
I0222 03:56:22.872103       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0222 03:56:22.872183       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
E0222 03:56:26.676037       1 leaderelection.go:330] error retrieving resource lock kube-system/kube-controller-manager: leases.coordination.k8s.io "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-system"
I0222 03:56:29.992664       1 leaderelection.go:258] successfully acquired lease kube-system/kube-controller-manager
I0222 03:56:29.993198       1 event.go:294] "Event occurred" object="kube-system/kube-controller-manager" fieldPath="" kind="Lease" apiVersion="coordination.k8s.io/v1" type="Normal" reason="LeaderElection" message="cni-acing-control-plane_7c646c5b-4c06-454f-b731-d1db70aab631 became leader"
I0222 03:56:30.001651       1 shared_informer.go:255] Waiting for caches to sync for tokens
I0222 03:56:30.010288       1 controllermanager.go:602] Started "garbagecollector"
I0222 03:56:30.010621       1 garbagecollector.go:154] Starting garbage collector controller
I0222 03:56:30.010989       1 shared_informer.go:255] Waiting for caches to sync for garbage collector
I0222 03:56:30.011015       1 graph_builder.go:291] GraphBuilder running
I0222 03:56:30.014523       1 controllermanager.go:602] Started "deployment"
I0222 03:56:30.014577       1 deployment_controller.go:160] "Starting controller" controller="deployment"
I0222 03:56:30.014587       1 shared_informer.go:255] Waiting for caches to sync for deployment
I0222 03:56:30.020948       1 controllermanager.go:602] Started "csrapproving"
I0222 03:56:30.021047       1 certificate_controller.go:112] Starting certificate controller "csrapproving"
I0222 03:56:30.021053       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrapproving
I0222 03:56:30.022412       1 controllermanager.go:602] Started "csrcleaner"
I0222 03:56:30.022486       1 cleaner.go:82] Starting CSR cleaner controller
I0222 03:56:30.027947       1 node_ipam_controller.go:92] Sending events to api server.
I0222 03:56:30.102342       1 shared_informer.go:262] Caches are synced for tokens
I0222 03:56:40.034489       1 range_allocator.go:83] Sending events to api server.
I0222 03:56:40.034565       1 range_allocator.go:117] No Secondary Service CIDR provided. Skipping filtering out secondary service addresses.
I0222 03:56:40.034579       1 controllermanager.go:602] Started "nodeipam"
W0222 03:56:40.034586       1 core.go:224] configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes.
W0222 03:56:40.034589       1 controllermanager.go:580] Skipping "route"
I0222 03:56:40.034700       1 node_ipam_controller.go:155] Starting ipam controller
I0222 03:56:40.034741       1 shared_informer.go:255] Waiting for caches to sync for node
I0222 03:56:40.038115       1 controllermanager.go:602] Started "clusterrole-aggregation"
I0222 03:56:40.038357       1 clusterroleaggregation_controller.go:194] Starting ClusterRoleAggregator
I0222 03:56:40.038365       1 shared_informer.go:255] Waiting for caches to sync for ClusterRoleAggregator
I0222 03:56:40.041605       1 controllermanager.go:602] Started "podgc"
I0222 03:56:40.041871       1 gc_controller.go:99] Starting GC controller
I0222 03:56:40.041893       1 shared_informer.go:255] Waiting for caches to sync for GC
I0222 03:56:40.045668       1 controllermanager.go:602] Started "root-ca-cert-publisher"
I0222 03:56:40.045849       1 publisher.go:107] Starting root CA certificate configmap publisher
I0222 03:56:40.045855       1 shared_informer.go:255] Waiting for caches to sync for crt configmap
I0222 03:56:40.048950       1 controllermanager.go:602] Started "pv-protection"
I0222 03:56:40.049012       1 pv_protection_controller.go:79] Starting PV protection controller
I0222 03:56:40.049032       1 shared_informer.go:255] Waiting for caches to sync for PV protection
I0222 03:56:40.052120       1 controllermanager.go:602] Started "pvc-protection"
I0222 03:56:40.052197       1 pvc_protection_controller.go:103] "Starting PVC protection controller"
I0222 03:56:40.052201       1 shared_informer.go:255] Waiting for caches to sync for PVC protection
I0222 03:56:40.053953       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-serving"
I0222 03:56:40.053973       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I0222 03:56:40.053987       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 03:56:40.054008       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-client"
I0222 03:56:40.054013       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I0222 03:56:40.054021       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 03:56:40.054035       1 controllermanager.go:602] Started "csrsigning"
I0222 03:56:40.054093       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kube-apiserver-client"
I0222 03:56:40.054098       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I0222 03:56:40.054104       1 certificate_controller.go:112] Starting certificate controller "csrsigning-legacy-unknown"
I0222 03:56:40.054107       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I0222 03:56:40.054106       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 03:56:40.054117       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 03:56:40.059055       1 controllermanager.go:602] Started "replicationcontroller"
I0222 03:56:40.059136       1 replica_set.go:205] Starting replicationcontroller controller
I0222 03:56:40.059151       1 shared_informer.go:255] Waiting for caches to sync for ReplicationController
I0222 03:56:40.063280       1 controllermanager.go:602] Started "disruption"
I0222 03:56:40.063360       1 disruption.go:421] Sending events to api server.
I0222 03:56:40.063389       1 disruption.go:432] Starting disruption controller
I0222 03:56:40.063393       1 shared_informer.go:255] Waiting for caches to sync for disruption
I0222 03:56:40.066683       1 controllermanager.go:602] Started "cronjob"
I0222 03:56:40.066786       1 cronjob_controllerv2.go:135] "Starting cronjob controller v2"
I0222 03:56:40.066792       1 shared_informer.go:255] Waiting for caches to sync for cronjob
I0222 03:56:40.082548       1 controllermanager.go:602] Started "tokencleaner"
I0222 03:56:40.082649       1 tokencleaner.go:118] Starting token cleaner controller
I0222 03:56:40.082654       1 shared_informer.go:255] Waiting for caches to sync for token_cleaner
I0222 03:56:40.082659       1 shared_informer.go:262] Caches are synced for token_cleaner
I0222 03:56:40.233187       1 controllermanager.go:602] Started "persistentvolume-expander"
I0222 03:56:40.233249       1 expand_controller.go:340] Starting expand controller
I0222 03:56:40.233255       1 shared_informer.go:255] Waiting for caches to sync for expand
I0222 03:56:40.381810       1 controllermanager.go:602] Started "ttl-after-finished"
I0222 03:56:40.381826       1 ttlafterfinished_controller.go:109] Starting TTL after finished controller
I0222 03:56:40.381852       1 shared_informer.go:255] Waiting for caches to sync for TTL after finished
I0222 03:56:40.533111       1 controllermanager.go:602] Started "endpointslice"
I0222 03:56:40.533213       1 endpointslice_controller.go:261] Starting endpoint slice controller
I0222 03:56:40.533387       1 shared_informer.go:255] Waiting for caches to sync for endpoint_slice
I0222 03:56:40.681872       1 controllermanager.go:602] Started "attachdetach"
I0222 03:56:40.682032       1 attach_detach_controller.go:328] Starting attach detach controller
I0222 03:56:40.682037       1 shared_informer.go:255] Waiting for caches to sync for attach detach
I0222 03:56:40.831111       1 controllermanager.go:602] Started "serviceaccount"
I0222 03:56:40.831156       1 serviceaccounts_controller.go:117] Starting service account controller
I0222 03:56:40.831161       1 shared_informer.go:255] Waiting for caches to sync for service account
I0222 03:56:40.881275       1 node_lifecycle_controller.go:497] Controller will reconcile labels.
I0222 03:56:40.881301       1 controllermanager.go:602] Started "nodelifecycle"
I0222 03:56:40.881335       1 node_lifecycle_controller.go:532] Sending events to api server.
I0222 03:56:40.881343       1 node_lifecycle_controller.go:543] Starting node controller
I0222 03:56:40.881346       1 shared_informer.go:255] Waiting for caches to sync for taint
I0222 03:56:41.033436       1 controllermanager.go:602] Started "daemonset"
I0222 03:56:41.033665       1 daemon_controller.go:291] Starting daemon sets controller
I0222 03:56:41.033682       1 shared_informer.go:255] Waiting for caches to sync for daemon sets
I0222 03:56:41.331605       1 controllermanager.go:602] Started "horizontalpodautoscaling"
I0222 03:56:41.331645       1 horizontal.go:168] Starting HPA controller
I0222 03:56:41.331650       1 shared_informer.go:255] Waiting for caches to sync for HPA
I0222 03:56:41.481343       1 controllermanager.go:602] Started "statefulset"
I0222 03:56:41.481410       1 stateful_set.go:152] Starting stateful set controller
I0222 03:56:41.481415       1 shared_informer.go:255] Waiting for caches to sync for stateful set
I0222 03:56:41.632247       1 controllermanager.go:602] Started "persistentvolume-binder"
I0222 03:56:41.632316       1 pv_controller_base.go:318] Starting persistent volume controller
I0222 03:56:41.632321       1 shared_informer.go:255] Waiting for caches to sync for persistent volume
I0222 03:56:41.782228       1 controllermanager.go:602] Started "ephemeral-volume"
I0222 03:56:41.782271       1 controller.go:169] Starting ephemeral volume controller
I0222 03:56:41.782275       1 shared_informer.go:255] Waiting for caches to sync for ephemeral
I0222 03:56:41.931612       1 controllermanager.go:602] Started "endpointslicemirroring"
I0222 03:56:41.931695       1 endpointslicemirroring_controller.go:216] Starting EndpointSliceMirroring controller
I0222 03:56:41.931704       1 shared_informer.go:255] Waiting for caches to sync for endpoint_slice_mirroring
I0222 03:56:42.186718       1 controllermanager.go:602] Started "namespace"
I0222 03:56:42.186775       1 namespace_controller.go:200] Starting namespace controller
I0222 03:56:42.186783       1 shared_informer.go:255] Waiting for caches to sync for namespace
I0222 03:56:42.332243       1 controllermanager.go:602] Started "job"
I0222 03:56:42.332287       1 job_controller.go:190] Starting job controller
I0222 03:56:42.332292       1 shared_informer.go:255] Waiting for caches to sync for job
I0222 03:56:42.481877       1 endpoints_controller.go:182] Starting endpoint controller
I0222 03:56:42.482038       1 shared_informer.go:255] Waiting for caches to sync for endpoint
I0222 03:56:42.481740       1 controllermanager.go:602] Started "endpoint"
I0222 03:56:42.632739       1 controllermanager.go:602] Started "replicaset"
I0222 03:56:42.632930       1 replica_set.go:205] Starting replicaset controller
I0222 03:56:42.632935       1 shared_informer.go:255] Waiting for caches to sync for ReplicaSet
I0222 03:56:42.781637       1 controllermanager.go:602] Started "ttl"
I0222 03:56:42.781674       1 ttl_controller.go:120] Starting TTL controller
I0222 03:56:42.781679       1 shared_informer.go:255] Waiting for caches to sync for TTL
I0222 03:56:42.931693       1 controllermanager.go:602] Started "bootstrapsigner"
I0222 03:56:42.931719       1 shared_informer.go:255] Waiting for caches to sync for bootstrap_signer
E0222 03:56:43.082148       1 core.go:90] Failed to start service controller: WARNING: no cloud provider provided, services of type LoadBalancer will fail
W0222 03:56:43.082173       1 controllermanager.go:580] Skipping "service"
E0222 03:56:43.130889       1 core.go:210] failed to start cloud node lifecycle controller: no cloud provider provided
W0222 03:56:43.130956       1 controllermanager.go:580] Skipping "cloud-node-lifecycle"
I0222 03:56:43.437127       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for ingresses.networking.k8s.io
I0222 03:56:43.437196       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for endpointslices.discovery.k8s.io
W0222 03:56:43.437212       1 shared_informer.go:533] resyncPeriod 14h9m39.463772466s is smaller than resyncCheckPeriod 20h27m15.04323363s and the informer has already started. Changing it to 20h27m15.04323363s
I0222 03:56:43.437263       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for daemonsets.apps
I0222 03:56:43.437391       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for horizontalpodautoscalers.autoscaling
I0222 03:56:43.437431       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for roles.rbac.authorization.k8s.io
W0222 03:56:43.437436       1 shared_informer.go:533] resyncPeriod 15h8m37.758032005s is smaller than resyncCheckPeriod 20h27m15.04323363s and the informer has already started. Changing it to 20h27m15.04323363s
I0222 03:56:43.437456       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for serviceaccounts
I0222 03:56:43.437467       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for rolebindings.rbac.authorization.k8s.io
I0222 03:56:43.437479       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for limitranges
I0222 03:56:43.437500       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for statefulsets.apps
I0222 03:56:43.437512       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for jobs.batch
I0222 03:56:43.437540       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for controllerrevisions.apps
I0222 03:56:43.437569       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for cronjobs.batch
I0222 03:56:43.437581       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for csistoragecapacities.storage.k8s.io
I0222 03:56:43.437589       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for endpoints
I0222 03:56:43.437603       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for podtemplates
I0222 03:56:43.437609       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for deployments.apps
I0222 03:56:43.437617       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for leases.coordination.k8s.io
I0222 03:56:43.437623       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for replicasets.apps
I0222 03:56:43.437644       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for networkpolicies.networking.k8s.io
I0222 03:56:43.437693       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for poddisruptionbudgets.policy
I0222 03:56:43.437793       1 controllermanager.go:602] Started "resourcequota"
I0222 03:56:43.437922       1 resource_quota_controller.go:277] Starting resource quota controller
I0222 03:56:43.437932       1 shared_informer.go:255] Waiting for caches to sync for resource quota
I0222 03:56:43.437940       1 resource_quota_monitor.go:295] QuotaMonitor running
I0222 03:56:43.444113       1 shared_informer.go:255] Waiting for caches to sync for resource quota
W0222 03:56:43.448480       1 actual_state_of_world.go:541] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="cni-acing-control-plane" does not exist
I0222 03:56:43.448586       1 shared_informer.go:262] Caches are synced for crt configmap
I0222 03:56:43.449108       1 shared_informer.go:262] Caches are synced for PV protection
I0222 03:56:43.451140       1 shared_informer.go:255] Waiting for caches to sync for garbage collector
I0222 03:56:43.452332       1 shared_informer.go:262] Caches are synced for PVC protection
I0222 03:56:43.454679       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0222 03:56:43.454713       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kubelet-serving
I0222 03:56:43.454783       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kubelet-client
I0222 03:56:43.454804       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-legacy-unknown
I0222 03:56:43.467187       1 shared_informer.go:262] Caches are synced for cronjob
I0222 03:56:43.482603       1 shared_informer.go:262] Caches are synced for TTL after finished
I0222 03:56:43.482835       1 shared_informer.go:262] Caches are synced for ephemeral
I0222 03:56:43.482850       1 shared_informer.go:262] Caches are synced for attach detach
I0222 03:56:43.483087       1 shared_informer.go:262] Caches are synced for endpoint
I0222 03:56:43.483347       1 shared_informer.go:262] Caches are synced for TTL
I0222 03:56:43.484356       1 shared_informer.go:262] Caches are synced for stateful set
I0222 03:56:43.515640       1 shared_informer.go:262] Caches are synced for deployment
I0222 03:56:43.521122       1 shared_informer.go:262] Caches are synced for certificate-csrapproving
I0222 03:56:43.531366       1 shared_informer.go:262] Caches are synced for service account
I0222 03:56:43.531867       1 shared_informer.go:262] Caches are synced for endpoint_slice_mirroring
I0222 03:56:43.531898       1 shared_informer.go:262] Caches are synced for HPA
I0222 03:56:43.532065       1 shared_informer.go:262] Caches are synced for bootstrap_signer
I0222 03:56:43.532336       1 shared_informer.go:262] Caches are synced for persistent volume
I0222 03:56:43.532379       1 shared_informer.go:262] Caches are synced for job
I0222 03:56:43.533954       1 shared_informer.go:262] Caches are synced for ReplicaSet
I0222 03:56:43.534082       1 shared_informer.go:262] Caches are synced for endpoint_slice
I0222 03:56:43.534369       1 shared_informer.go:262] Caches are synced for expand
I0222 03:56:43.535768       1 shared_informer.go:262] Caches are synced for node
I0222 03:56:43.535786       1 range_allocator.go:173] Starting range CIDR allocator
I0222 03:56:43.535789       1 shared_informer.go:255] Waiting for caches to sync for cidrallocator
I0222 03:56:43.535793       1 shared_informer.go:262] Caches are synced for cidrallocator
I0222 03:56:43.539092       1 shared_informer.go:262] Caches are synced for ClusterRoleAggregator
I0222 03:56:43.539652       1 range_allocator.go:374] Set node cni-acing-control-plane PodCIDR to [10.244.0.0/24]
I0222 03:56:43.542400       1 shared_informer.go:262] Caches are synced for GC
I0222 03:56:43.559547       1 shared_informer.go:262] Caches are synced for ReplicationController
I0222 03:56:43.564039       1 shared_informer.go:262] Caches are synced for disruption
I0222 03:56:43.587363       1 shared_informer.go:262] Caches are synced for namespace
I0222 03:56:43.634418       1 shared_informer.go:262] Caches are synced for daemon sets
I0222 03:56:43.645353       1 shared_informer.go:262] Caches are synced for resource quota
I0222 03:56:43.681701       1 shared_informer.go:262] Caches are synced for taint
I0222 03:56:43.681791       1 node_lifecycle_controller.go:1443] Initializing eviction metric for zone: 
W0222 03:56:43.681814       1 node_lifecycle_controller.go:1058] Missing timestamp for Node cni-acing-control-plane. Assuming now as a timestamp.
I0222 03:56:43.681833       1 node_lifecycle_controller.go:1209] Controller detected that all Nodes are not-Ready. Entering master disruption mode.
I0222 03:56:43.681867       1 taint_manager.go:204] "Starting NoExecuteTaintManager"
I0222 03:56:43.682043       1 taint_manager.go:209] "Sending events to api server"
I0222 03:56:43.682188       1 event.go:294] "Event occurred" object="cni-acing-control-plane" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node cni-acing-control-plane event: Registered Node cni-acing-control-plane in Controller"
I0222 03:56:43.689179       1 event.go:294] "Event occurred" object="kube-system/kube-controller-manager-cni-acing-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0222 03:56:43.689796       1 event.go:294] "Event occurred" object="kube-system/kube-apiserver-cni-acing-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0222 03:56:43.690874       1 event.go:294] "Event occurred" object="kube-system/etcd-cni-acing-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0222 03:56:43.691047       1 event.go:294] "Event occurred" object="kube-system/kube-scheduler-cni-acing-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0222 03:56:43.738547       1 shared_informer.go:262] Caches are synced for resource quota
I0222 03:56:44.051661       1 shared_informer.go:262] Caches are synced for garbage collector
I0222 03:56:44.085350       1 event.go:294] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-565d847f94 to 2"
I0222 03:56:44.088358       1 event.go:294] "Event occurred" object="local-path-storage/local-path-provisioner" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set local-path-provisioner-684f458cdd to 1"
I0222 03:56:44.111695       1 shared_informer.go:262] Caches are synced for garbage collector
I0222 03:56:44.111722       1 garbagecollector.go:163] Garbage collector: all resource monitors have synced. Proceeding to collect garbage
I0222 03:56:44.339408       1 event.go:294] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-l5k5w"
I0222 03:56:44.435325       1 event.go:294] "Event occurred" object="kube-system/coredns-565d847f94" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-565d847f94-4g7th"
I0222 03:56:44.442462       1 event.go:294] "Event occurred" object="kube-system/coredns-565d847f94" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-565d847f94-sn9vq"
I0222 03:56:44.446181       1 event.go:294] "Event occurred" object="local-path-storage/local-path-provisioner-684f458cdd" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: local-path-provisioner-684f458cdd-mtwhx"
W0222 03:56:51.603515       1 actual_state_of_world.go:541] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="cni-acing-worker" does not exist
I0222 03:56:51.607201       1 range_allocator.go:374] Set node cni-acing-worker PodCIDR to [10.244.1.0/24]
I0222 03:56:51.609686       1 event.go:294] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-vbzcx"
W0222 03:56:53.682871       1 node_lifecycle_controller.go:1058] Missing timestamp for Node cni-acing-worker. Assuming now as a timestamp.
I0222 03:56:53.682917       1 event.go:294] "Event occurred" object="cni-acing-worker" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node cni-acing-worker event: Registered Node cni-acing-worker in Controller"
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-cni-acing-control-plane ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-l5k5w ====
I0222 03:56:45.051409       1 node.go:163] Successfully retrieved node IP: 172.18.0.6
I0222 03:56:45.051458       1 server_others.go:138] "Detected node IP" address="172.18.0.6"
I0222 03:56:45.070286       1 server_others.go:206] "Using iptables Proxier"
I0222 03:56:45.070310       1 server_others.go:213] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0222 03:56:45.070314       1 server_others.go:214] "Creating dualStackProxier for iptables"
I0222 03:56:45.070321       1 server_others.go:501] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6"
I0222 03:56:45.070337       1 proxier.go:262] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0222 03:56:45.070402       1 proxier.go:262] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0222 03:56:45.070574       1 server.go:661] "Version info" version="v1.25.0-beta.0"
I0222 03:56:45.070593       1 server.go:663] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:56:45.070946       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0222 03:56:45.072024       1 config.go:317] "Starting service config controller"
I0222 03:56:45.072047       1 shared_informer.go:255] Waiting for caches to sync for service config
I0222 03:56:45.072117       1 config.go:444] "Starting node config controller"
I0222 03:56:45.072196       1 shared_informer.go:255] Waiting for caches to sync for node config
I0222 03:56:45.073992       1 config.go:226] "Starting endpoint slice config controller"
I0222 03:56:45.074013       1 shared_informer.go:255] Waiting for caches to sync for endpoint slice config
I0222 03:56:45.173324       1 shared_informer.go:262] Caches are synced for node config
I0222 03:56:45.173352       1 shared_informer.go:262] Caches are synced for service config
I0222 03:56:45.174685       1 shared_informer.go:262] Caches are synced for endpoint slice config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-l5k5w ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-vbzcx ====
I0222 03:56:53.741896       1 node.go:163] Successfully retrieved node IP: 172.18.0.5
I0222 03:56:53.741952       1 server_others.go:138] "Detected node IP" address="172.18.0.5"
I0222 03:56:53.761893       1 server_others.go:206] "Using iptables Proxier"
I0222 03:56:53.761918       1 server_others.go:213] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0222 03:56:53.761923       1 server_others.go:214] "Creating dualStackProxier for iptables"
I0222 03:56:53.761930       1 server_others.go:501] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6"
I0222 03:56:53.761951       1 proxier.go:262] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0222 03:56:53.762001       1 proxier.go:262] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0222 03:56:53.762121       1 server.go:661] "Version info" version="v1.25.0-beta.0"
I0222 03:56:53.762135       1 server.go:663] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:56:53.762307       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0222 03:56:53.762686       1 config.go:317] "Starting service config controller"
I0222 03:56:53.762869       1 shared_informer.go:255] Waiting for caches to sync for service config
I0222 03:56:53.762896       1 config.go:226] "Starting endpoint slice config controller"
I0222 03:56:53.762898       1 shared_informer.go:255] Waiting for caches to sync for endpoint slice config
I0222 03:56:53.764287       1 config.go:444] "Starting node config controller"
I0222 03:56:53.764411       1 shared_informer.go:255] Waiting for caches to sync for node config
I0222 03:56:53.863197       1 shared_informer.go:262] Caches are synced for endpoint slice config
I0222 03:56:53.863243       1 shared_informer.go:262] Caches are synced for service config
I0222 03:56:53.864994       1 shared_informer.go:262] Caches are synced for node config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-vbzcx ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-cni-acing-control-plane ====
I0222 03:56:22.602506       1 serving.go:348] Generated self-signed cert in-memory
W0222 03:56:26.676583       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0222 03:56:26.676613       1 authentication.go:346] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0222 03:56:26.676619       1 authentication.go:347] Continuing without authentication configuration. This may treat all requests as anonymous.
W0222 03:56:26.676622       1 authentication.go:348] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0222 03:56:26.689827       1 server.go:148] "Starting Kubernetes Scheduler" version="v1.25.0-beta.0"
I0222 03:56:26.690082       1 server.go:150] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:56:26.691230       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I0222 03:56:26.691325       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0222 03:56:26.691356       1 shared_informer.go:255] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0222 03:56:26.691366       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0222 03:56:26.693658       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0222 03:56:26.693807       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0222 03:56:26.693929       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0222 03:56:26.693941       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0222 03:56:26.693966       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0222 03:56:26.693970       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0222 03:56:26.693990       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0222 03:56:26.694007       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0222 03:56:26.694049       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0222 03:56:26.694081       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0222 03:56:26.694134       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0222 03:56:26.694147       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0222 03:56:26.694158       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0222 03:56:26.694161       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0222 03:56:26.694202       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0222 03:56:26.694218       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0222 03:56:26.694249       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0222 03:56:26.694260       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0222 03:56:26.694449       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0222 03:56:26.694481       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0222 03:56:26.694501       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0222 03:56:26.694505       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0222 03:56:26.694518       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0222 03:56:26.694522       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0222 03:56:26.694537       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0222 03:56:26.694540       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0222 03:56:26.694558       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0222 03:56:26.694578       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0222 03:56:26.694727       1 reflector.go:424] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0222 03:56:26.694733       1 reflector.go:140] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0222 03:56:27.507309       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0222 03:56:27.507337       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0222 03:56:27.517611       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0222 03:56:27.517634       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0222 03:56:27.541103       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0222 03:56:27.541167       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0222 03:56:27.589103       1 reflector.go:424] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0222 03:56:27.589125       1 reflector.go:140] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0222 03:56:27.608510       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0222 03:56:27.608591       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0222 03:56:27.661618       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0222 03:56:27.661757       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0222 03:56:27.717470       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0222 03:56:27.717506       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0222 03:56:27.792037       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0222 03:56:27.792092       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
I0222 03:56:30.292402       1 shared_informer.go:262] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0222 03:56:30.794622       1 leaderelection.go:248] attempting to acquire leader lease kube-system/kube-scheduler...
I0222 03:56:30.802307       1 leaderelection.go:258] successfully acquired lease kube-system/kube-scheduler
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-cni-acing-control-plane ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": [
        {
            "metadata": {
                "name": "cni-acing-control-plane.174609572916f23b",
                "namespace": "default",
                "uid": "8c418154-4ab7-4da7-8172-21091dcfecfc",
                "resourceVersion": "204",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:21Z",
            "lastTimestamp": "2023-02-22T03:56:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.1746095729ab5177",
                "namespace": "default",
                "uid": "10b2d334-d14c-4bb7-b042-09f4e7a903e6",
                "resourceVersion": "212",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node cni-acing-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:21Z",
            "lastTimestamp": "2023-02-22T03:56:21Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.1746095729ab58f4",
                "namespace": "default",
                "uid": "54242ab6-f6da-493f-8987-6d8a1c929930",
                "resourceVersion": "213",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node cni-acing-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:21Z",
            "lastTimestamp": "2023-02-22T03:56:21Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.1746095729ab5e7d",
                "namespace": "default",
                "uid": "01e0cf2f-55a5-43f3-81e5-25631d9e123d",
                "resourceVersion": "214",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node cni-acing-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:21Z",
            "lastTimestamp": "2023-02-22T03:56:21Z",
            "count": 3,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.174609572b012eb8",
                "namespace": "default",
                "uid": "cafcd5a5-a859-47bd-8c0d-d365655c46d8",
                "resourceVersion": "208",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:21Z",
            "lastTimestamp": "2023-02-22T03:56:21Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.174609591a91cc88",
                "namespace": "default",
                "uid": "88513012-0c18-48d0-a0a7-11e884fb360d",
                "resourceVersion": "237",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:29Z",
            "lastTimestamp": "2023-02-22T03:56:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.174609591ecf23a5",
                "namespace": "default",
                "uid": "04f8c839-9777-45ba-8a8d-a6237d8fc611",
                "resourceVersion": "239",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:29Z",
            "lastTimestamp": "2023-02-22T03:56:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.1746095921ea375c",
                "namespace": "default",
                "uid": "135c7f9b-264e-4ef7-9c0e-92b545f06b52",
                "resourceVersion": "240",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node cni-acing-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:29Z",
            "lastTimestamp": "2023-02-22T03:56:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.1746095921eb1028",
                "namespace": "default",
                "uid": "1960ad3a-983d-4919-9b2f-3bbe1d1f95b7",
                "resourceVersion": "241",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node cni-acing-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:29Z",
            "lastTimestamp": "2023-02-22T03:56:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.1746095921eb1a3f",
                "namespace": "default",
                "uid": "7ed35e74-b89c-4cbe-b7f8-635c55d2cde3",
                "resourceVersion": "242",
                "creationTimestamp": "2023-02-22T03:56:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node cni-acing-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:56:29Z",
            "lastTimestamp": "2023-02-22T03:56:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.1746095c65359d5d",
                "namespace": "default",
                "uid": "59c1aa11-3b1a-408e-aa3f-4ddabb7e963d",
                "resourceVersion": "324",
                "creationTimestamp": "2023-02-22T03:56:43Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "6e2363cc-5ffc-4d9d-b925-6e4a8fa3f262",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node cni-acing-control-plane event: Registered Node cni-acing-control-plane in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:43Z",
            "lastTimestamp": "2023-02-22T03:56:43Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-control-plane.1746095cb8124e96",
                "namespace": "default",
                "uid": "ef605c41-043c-4cd0-8419-4261e8a21d57",
                "resourceVersion": "390",
                "creationTimestamp": "2023-02-22T03:56:45Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-control-plane",
                "uid": "cni-acing-control-plane"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-02-22T03:56:45.071934Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-cni-acing-control-plane"
        },
        {
            "metadata": {
                "name": "cni-acing-worker.1746095e255a020a",
                "namespace": "default",
                "uid": "3f8e6526-f104-46b4-97c2-38476951b264",
                "resourceVersion": "408",
                "creationTimestamp": "2023-02-22T03:56:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-worker",
                "uid": "cni-acing-worker"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:56:51Z",
            "lastTimestamp": "2023-02-22T03:56:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-worker.1746095e264e8a76",
                "namespace": "default",
                "uid": "71dd8fbc-465c-4db4-a98b-70db7b593757",
                "resourceVersion": "413",
                "creationTimestamp": "2023-02-22T03:56:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-worker",
                "uid": "cni-acing-worker"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node cni-acing-worker status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:56:51Z",
            "lastTimestamp": "2023-02-22T03:56:51Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-worker.1746095e264e9316",
                "namespace": "default",
                "uid": "a1819b6a-cdec-434a-81a1-730a860ac59a",
                "resourceVersion": "414",
                "creationTimestamp": "2023-02-22T03:56:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-worker",
                "uid": "cni-acing-worker"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node cni-acing-worker status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:56:51Z",
            "lastTimestamp": "2023-02-22T03:56:51Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-worker.1746095e264e9a40",
                "namespace": "default",
                "uid": "216efdae-d6ea-45bd-819a-42c1c5f878ac",
                "resourceVersion": "415",
                "creationTimestamp": "2023-02-22T03:56:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-worker",
                "uid": "cni-acing-worker"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node cni-acing-worker status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:56:51Z",
            "lastTimestamp": "2023-02-22T03:56:51Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-worker.1746095e277e3635",
                "namespace": "default",
                "uid": "14a27bee-bbb9-4837-ab6b-6e11bcebdb3e",
                "resourceVersion": "412",
                "creationTimestamp": "2023-02-22T03:56:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-worker",
                "uid": "cni-acing-worker"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "cni-acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:56:51Z",
            "lastTimestamp": "2023-02-22T03:56:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-worker.1746095eb9519edf",
                "namespace": "default",
                "uid": "f948f1d4-e563-44e1-a0b3-a702fc00681e",
                "resourceVersion": "431",
                "creationTimestamp": "2023-02-22T03:56:53Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-worker",
                "uid": "aad7be46-3ce5-490a-b3cc-45998b104789",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node cni-acing-worker event: Registered Node cni-acing-worker in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:56:53Z",
            "lastTimestamp": "2023-02-22T03:56:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cni-acing-worker.1746095ebe11abf4",
                "namespace": "default",
                "uid": "70e5fd58-9044-46b6-9698-3986904ae97d",
                "resourceVersion": "433",
                "creationTimestamp": "2023-02-22T03:56:53Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "cni-acing-worker",
                "uid": "cni-acing-worker"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-02-22T03:56:53.762492Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-cni-acing-worker"
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "b88a0f3e-03dd-4273-ba48-74378f1d9721",
                "resourceVersion": "193",
                "creationTimestamp": "2023-02-22T03:56:27Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "586"
    },
    "items": []
}
