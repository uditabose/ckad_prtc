{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": [
        {
            "metadata": {
                "name": "acing-control-plane",
                "uid": "d1df0202-9e40-450a-b8a9-62db9b094152",
                "resourceVersion": "485",
                "creationTimestamp": "2023-02-22T03:18:31Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "acing-control-plane",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ],
                "providerID": "kind://docker/acing/acing-control-plane",
                "taints": [
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "5",
                    "ephemeral-storage": "61255492Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8039792Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "5",
                    "ephemeral-storage": "61255492Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8039792Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:18:55Z",
                        "lastTransitionTime": "2023-02-22T03:18:29Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:18:55Z",
                        "lastTransitionTime": "2023-02-22T03:18:29Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:18:55Z",
                        "lastTransitionTime": "2023-02-22T03:18:29Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2023-02-22T03:18:55Z",
                        "lastTransitionTime": "2023-02-22T03:18:55Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.4"
                    },
                    {
                        "type": "Hostname",
                        "address": "acing-control-plane"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "5606d8d9803749fbbcd92226b75c3e01",
                    "systemUUID": "5606d8d9803749fbbcd92226b75c3e01",
                    "bootID": "f0a096b1-b971-4c8f-a4a0-699728a6a63c",
                    "kernelVersion": "5.10.104-linuxkit",
                    "osImage": "Ubuntu 22.04.1 LTS",
                    "containerRuntimeVersion": "containerd://1.6.9",
                    "kubeletVersion": "v1.25.3",
                    "kubeProxyVersion": "v1.25.3",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.4-0"
                        ],
                        "sizeBytes": 81120118
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:c666c2ddbc056f8aba649a2647a26d3f6224bce857613b91be6075c88ca963a1",
                            "registry.k8s.io/kube-apiserver:v1.25.3"
                        ],
                        "sizeBytes": 74211819
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:8584d5d11885180c547784653a575ab8f6a983b6557bc77ddf577a4a0b4b6dec",
                            "registry.k8s.io/kube-controller-manager:v1.25.3"
                        ],
                        "sizeBytes": 62283900
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:2f5536b3e12d9862d10103b10756684ac451b11eda25b62b9ceff71fdc3fd657",
                            "registry.k8s.io/kube-proxy:v1.25.3"
                        ],
                        "sizeBytes": 59581437
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:f935a2ebcacd3788ccd8e8e800fbdf1fc5b80892db99d037797cddf4089273ed",
                            "registry.k8s.io/kube-scheduler:v1.25.3"
                        ],
                        "sizeBytes": 50618490
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20221004-44d545d1"
                        ],
                        "sizeBytes": 23673212
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v0.0.22-kind.0"
                        ],
                        "sizeBytes": 15578330
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.9.3"
                        ],
                        "sizeBytes": 13423150
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20220607-9a4d8d2a"
                        ],
                        "sizeBytes": 2749880
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 268400
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "acing-worker",
                "uid": "48f742c7-4c8f-4bf8-b622-6f221913fc38",
                "resourceVersion": "544",
                "creationTimestamp": "2023-02-22T03:18:51Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "acing-worker",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.1.0/24",
                "podCIDRs": [
                    "10.244.1.0/24"
                ],
                "providerID": "kind://docker/acing/acing-worker"
            },
            "status": {
                "capacity": {
                    "cpu": "5",
                    "ephemeral-storage": "61255492Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8039792Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "5",
                    "ephemeral-storage": "61255492Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8039792Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:19:01Z",
                        "lastTransitionTime": "2023-02-22T03:18:51Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:19:01Z",
                        "lastTransitionTime": "2023-02-22T03:18:51Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:19:01Z",
                        "lastTransitionTime": "2023-02-22T03:18:51Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2023-02-22T03:19:01Z",
                        "lastTransitionTime": "2023-02-22T03:19:01Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.3"
                    },
                    {
                        "type": "Hostname",
                        "address": "acing-worker"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "c0ec861b363945eeb6ffeaa06ab4fd0a",
                    "systemUUID": "c0ec861b363945eeb6ffeaa06ab4fd0a",
                    "bootID": "f0a096b1-b971-4c8f-a4a0-699728a6a63c",
                    "kernelVersion": "5.10.104-linuxkit",
                    "osImage": "Ubuntu 22.04.1 LTS",
                    "containerRuntimeVersion": "containerd://1.6.9",
                    "kubeletVersion": "v1.25.3",
                    "kubeProxyVersion": "v1.25.3",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.4-0"
                        ],
                        "sizeBytes": 81120118
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:c666c2ddbc056f8aba649a2647a26d3f6224bce857613b91be6075c88ca963a1",
                            "registry.k8s.io/kube-apiserver:v1.25.3"
                        ],
                        "sizeBytes": 74211819
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:8584d5d11885180c547784653a575ab8f6a983b6557bc77ddf577a4a0b4b6dec",
                            "registry.k8s.io/kube-controller-manager:v1.25.3"
                        ],
                        "sizeBytes": 62283900
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:2f5536b3e12d9862d10103b10756684ac451b11eda25b62b9ceff71fdc3fd657",
                            "registry.k8s.io/kube-proxy:v1.25.3"
                        ],
                        "sizeBytes": 59581437
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:f935a2ebcacd3788ccd8e8e800fbdf1fc5b80892db99d037797cddf4089273ed",
                            "registry.k8s.io/kube-scheduler:v1.25.3"
                        ],
                        "sizeBytes": 50618490
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20221004-44d545d1"
                        ],
                        "sizeBytes": 23673212
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v0.0.22-kind.0"
                        ],
                        "sizeBytes": 15578330
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.9.3"
                        ],
                        "sizeBytes": 13423150
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20220607-9a4d8d2a"
                        ],
                        "sizeBytes": 2749880
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 268400
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "acing-worker2",
                "uid": "d4b840cd-f2ed-4fb9-babb-0499b10784fb",
                "resourceVersion": "540",
                "creationTimestamp": "2023-02-22T03:18:51Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "acing-worker2",
                    "kubernetes.io/os": "linux"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.2.0/24",
                "podCIDRs": [
                    "10.244.2.0/24"
                ],
                "providerID": "kind://docker/acing/acing-worker2"
            },
            "status": {
                "capacity": {
                    "cpu": "5",
                    "ephemeral-storage": "61255492Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8039792Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "5",
                    "ephemeral-storage": "61255492Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "8039792Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:19:01Z",
                        "lastTransitionTime": "2023-02-22T03:18:51Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:19:01Z",
                        "lastTransitionTime": "2023-02-22T03:18:51Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2023-02-22T03:19:01Z",
                        "lastTransitionTime": "2023-02-22T03:18:51Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2023-02-22T03:19:01Z",
                        "lastTransitionTime": "2023-02-22T03:19:01Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.2"
                    },
                    {
                        "type": "Hostname",
                        "address": "acing-worker2"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "cc1004413af147eebb335f842c5ca1f4",
                    "systemUUID": "cc1004413af147eebb335f842c5ca1f4",
                    "bootID": "f0a096b1-b971-4c8f-a4a0-699728a6a63c",
                    "kernelVersion": "5.10.104-linuxkit",
                    "osImage": "Ubuntu 22.04.1 LTS",
                    "containerRuntimeVersion": "containerd://1.6.9",
                    "kubeletVersion": "v1.25.3",
                    "kubeProxyVersion": "v1.25.3",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.4-0"
                        ],
                        "sizeBytes": 81120118
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:c666c2ddbc056f8aba649a2647a26d3f6224bce857613b91be6075c88ca963a1",
                            "registry.k8s.io/kube-apiserver:v1.25.3"
                        ],
                        "sizeBytes": 74211819
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:8584d5d11885180c547784653a575ab8f6a983b6557bc77ddf577a4a0b4b6dec",
                            "registry.k8s.io/kube-controller-manager:v1.25.3"
                        ],
                        "sizeBytes": 62283900
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:2f5536b3e12d9862d10103b10756684ac451b11eda25b62b9ceff71fdc3fd657",
                            "registry.k8s.io/kube-proxy:v1.25.3"
                        ],
                        "sizeBytes": 59581437
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-10-25@sha256:f935a2ebcacd3788ccd8e8e800fbdf1fc5b80892db99d037797cddf4089273ed",
                            "registry.k8s.io/kube-scheduler:v1.25.3"
                        ],
                        "sizeBytes": 50618490
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20221004-44d545d1"
                        ],
                        "sizeBytes": 23673212
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v0.0.22-kind.0"
                        ],
                        "sizeBytes": 15578330
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.9.3"
                        ],
                        "sizeBytes": 13423150
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20220607-9a4d8d2a"
                        ],
                        "sizeBytes": 2749880
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 268400
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-565d847f94-m89qd.1746074aba2daffe",
                "namespace": "kube-system",
                "uid": "7509d066-1327-40d8-b123-b8b9f219a7a5",
                "resourceVersion": "347",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-m89qd",
                "uid": "84a3c29c-4200-46b4-9ce1-bed37c092eb4",
                "apiVersion": "v1",
                "resourceVersion": "342"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-m89qd.1746074c3119d42e",
                "namespace": "kube-system",
                "uid": "405e5041-9ffc-4483-a9b8-82c7538b1891",
                "resourceVersion": "491",
                "creationTimestamp": "2023-02-22T03:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-m89qd",
                "uid": "84a3c29c-4200-46b4-9ce1-bed37c092eb4",
                "apiVersion": "v1",
                "resourceVersion": "349"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-565d847f94-m89qd to acing-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:55Z",
            "lastTimestamp": "2023-02-22T03:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-m89qd.1746074c5bc030c5",
                "namespace": "kube-system",
                "uid": "405d1313-3306-4965-8d4d-a87b778199e0",
                "resourceVersion": "500",
                "creationTimestamp": "2023-02-22T03:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-m89qd",
                "uid": "84a3c29c-4200-46b4-9ce1-bed37c092eb4",
                "apiVersion": "v1",
                "resourceVersion": "486",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.9.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:55Z",
            "lastTimestamp": "2023-02-22T03:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-m89qd.1746074c7ad461c3",
                "namespace": "kube-system",
                "uid": "9371ba71-6b51-4389-a16e-f85528265a49",
                "resourceVersion": "506",
                "creationTimestamp": "2023-02-22T03:18:56Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-m89qd",
                "uid": "84a3c29c-4200-46b4-9ce1-bed37c092eb4",
                "apiVersion": "v1",
                "resourceVersion": "486",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:56Z",
            "lastTimestamp": "2023-02-22T03:18:56Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-m89qd.1746074c7f87c579",
                "namespace": "kube-system",
                "uid": "aa5d5ef5-f1fd-4898-b731-004a744648bf",
                "resourceVersion": "508",
                "creationTimestamp": "2023-02-22T03:18:56Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-m89qd",
                "uid": "84a3c29c-4200-46b4-9ce1-bed37c092eb4",
                "apiVersion": "v1",
                "resourceVersion": "486",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:56Z",
            "lastTimestamp": "2023-02-22T03:18:56Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-nh92p.1746074abaaf6a9a",
                "namespace": "kube-system",
                "uid": "fc58519b-6b0f-4e6f-9167-5ad278c22e0b",
                "resourceVersion": "353",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-nh92p",
                "uid": "773e6f8c-0d27-4612-a5ef-8359ab5514ca",
                "apiVersion": "v1",
                "resourceVersion": "345"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-nh92p.1746074c31187f09",
                "namespace": "kube-system",
                "uid": "9c26d9c3-eeb3-4f77-b896-37c7b3ab4cda",
                "resourceVersion": "490",
                "creationTimestamp": "2023-02-22T03:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-nh92p",
                "uid": "773e6f8c-0d27-4612-a5ef-8359ab5514ca",
                "apiVersion": "v1",
                "resourceVersion": "354"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-565d847f94-nh92p to acing-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:55Z",
            "lastTimestamp": "2023-02-22T03:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-nh92p.1746074c5bfc5c40",
                "namespace": "kube-system",
                "uid": "011a7c4f-fedd-4a99-928c-1069815b9bbf",
                "resourceVersion": "501",
                "creationTimestamp": "2023-02-22T03:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-nh92p",
                "uid": "773e6f8c-0d27-4612-a5ef-8359ab5514ca",
                "apiVersion": "v1",
                "resourceVersion": "488",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.9.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:55Z",
            "lastTimestamp": "2023-02-22T03:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-nh92p.1746074c7a8fe9c5",
                "namespace": "kube-system",
                "uid": "d71c21bb-5509-43dd-b9e4-d14f4bbda6ce",
                "resourceVersion": "505",
                "creationTimestamp": "2023-02-22T03:18:56Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-nh92p",
                "uid": "773e6f8c-0d27-4612-a5ef-8359ab5514ca",
                "apiVersion": "v1",
                "resourceVersion": "488",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:56Z",
            "lastTimestamp": "2023-02-22T03:18:56Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-nh92p.1746074c7f80366a",
                "namespace": "kube-system",
                "uid": "9701d13c-2d2c-4607-88d1-da3bf0fbde31",
                "resourceVersion": "507",
                "creationTimestamp": "2023-02-22T03:18:56Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-565d847f94-nh92p",
                "uid": "773e6f8c-0d27-4612-a5ef-8359ab5514ca",
                "apiVersion": "v1",
                "resourceVersion": "488",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:56Z",
            "lastTimestamp": "2023-02-22T03:18:56Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94.1746074aba28076c",
                "namespace": "kube-system",
                "uid": "19a60279-d293-4f61-8d26-5addad4a6fa8",
                "resourceVersion": "344",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-565d847f94",
                "uid": "4d9b5b2e-93aa-4237-8cd8-ae7c52a88b7b",
                "apiVersion": "apps/v1",
                "resourceVersion": "314"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-565d847f94-m89qd",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-565d847f94.1746074aba7f67ea",
                "namespace": "kube-system",
                "uid": "67ca965d-bf4a-4907-81ce-effd51587222",
                "resourceVersion": "352",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-565d847f94",
                "uid": "4d9b5b2e-93aa-4237-8cd8-ae7c52a88b7b",
                "apiVersion": "apps/v1",
                "resourceVersion": "314"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-565d847f94-nh92p",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.1746074a9c84f492",
                "namespace": "kube-system",
                "uid": "3b94ad80-48e2-4795-a889-dbda5f79d39c",
                "resourceVersion": "317",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "3aef7b35-5208-430a-b353-9ffcc7b6ce74",
                "apiVersion": "apps/v1",
                "resourceVersion": "217"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-565d847f94 to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "etcd-acing-control-plane.1746074aa58cffdf",
                "namespace": "kube-system",
                "uid": "c60fdf17-c952-445e-afb4-b26508e37ed1",
                "resourceVersion": "329",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "etcd-acing-control-plane",
                "uid": "a0745c1a-1f06-47a1-9b29-5162cf0f2243",
                "apiVersion": "v1",
                "resourceVersion": "308"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-5thgl.1746074b6366e01e",
                "namespace": "kube-system",
                "uid": "42e27935-28a5-4da4-8101-b97d64e567f5",
                "resourceVersion": "447",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-5thgl",
                "uid": "ba488d3c-20f5-4b6a-911b-fcf83d407a2f",
                "apiVersion": "v1",
                "resourceVersion": "438"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-5thgl to acing-worker2",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-5thgl.1746074be0dc3853",
                "namespace": "kube-system",
                "uid": "b05f280e-cb67-4074-8ccd-1fb49addce21",
                "resourceVersion": "463",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-5thgl",
                "uid": "ba488d3c-20f5-4b6a-911b-fcf83d407a2f",
                "apiVersion": "v1",
                "resourceVersion": "440",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20221004-44d545d1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:53Z",
            "lastTimestamp": "2023-02-22T03:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-5thgl.1746074bf86f7676",
                "namespace": "kube-system",
                "uid": "e84056e0-deaf-4f75-9618-0f9b2f1f6aea",
                "resourceVersion": "470",
                "creationTimestamp": "2023-02-22T03:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-5thgl",
                "uid": "ba488d3c-20f5-4b6a-911b-fcf83d407a2f",
                "apiVersion": "v1",
                "resourceVersion": "440",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:54Z",
            "lastTimestamp": "2023-02-22T03:18:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-5thgl.1746074c0a1e82c7",
                "namespace": "kube-system",
                "uid": "b4720f42-9b8e-4b70-ae68-abbcf8fd1b8b",
                "resourceVersion": "476",
                "creationTimestamp": "2023-02-22T03:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-5thgl",
                "uid": "ba488d3c-20f5-4b6a-911b-fcf83d407a2f",
                "apiVersion": "v1",
                "resourceVersion": "440",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:54Z",
            "lastTimestamp": "2023-02-22T03:18:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-bw5zp.1746074b630ce73d",
                "namespace": "kube-system",
                "uid": "93cbf84a-8945-4871-888d-5c2b3dd8fe12",
                "resourceVersion": "436",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-bw5zp",
                "uid": "2d938c97-48d5-4426-a133-83469a324b1c",
                "apiVersion": "v1",
                "resourceVersion": "427"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-bw5zp to acing-worker",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-bw5zp.1746074be64bf2b6",
                "namespace": "kube-system",
                "uid": "36c48fba-eecb-4c7b-b20e-dfed05d9c635",
                "resourceVersion": "466",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-bw5zp",
                "uid": "2d938c97-48d5-4426-a133-83469a324b1c",
                "apiVersion": "v1",
                "resourceVersion": "434",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20221004-44d545d1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:53Z",
            "lastTimestamp": "2023-02-22T03:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-bw5zp.1746074bfdd0bab3",
                "namespace": "kube-system",
                "uid": "d1aaa60f-ca1f-468a-88f6-9f562ae7bcda",
                "resourceVersion": "471",
                "creationTimestamp": "2023-02-22T03:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-bw5zp",
                "uid": "2d938c97-48d5-4426-a133-83469a324b1c",
                "apiVersion": "v1",
                "resourceVersion": "434",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:54Z",
            "lastTimestamp": "2023-02-22T03:18:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-bw5zp.1746074c102d6fe3",
                "namespace": "kube-system",
                "uid": "9d682bf9-2bc3-4c56-a3a8-0cdb9b3aefeb",
                "resourceVersion": "481",
                "creationTimestamp": "2023-02-22T03:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-bw5zp",
                "uid": "2d938c97-48d5-4426-a133-83469a324b1c",
                "apiVersion": "v1",
                "resourceVersion": "434",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:54Z",
            "lastTimestamp": "2023-02-22T03:18:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-gfbqg.1746074acf7fbf03",
                "namespace": "kube-system",
                "uid": "84bcc5d9-e45f-4370-8ff5-8624de3f591e",
                "resourceVersion": "379",
                "creationTimestamp": "2023-02-22T03:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-gfbqg",
                "uid": "82de6f0b-1010-4dbd-a23e-83735ea58266",
                "apiVersion": "v1",
                "resourceVersion": "371"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-gfbqg to acing-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:49Z",
            "lastTimestamp": "2023-02-22T03:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-gfbqg.1746074ae656d45e",
                "namespace": "kube-system",
                "uid": "6343b159-b4b0-4954-9faf-8b1594a3dafc",
                "resourceVersion": "387",
                "creationTimestamp": "2023-02-22T03:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-gfbqg",
                "uid": "82de6f0b-1010-4dbd-a23e-83735ea58266",
                "apiVersion": "v1",
                "resourceVersion": "374",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20221004-44d545d1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:49Z",
            "lastTimestamp": "2023-02-22T03:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-gfbqg.1746074b0c3e55dc",
                "namespace": "kube-system",
                "uid": "ea198749-fbca-4901-ab16-5088fa45be3d",
                "resourceVersion": "399",
                "creationTimestamp": "2023-02-22T03:18:50Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-gfbqg",
                "uid": "82de6f0b-1010-4dbd-a23e-83735ea58266",
                "apiVersion": "v1",
                "resourceVersion": "374",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:50Z",
            "lastTimestamp": "2023-02-22T03:18:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-gfbqg.1746074b1ba110f7",
                "namespace": "kube-system",
                "uid": "3c5ea0ed-ff27-4863-8e6f-f4d43e575bbc",
                "resourceVersion": "400",
                "creationTimestamp": "2023-02-22T03:18:50Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-gfbqg",
                "uid": "82de6f0b-1010-4dbd-a23e-83735ea58266",
                "apiVersion": "v1",
                "resourceVersion": "374",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:50Z",
            "lastTimestamp": "2023-02-22T03:18:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.1746074acf2d3357",
                "namespace": "kube-system",
                "uid": "5b6d3e5f-a92a-4894-943f-da7ba86db8ce",
                "resourceVersion": "373",
                "creationTimestamp": "2023-02-22T03:18:49Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "39f06a22-ba6a-4812-a1de-5c96cefc8ca0",
                "apiVersion": "apps/v1",
                "resourceVersion": "258"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-gfbqg",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:49Z",
            "lastTimestamp": "2023-02-22T03:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.1746074b62b120f0",
                "namespace": "kube-system",
                "uid": "f0562874-3911-4268-98b7-f73422e5579a",
                "resourceVersion": "430",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "39f06a22-ba6a-4812-a1de-5c96cefc8ca0",
                "apiVersion": "apps/v1",
                "resourceVersion": "402"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-bw5zp",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.1746074b63492e3b",
                "namespace": "kube-system",
                "uid": "85ccacb3-4484-4214-8ece-113cbbb4262b",
                "resourceVersion": "444",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "39f06a22-ba6a-4812-a1de-5c96cefc8ca0",
                "apiVersion": "apps/v1",
                "resourceVersion": "402"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-5thgl",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-apiserver-acing-control-plane.1746074aa58d1314",
                "namespace": "kube-system",
                "uid": "f007b24b-18f4-4b96-899f-1a850e1481c6",
                "resourceVersion": "330",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-apiserver-acing-control-plane",
                "uid": "da3ca037-5bc8-4e4e-afb8-bc9e8a35aa1f",
                "apiVersion": "v1",
                "resourceVersion": "278"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager-acing-control-plane.1746074aa58c00aa",
                "namespace": "kube-system",
                "uid": "24e7ca49-9554-4c54-b2f5-2d21aa672a09",
                "resourceVersion": "328",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-controller-manager-acing-control-plane",
                "uid": "8b88f282-568d-4039-b539-ce9f16f43b34",
                "apiVersion": "v1",
                "resourceVersion": "282"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager.174607479abc3366",
                "namespace": "kube-system",
                "uid": "4dc94b1a-0fe1-44e7-8941-d6f1a7b9c2c8",
                "resourceVersion": "238",
                "creationTimestamp": "2023-02-22T03:18:35Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "44887d05-6eac-4ad8-b727-ac291fece565",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "237"
            },
            "reason": "LeaderElection",
            "message": "acing-control-plane_8200d1ce-4ee0-4396-b162-00325c50195d became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2023-02-22T03:18:35Z",
            "lastTimestamp": "2023-02-22T03:18:35Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-6z4z4.1746074acf81b715",
                "namespace": "kube-system",
                "uid": "a599442b-7673-4bb5-88f5-61e4161b73fa",
                "resourceVersion": "381",
                "creationTimestamp": "2023-02-22T03:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-6z4z4",
                "uid": "6f7ba60e-7475-47c0-9a58-207d18b19234",
                "apiVersion": "v1",
                "resourceVersion": "372"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-6z4z4 to acing-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:49Z",
            "lastTimestamp": "2023-02-22T03:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-6z4z4.1746074ae6ddd0ae",
                "namespace": "kube-system",
                "uid": "e22bb0d4-9141-4cba-8d72-7478546396ff",
                "resourceVersion": "388",
                "creationTimestamp": "2023-02-22T03:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-6z4z4",
                "uid": "6f7ba60e-7475-47c0-9a58-207d18b19234",
                "apiVersion": "v1",
                "resourceVersion": "376",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.25.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:49Z",
            "lastTimestamp": "2023-02-22T03:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-6z4z4.1746074af65d9179",
                "namespace": "kube-system",
                "uid": "6ad2b689-57cd-499f-8467-5d7c320bd218",
                "resourceVersion": "389",
                "creationTimestamp": "2023-02-22T03:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-6z4z4",
                "uid": "6f7ba60e-7475-47c0-9a58-207d18b19234",
                "apiVersion": "v1",
                "resourceVersion": "376",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:49Z",
            "lastTimestamp": "2023-02-22T03:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-6z4z4.1746074afc73217a",
                "namespace": "kube-system",
                "uid": "f4a3c9e2-28bc-4578-9443-b45e2edc6a76",
                "resourceVersion": "391",
                "creationTimestamp": "2023-02-22T03:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-6z4z4",
                "uid": "6f7ba60e-7475-47c0-9a58-207d18b19234",
                "apiVersion": "v1",
                "resourceVersion": "376",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:49Z",
            "lastTimestamp": "2023-02-22T03:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-g627l.1746074b63432096",
                "namespace": "kube-system",
                "uid": "0de13c9a-6cf2-4f11-b5d8-4f25abb011c2",
                "resourceVersion": "443",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-g627l",
                "uid": "f4d1f491-6a45-4464-9f9e-6b6a1057e2e8",
                "apiVersion": "v1",
                "resourceVersion": "435"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-g627l to acing-worker2",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-g627l.1746074bcd97addb",
                "namespace": "kube-system",
                "uid": "6d224763-d659-4f9b-89c5-3194be6b7a57",
                "resourceVersion": "453",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-g627l",
                "uid": "f4d1f491-6a45-4464-9f9e-6b6a1057e2e8",
                "apiVersion": "v1",
                "resourceVersion": "439",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.25.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:53Z",
            "lastTimestamp": "2023-02-22T03:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-g627l.1746074bdb11bbb9",
                "namespace": "kube-system",
                "uid": "97727475-ef13-4922-a421-d4fb4dd07396",
                "resourceVersion": "460",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-g627l",
                "uid": "f4d1f491-6a45-4464-9f9e-6b6a1057e2e8",
                "apiVersion": "v1",
                "resourceVersion": "439",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:53Z",
            "lastTimestamp": "2023-02-22T03:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-g627l.1746074bdf3ed8eb",
                "namespace": "kube-system",
                "uid": "eacf46c8-c3a9-47dc-89c4-67087b3f7306",
                "resourceVersion": "462",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-g627l",
                "uid": "f4d1f491-6a45-4464-9f9e-6b6a1057e2e8",
                "apiVersion": "v1",
                "resourceVersion": "439",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:53Z",
            "lastTimestamp": "2023-02-22T03:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-v76cb.1746074b6310724e",
                "namespace": "kube-system",
                "uid": "ffb2a2df-a3a4-4ee8-8cca-d3cf53cbaed4",
                "resourceVersion": "442",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-v76cb",
                "uid": "c7f5f6e0-80a1-4d94-a942-e589b30df044",
                "apiVersion": "v1",
                "resourceVersion": "426"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-v76cb to acing-worker",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-v76cb.1746074bcd6a660f",
                "namespace": "kube-system",
                "uid": "37968503-4953-4987-82e0-a1598091b57b",
                "resourceVersion": "452",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-v76cb",
                "uid": "c7f5f6e0-80a1-4d94-a942-e589b30df044",
                "apiVersion": "v1",
                "resourceVersion": "431",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.25.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:53Z",
            "lastTimestamp": "2023-02-22T03:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-v76cb.1746074bda4a12c4",
                "namespace": "kube-system",
                "uid": "194f93ef-9789-4b37-9eb6-46c35b084e16",
                "resourceVersion": "459",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-v76cb",
                "uid": "c7f5f6e0-80a1-4d94-a942-e589b30df044",
                "apiVersion": "v1",
                "resourceVersion": "431",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:53Z",
            "lastTimestamp": "2023-02-22T03:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-v76cb.1746074bdebe688c",
                "namespace": "kube-system",
                "uid": "40380b72-ca08-479f-b9e6-1730a2121be8",
                "resourceVersion": "461",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-v76cb",
                "uid": "c7f5f6e0-80a1-4d94-a942-e589b30df044",
                "apiVersion": "v1",
                "resourceVersion": "431",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:53Z",
            "lastTimestamp": "2023-02-22T03:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.1746074acf49fe1c",
                "namespace": "kube-system",
                "uid": "9a4b9f27-6517-4a4e-9887-30ca70d015e7",
                "resourceVersion": "377",
                "creationTimestamp": "2023-02-22T03:18:49Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "bd27a2a4-4bf6-4d0f-aaf9-8bd93f5a59cf",
                "apiVersion": "apps/v1",
                "resourceVersion": "221"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-6z4z4",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:49Z",
            "lastTimestamp": "2023-02-22T03:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.1746074b62b17880",
                "namespace": "kube-system",
                "uid": "53040c16-71da-4e7d-80d3-00fe653cd2d3",
                "resourceVersion": "437",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "bd27a2a4-4bf6-4d0f-aaf9-8bd93f5a59cf",
                "apiVersion": "apps/v1",
                "resourceVersion": "404"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-v76cb",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.1746074b63224b50",
                "namespace": "kube-system",
                "uid": "72a6d740-3da3-45eb-abf9-33a6e89b2c29",
                "resourceVersion": "441",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "bd27a2a4-4bf6-4d0f-aaf9-8bd93f5a59cf",
                "apiVersion": "apps/v1",
                "resourceVersion": "404"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-g627l",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler-acing-control-plane.1746074aa5896652",
                "namespace": "kube-system",
                "uid": "e3a57b0f-f9cc-434f-9e2f-479472892389",
                "resourceVersion": "327",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-scheduler-acing-control-plane",
                "uid": "ac78ad39-9655-4618-be52-69eb66aeefb7",
                "apiVersion": "v1",
                "resourceVersion": "276"
            },
            "reason": "NodeNotReady",
            "message": "Node is not ready",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.17460747b61f472c",
                "namespace": "kube-system",
                "uid": "8317a259-6b1c-456f-9301-9b2618e7e9f5",
                "resourceVersion": "252",
                "creationTimestamp": "2023-02-22T03:18:35Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "1ec84f41-0d0b-4426-a989-6d50cf68af9b",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "251"
            },
            "reason": "LeaderElection",
            "message": "acing-control-plane_c39a03ef-9ab1-4a1c-8d29-31068a257382 became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2023-02-22T03:18:35Z",
            "lastTimestamp": "2023-02-22T03:18:35Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "cb8d3130-dc34-4f50-810b-0a02b0bad9fa",
                "resourceVersion": "219",
                "creationTimestamp": "2023-02-22T03:18:34Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": [
        {
            "metadata": {
                "name": "kindnet",
                "namespace": "kube-system",
                "uid": "39f06a22-ba6a-4812-a1de-5c96cefc8ca0",
                "resourceVersion": "498",
                "generation": 1,
                "creationTimestamp": "2023-02-22T03:18:36Z",
                "labels": {
                    "app": "kindnet",
                    "k8s-app": "kindnet",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "kindnet"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kindnet",
                            "k8s-app": "kindnet",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-cfg",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kindnet-cni",
                                "image": "docker.io/kindest/kindnetd:v20221004-44d545d1",
                                "env": [
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_SUBNET",
                                        "value": "10.244.0.0/16"
                                    },
                                    {
                                        "name": "CONTROL_PLANE_ENDPOINT",
                                        "value": "acing-control-plane:6443"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-cfg",
                                        "mountPath": "/etc/cni/net.d"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_RAW",
                                            "NET_ADMIN"
                                        ]
                                    },
                                    "privileged": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kindnet",
                        "serviceAccount": "kindnet",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "bd27a2a4-4bf6-4d0f-aaf9-8bd93f5a59cf",
                "resourceVersion": "475",
                "generation": 1,
                "creationTimestamp": "2023-02-22T03:18:34Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.25.3",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 3,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 3
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "3aef7b35-5208-430a-b353-9ffcc7b6ce74",
                "resourceVersion": "529",
                "generation": 1,
                "creationTimestamp": "2023-02-22T03:18:34Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2023-02-22T03:18:57Z",
                        "lastTransitionTime": "2023-02-22T03:18:57Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2023-02-22T03:18:58Z",
                        "lastTransitionTime": "2023-02-22T03:18:48Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-565d847f94\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-565d847f94",
                "namespace": "kube-system",
                "uid": "4d9b5b2e-93aa-4237-8cd8-ae7c52a88b7b",
                "resourceVersion": "528",
                "generation": 1,
                "creationTimestamp": "2023-02-22T03:18:48Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "565d847f94"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "3aef7b35-5208-430a-b353-9ffcc7b6ce74",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "565d847f94"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "565d847f94"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-565d847f94-m89qd",
                "generateName": "coredns-565d847f94-",
                "namespace": "kube-system",
                "uid": "84a3c29c-4200-46b4-9ce1-bed37c092eb4",
                "resourceVersion": "525",
                "creationTimestamp": "2023-02-22T03:18:48Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "565d847f94"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-565d847f94",
                        "uid": "4d9b5b2e-93aa-4237-8cd8-ae7c52a88b7b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-c2qdz",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-c2qdz",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "acing-control-plane",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:55Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:56Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:56Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:55Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "10.244.0.2",
                "podIPs": [
                    {
                        "ip": "10.244.0.2"
                    }
                ],
                "startTime": "2023-02-22T03:18:55Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:56Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                        "imageID": "sha256:b19406328e70dd2f6a36d6dbe4e867b0684ced2fdeb2f02ecb54ead39ec0bac0",
                        "containerID": "containerd://b7f6f170ba8dd23c4e359a2d1ecde1c6aca23386c99f906b6235b13fd8258b6d",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-565d847f94-nh92p",
                "generateName": "coredns-565d847f94-",
                "namespace": "kube-system",
                "uid": "773e6f8c-0d27-4612-a5ef-8359ab5514ca",
                "resourceVersion": "515",
                "creationTimestamp": "2023-02-22T03:18:48Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "565d847f94"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-565d847f94",
                        "uid": "4d9b5b2e-93aa-4237-8cd8-ae7c52a88b7b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-j4tb5",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-j4tb5",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "acing-control-plane",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:55Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:56Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:56Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:55Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "10.244.0.3",
                "podIPs": [
                    {
                        "ip": "10.244.0.3"
                    }
                ],
                "startTime": "2023-02-22T03:18:55Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:56Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/coredns/coredns:v1.9.3",
                        "imageID": "sha256:b19406328e70dd2f6a36d6dbe4e867b0684ced2fdeb2f02ecb54ead39ec0bac0",
                        "containerID": "containerd://feeb0b0944b86d71cca587ee893a08984be0db1088db7278235bff0029393ada",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-acing-control-plane",
                "namespace": "kube-system",
                "uid": "a0745c1a-1f06-47a1-9b29-5162cf0f2243",
                "resourceVersion": "477",
                "creationTimestamp": "2023-02-22T03:18:34Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.18.0.4:2379",
                    "kubernetes.io/config.hash": "8e73d43ac99f9d5165f353f40611b5f9",
                    "kubernetes.io/config.mirror": "8e73d43ac99f9d5165f353f40611b5f9",
                    "kubernetes.io/config.seen": "2023-02-22T03:18:34.420773169Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "acing-control-plane",
                        "uid": "d1df0202-9e40-450a-b8a9-62db9b094152",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.5.4-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.18.0.4:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://172.18.0.4:2380",
                            "--initial-cluster=acing-control-plane=https://172.18.0.4:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.4:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.18.0.4:2380",
                            "--name=acing-control-plane",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health?exclude=NOSPACE\u0026serializable=true",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health?serializable=false",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "acing-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:34Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:47Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:47Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:34Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "startTime": "2023-02-22T03:18:34Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:29Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/etcd:3.5.4-0",
                        "imageID": "sha256:8e041a3b0ba8b5f930b1732f7e2ddb654b1739c89b068ff433008d633a51cd03",
                        "containerID": "containerd://bfe05147bf9c050b33f5b0cb1c8689dc4d24a73ef0a8ba766752e8cdc5d7a798",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kindnet-5thgl",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "ba488d3c-20f5-4b6a-911b-fcf83d407a2f",
                "resourceVersion": "496",
                "creationTimestamp": "2023-02-22T03:18:51Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "6cdf76cdf9",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "39f06a22-ba6a-4812-a1de-5c96cefc8ca0",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-p4mpt",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20221004-44d545d1",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "acing-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-p4mpt",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "acing-worker2",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "acing-worker2"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:52Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:55Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:55Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:51Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2023-02-22T03:18:52Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:54Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/kindest/kindnetd:v20221004-44d545d1",
                        "imageID": "sha256:7ba9b35cf55e6c7ede7a3bf084b4fb189600a5ea8393781d6557b2b772e1baec",
                        "containerID": "containerd://a0914670ae758bd5b0c4b660397db3709d90624b9198bc5725013188462b3aa3",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kindnet-bw5zp",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "2d938c97-48d5-4426-a133-83469a324b1c",
                "resourceVersion": "495",
                "creationTimestamp": "2023-02-22T03:18:51Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "6cdf76cdf9",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "39f06a22-ba6a-4812-a1de-5c96cefc8ca0",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-f2gd8",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20221004-44d545d1",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "acing-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-f2gd8",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "acing-worker",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "acing-worker"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:52Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:55Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:55Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:51Z"
                    }
                ],
                "hostIP": "172.18.0.3",
                "podIP": "172.18.0.3",
                "podIPs": [
                    {
                        "ip": "172.18.0.3"
                    }
                ],
                "startTime": "2023-02-22T03:18:52Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:54Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/kindest/kindnetd:v20221004-44d545d1",
                        "imageID": "sha256:7ba9b35cf55e6c7ede7a3bf084b4fb189600a5ea8393781d6557b2b772e1baec",
                        "containerID": "containerd://2930020da3fb668516c46481170e40ea829b7b0b3b890f3069f591b188c4f94a",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kindnet-gfbqg",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "82de6f0b-1010-4dbd-a23e-83735ea58266",
                "resourceVersion": "401",
                "creationTimestamp": "2023-02-22T03:18:49Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "6cdf76cdf9",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "39f06a22-ba6a-4812-a1de-5c96cefc8ca0",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-84ljc",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20221004-44d545d1",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "acing-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-84ljc",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "acing-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "acing-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:49Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:50Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:50Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:49Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "startTime": "2023-02-22T03:18:49Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:50Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/kindest/kindnetd:v20221004-44d545d1",
                        "imageID": "sha256:7ba9b35cf55e6c7ede7a3bf084b4fb189600a5ea8393781d6557b2b772e1baec",
                        "containerID": "containerd://929ebe6266ea45a2940031c6e96fb7e7c2a788172576d48aebbbc1706565b72a",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-acing-control-plane",
                "namespace": "kube-system",
                "uid": "da3ca037-5bc8-4e4e-afb8-bc9e8a35aa1f",
                "resourceVersion": "479",
                "creationTimestamp": "2023-02-22T03:18:34Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.18.0.4:6443",
                    "kubernetes.io/config.hash": "b3d604c8a6cacb86fafba4fed93c97e1",
                    "kubernetes.io/config.mirror": "b3d604c8a6cacb86fafba4fed93c97e1",
                    "kubernetes.io/config.seen": "2023-02-22T03:18:34.420775044Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "acing-control-plane",
                        "uid": "d1df0202-9e40-450a-b8a9-62db9b094152",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.25.3",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.18.0.4",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--runtime-config=",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.4",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 6443,
                                "host": "172.18.0.4",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.4",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "acing-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:35Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:38Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:38Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:35Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "startTime": "2023-02-22T03:18:35Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:28Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-apiserver:v1.25.3",
                        "imageID": "docker.io/library/import-2022-10-25@sha256:c666c2ddbc056f8aba649a2647a26d3f6224bce857613b91be6075c88ca963a1",
                        "containerID": "containerd://16f73e72d8bd25fa7a575ba25e603f09bf698016248dae61903ef4d9afc0e33d",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-acing-control-plane",
                "namespace": "kube-system",
                "uid": "8b88f282-568d-4039-b539-ce9f16f43b34",
                "resourceVersion": "480",
                "creationTimestamp": "2023-02-22T03:18:35Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "e3450e39301d6ec7a1c38e667cf76606",
                    "kubernetes.io/config.mirror": "e3450e39301d6ec7a1c38e667cf76606",
                    "kubernetes.io/config.seen": "2023-02-22T03:18:34.420775752Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "acing-control-plane",
                        "uid": "d1df0202-9e40-450a-b8a9-62db9b094152",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.25.3",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=acing",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "acing-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:34Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:42Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:42Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:34Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "startTime": "2023-02-22T03:18:34Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:28Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-controller-manager:v1.25.3",
                        "imageID": "docker.io/library/import-2022-10-25@sha256:8584d5d11885180c547784653a575ab8f6a983b6557bc77ddf577a4a0b4b6dec",
                        "containerID": "containerd://acd981277dce1b1188d5f566a19436b5590df4a2f8ad45fa8793d11a956c38c0",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-6z4z4",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "6f7ba60e-7475-47c0-9a58-207d18b19234",
                "resourceVersion": "403",
                "creationTimestamp": "2023-02-22T03:18:49Z",
                "labels": {
                    "controller-revision-hash": "b9c5d5dc4",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "bd27a2a4-4bf6-4d0f-aaf9-8bd93f5a59cf",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-g7nsr",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.25.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-g7nsr",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "acing-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "acing-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:49Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:50Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:50Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:49Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "startTime": "2023-02-22T03:18:49Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:49Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.25.3",
                        "imageID": "docker.io/library/import-2022-10-25@sha256:2f5536b3e12d9862d10103b10756684ac451b11eda25b62b9ceff71fdc3fd657",
                        "containerID": "containerd://40fa643072507a2e9646fa76cd9539a8c3824d247c06c9e72b074ad591ad5c46",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-g627l",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "f4d1f491-6a45-4464-9f9e-6b6a1057e2e8",
                "resourceVersion": "472",
                "creationTimestamp": "2023-02-22T03:18:51Z",
                "labels": {
                    "controller-revision-hash": "b9c5d5dc4",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "bd27a2a4-4bf6-4d0f-aaf9-8bd93f5a59cf",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-f6cj7",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.25.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-f6cj7",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "acing-worker2",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "acing-worker2"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:52Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:54Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:54Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:51Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2023-02-22T03:18:52Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:53Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.25.3",
                        "imageID": "docker.io/library/import-2022-10-25@sha256:2f5536b3e12d9862d10103b10756684ac451b11eda25b62b9ceff71fdc3fd657",
                        "containerID": "containerd://3354ef538ae943ecb57b1310183f4a3e5df682a28f7d698c3934b02e0fbed417",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-v76cb",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "c7f5f6e0-80a1-4d94-a942-e589b30df044",
                "resourceVersion": "473",
                "creationTimestamp": "2023-02-22T03:18:51Z",
                "labels": {
                    "controller-revision-hash": "b9c5d5dc4",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "bd27a2a4-4bf6-4d0f-aaf9-8bd93f5a59cf",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-jx696",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.25.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-jx696",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "acing-worker",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "acing-worker"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:52Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:54Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:54Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:51Z"
                    }
                ],
                "hostIP": "172.18.0.3",
                "podIP": "172.18.0.3",
                "podIPs": [
                    {
                        "ip": "172.18.0.3"
                    }
                ],
                "startTime": "2023-02-22T03:18:52Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:53Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.25.3",
                        "imageID": "docker.io/library/import-2022-10-25@sha256:2f5536b3e12d9862d10103b10756684ac451b11eda25b62b9ceff71fdc3fd657",
                        "containerID": "containerd://da838270229d172aa8c6c194c181ae76317be602806a8d12dfb51eb0bc6dd03b",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-acing-control-plane",
                "namespace": "kube-system",
                "uid": "ac78ad39-9655-4618-be52-69eb66aeefb7",
                "resourceVersion": "478",
                "creationTimestamp": "2023-02-22T03:18:34Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "5dadd87b55fb9a92dbf3e7609f9a5415",
                    "kubernetes.io/config.mirror": "5dadd87b55fb9a92dbf3e7609f9a5415",
                    "kubernetes.io/config.seen": "2023-02-22T03:18:34.420776210Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "acing-control-plane",
                        "uid": "d1df0202-9e40-450a-b8a9-62db9b094152",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.25.3",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "acing-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:35Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:38Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:38Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2023-02-22T03:18:35Z"
                    }
                ],
                "hostIP": "172.18.0.4",
                "podIP": "172.18.0.4",
                "podIPs": [
                    {
                        "ip": "172.18.0.4"
                    }
                ],
                "startTime": "2023-02-22T03:18:35Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2023-02-22T03:18:28Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-scheduler:v1.25.3",
                        "imageID": "docker.io/library/import-2022-10-25@sha256:f935a2ebcacd3788ccd8e8e800fbdf1fc5b80892db99d037797cddf4089273ed",
                        "containerID": "containerd://bf21b95052dbaabd36d6104895f4037c86b3ebbfe6119c214ba1a0470538f798",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-565d847f94-m89qd ====
.:53
[INFO] plugin/reload: Running configuration SHA512 = 591cf328cccc12bc490481273e738df59329c62c0b729d94e8b61db9961c2fa5f046dd37f1cf888b953814040d180f52594972691cd6ff41be96639138a43908
CoreDNS-1.9.3
linux/arm64, go1.18.2, 45b0a11
==== END logs for container coredns of pod kube-system/coredns-565d847f94-m89qd ====
==== START logs for container coredns of pod kube-system/coredns-565d847f94-nh92p ====
.:53
[INFO] plugin/reload: Running configuration SHA512 = 591cf328cccc12bc490481273e738df59329c62c0b729d94e8b61db9961c2fa5f046dd37f1cf888b953814040d180f52594972691cd6ff41be96639138a43908
CoreDNS-1.9.3
linux/arm64, go1.18.2, 45b0a11
==== END logs for container coredns of pod kube-system/coredns-565d847f94-nh92p ====
==== START logs for container etcd of pod kube-system/etcd-acing-control-plane ====
{"level":"warn","ts":"2023-02-22T03:18:29.770Z","caller":"flags/flag.go:93","msg":"unrecognized environment variable","environment-variable":"ETCD_UNSUPPORTED_ARCH=arm64"}
{"level":"info","ts":"2023-02-22T03:18:29.770Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://172.18.0.4:2379","--cert-file=/etc/kubernetes/pki/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://172.18.0.4:2380","--initial-cluster=acing-control-plane=https://172.18.0.4:2380","--key-file=/etc/kubernetes/pki/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.4:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://172.18.0.4:2380","--name=acing-control-plane","--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/etc/kubernetes/pki/etcd/peer.key","--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--snapshot-count=10000","--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"]}
{"level":"info","ts":"2023-02-22T03:18:29.770Z","caller":"embed/etcd.go:131","msg":"configuring peer listeners","listen-peer-urls":["https://172.18.0.4:2380"]}
{"level":"info","ts":"2023-02-22T03:18:29.770Z","caller":"embed/etcd.go:479","msg":"starting with peer TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-02-22T03:18:29.771Z","caller":"embed/etcd.go:139","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.4:2379"]}
{"level":"info","ts":"2023-02-22T03:18:29.771Z","caller":"embed/etcd.go:308","msg":"starting an etcd server","etcd-version":"3.5.4","git-sha":"08407ff76","go-version":"go1.16.2","go-os":"linux","go-arch":"arm64","max-cpu-set":5,"max-cpu-available":5,"member-initialized":false,"name":"acing-control-plane","data-dir":"/var/lib/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://172.18.0.4:2380"],"listen-peer-urls":["https://172.18.0.4:2380"],"advertise-client-urls":["https://172.18.0.4:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.4:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"acing-control-plane=https://172.18.0.4:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-size-bytes":2147483648,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2023-02-22T03:18:29.774Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/etcd/member/snap/db","took":"3.061ms"}
{"level":"info","ts":"2023-02-22T03:18:29.777Z","caller":"etcdserver/raft.go:448","msg":"starting local member","local-member-id":"5320353a7d98bdee","cluster-id":"b61dd090a9d8a70a"}
{"level":"info","ts":"2023-02-22T03:18:29.777Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee switched to configuration voters=()"}
{"level":"info","ts":"2023-02-22T03:18:29.777Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee became follower at term 0"}
{"level":"info","ts":"2023-02-22T03:18:29.777Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft 5320353a7d98bdee [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2023-02-22T03:18:29.777Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee became follower at term 1"}
{"level":"info","ts":"2023-02-22T03:18:29.777Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee switched to configuration voters=(5989846029734297070)"}
{"level":"warn","ts":"2023-02-22T03:18:29.778Z","caller":"auth/store.go:1220","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-02-22T03:18:29.780Z","caller":"mvcc/kvstore.go:415","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2023-02-22T03:18:29.781Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-02-22T03:18:29.782Z","caller":"etcdserver/server.go:851","msg":"starting etcd server","local-member-id":"5320353a7d98bdee","local-server-version":"3.5.4","cluster-version":"to_be_decided"}
{"level":"info","ts":"2023-02-22T03:18:29.782Z","caller":"etcdserver/server.go:736","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"5320353a7d98bdee","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2023-02-22T03:18:29.782Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee switched to configuration voters=(5989846029734297070)"}
{"level":"info","ts":"2023-02-22T03:18:29.782Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"b61dd090a9d8a70a","local-member-id":"5320353a7d98bdee","added-peer-id":"5320353a7d98bdee","added-peer-peer-urls":["https://172.18.0.4:2380"]}
{"level":"info","ts":"2023-02-22T03:18:29.783Z","caller":"embed/etcd.go:688","msg":"starting with client TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-02-22T03:18:29.783Z","caller":"embed/etcd.go:277","msg":"now serving peer/client/metrics","local-member-id":"5320353a7d98bdee","initial-advertise-peer-urls":["https://172.18.0.4:2380"],"listen-peer-urls":["https://172.18.0.4:2380"],"advertise-client-urls":["https://172.18.0.4:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.4:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-02-22T03:18:29.783Z","caller":"embed/etcd.go:763","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-02-22T03:18:29.783Z","caller":"embed/etcd.go:581","msg":"serving peer traffic","address":"172.18.0.4:2380"}
{"level":"info","ts":"2023-02-22T03:18:29.783Z","caller":"embed/etcd.go:553","msg":"cmux::serve","address":"172.18.0.4:2380"}
{"level":"info","ts":"2023-02-22T03:18:30.478Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee is starting a new election at term 1"}
{"level":"info","ts":"2023-02-22T03:18:30.479Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee became pre-candidate at term 1"}
{"level":"info","ts":"2023-02-22T03:18:30.479Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee received MsgPreVoteResp from 5320353a7d98bdee at term 1"}
{"level":"info","ts":"2023-02-22T03:18:30.479Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee became candidate at term 2"}
{"level":"info","ts":"2023-02-22T03:18:30.479Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee received MsgVoteResp from 5320353a7d98bdee at term 2"}
{"level":"info","ts":"2023-02-22T03:18:30.479Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"5320353a7d98bdee became leader at term 2"}
{"level":"info","ts":"2023-02-22T03:18:30.479Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: 5320353a7d98bdee elected leader 5320353a7d98bdee at term 2"}
{"level":"info","ts":"2023-02-22T03:18:30.479Z","caller":"etcdserver/server.go:2507","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2023-02-22T03:18:30.482Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"b61dd090a9d8a70a","local-member-id":"5320353a7d98bdee","cluster-version":"3.5"}
{"level":"info","ts":"2023-02-22T03:18:30.483Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-02-22T03:18:30.483Z","caller":"etcdserver/server.go:2042","msg":"published local member to cluster through raft","local-member-id":"5320353a7d98bdee","local-member-attributes":"{Name:acing-control-plane ClientURLs:[https://172.18.0.4:2379]}","request-path":"/0/members/5320353a7d98bdee/attributes","cluster-id":"b61dd090a9d8a70a","publish-timeout":"7s"}
{"level":"info","ts":"2023-02-22T03:18:30.483Z","caller":"embed/serve.go:98","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-02-22T03:18:30.484Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-02-22T03:18:30.484Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2023-02-22T03:18:30.483Z","caller":"embed/serve.go:98","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-02-22T03:18:30.486Z","caller":"embed/serve.go:188","msg":"serving client traffic securely","address":"172.18.0.4:2379"}
{"level":"info","ts":"2023-02-22T03:18:30.486Z","caller":"embed/serve.go:188","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-02-22T03:18:30.483Z","caller":"etcdserver/server.go:2531","msg":"cluster version is updated","cluster-version":"3.5"}
==== END logs for container etcd of pod kube-system/etcd-acing-control-plane ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-5thgl ====
I0222 03:18:54.500519       1 main.go:316] probe TCP address acing-control-plane:6443
I0222 03:18:54.503424       1 main.go:102] connected to apiserver: https://acing-control-plane:6443
I0222 03:18:54.503537       1 main.go:107] hostIP = 172.18.0.2
podIP = 172.18.0.2
I0222 03:18:54.503654       1 main.go:116] setting mtu 1500 for CNI 
I0222 03:18:54.503684       1 main.go:146] kindnetd IP family: "ipv4"
I0222 03:18:54.503713       1 main.go:150] noMask IPv4 subnets: [10.244.0.0/16]
I0222 03:18:54.897745       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:18:54.897804       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:18:54.897989       1 routes.go:62] Adding route {Ifindex: 0 Dst: 10.244.0.0/24 Src: <nil> Gw: 172.18.0.4 Flags: [] Table: 0} 
I0222 03:18:54.898053       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:18:54.898072       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:18:54.898095       1 routes.go:62] Adding route {Ifindex: 0 Dst: 10.244.1.0/24 Src: <nil> Gw: 172.18.0.3 Flags: [] Table: 0} 
I0222 03:18:54.898124       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:18:54.898128       1 main.go:227] handling current node
I0222 03:19:04.905122       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:04.905147       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:04.905204       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:04.905208       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:04.905226       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:04.905229       1 main.go:227] handling current node
I0222 03:19:14.917847       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:14.917878       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:14.917937       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:14.917941       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:14.917959       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:14.917962       1 main.go:227] handling current node
I0222 03:19:24.921158       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:24.921184       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:24.921242       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:24.921246       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:24.921271       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:24.921289       1 main.go:227] handling current node
I0222 03:19:34.930186       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:34.930211       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:34.930275       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:34.930279       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:34.930297       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:34.930300       1 main.go:227] handling current node
I0222 03:19:44.933488       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:44.933528       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:44.933587       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:44.933590       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:44.933609       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:44.933612       1 main.go:227] handling current node
I0222 03:19:54.937758       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:54.937790       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:54.937854       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:54.937861       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:54.937903       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:54.937906       1 main.go:227] handling current node
I0222 03:20:04.949314       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:20:04.949340       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:20:04.949398       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:20:04.949401       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:20:04.949428       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:20:04.949431       1 main.go:227] handling current node
==== END logs for container kindnet-cni of pod kube-system/kindnet-5thgl ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-bw5zp ====
I0222 03:18:54.603670       1 main.go:316] probe TCP address acing-control-plane:6443
I0222 03:18:54.606299       1 main.go:102] connected to apiserver: https://acing-control-plane:6443
I0222 03:18:54.606317       1 main.go:107] hostIP = 172.18.0.3
podIP = 172.18.0.3
I0222 03:18:54.606372       1 main.go:116] setting mtu 1500 for CNI 
I0222 03:18:54.606377       1 main.go:146] kindnetd IP family: "ipv4"
I0222 03:18:54.606382       1 main.go:150] noMask IPv4 subnets: [10.244.0.0/16]
I0222 03:18:55.098667       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:18:55.098707       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:18:55.098796       1 routes.go:62] Adding route {Ifindex: 0 Dst: 10.244.0.0/24 Src: <nil> Gw: 172.18.0.4 Flags: [] Table: 0} 
I0222 03:18:55.099065       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:18:55.099083       1 main.go:227] handling current node
I0222 03:18:55.101664       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:18:55.101693       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:18:55.101733       1 routes.go:62] Adding route {Ifindex: 0 Dst: 10.244.2.0/24 Src: <nil> Gw: 172.18.0.2 Flags: [] Table: 0} 
I0222 03:19:05.115621       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:05.115645       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:05.115734       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:05.115738       1 main.go:227] handling current node
I0222 03:19:05.115743       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:05.115745       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:19:15.128867       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:15.128893       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:15.128970       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:15.128974       1 main.go:227] handling current node
I0222 03:19:15.128982       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:15.128984       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:19:25.131991       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:25.132015       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:25.132072       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:25.132076       1 main.go:227] handling current node
I0222 03:19:25.132081       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:25.132083       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:19:35.143146       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:35.143179       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:35.143242       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:35.143245       1 main.go:227] handling current node
I0222 03:19:35.143250       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:35.143252       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:19:45.154490       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:45.154524       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:45.154611       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:45.154634       1 main.go:227] handling current node
I0222 03:19:45.154641       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:45.154644       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:19:55.166989       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:55.167024       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:19:55.167082       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:55.167091       1 main.go:227] handling current node
I0222 03:19:55.167096       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:55.167098       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:20:05.179097       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:20:05.179123       1 main.go:250] Node acing-control-plane has CIDR [10.244.0.0/24] 
I0222 03:20:05.179176       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:20:05.179180       1 main.go:227] handling current node
I0222 03:20:05.179184       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:20:05.179187       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
==== END logs for container kindnet-cni of pod kube-system/kindnet-bw5zp ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-gfbqg ====
I0222 03:18:50.499685       1 main.go:316] probe TCP address acing-control-plane:6443
I0222 03:18:50.500811       1 main.go:102] connected to apiserver: https://acing-control-plane:6443
I0222 03:18:50.500985       1 main.go:107] hostIP = 172.18.0.4
podIP = 172.18.0.4
I0222 03:18:50.501078       1 main.go:116] setting mtu 1500 for CNI 
I0222 03:18:50.501095       1 main.go:146] kindnetd IP family: "ipv4"
I0222 03:18:50.501183       1 main.go:150] noMask IPv4 subnets: [10.244.0.0/16]
I0222 03:18:50.899394       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:18:50.996674       1 main.go:227] handling current node
I0222 03:19:01.005369       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:01.005470       1 main.go:227] handling current node
I0222 03:19:01.005485       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:01.005499       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:01.005576       1 routes.go:62] Adding route {Ifindex: 0 Dst: 10.244.1.0/24 Src: <nil> Gw: 172.18.0.3 Flags: [] Table: 0} 
I0222 03:19:01.005644       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:01.005650       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:19:01.005673       1 routes.go:62] Adding route {Ifindex: 0 Dst: 10.244.2.0/24 Src: <nil> Gw: 172.18.0.2 Flags: [] Table: 0} 
I0222 03:19:11.016939       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:11.016964       1 main.go:227] handling current node
I0222 03:19:11.016970       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:11.016975       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:11.017045       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:11.017048       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:19:21.020180       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:21.020218       1 main.go:227] handling current node
I0222 03:19:21.020227       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:21.020237       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:21.020296       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:21.020401       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:19:31.029864       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:31.029888       1 main.go:227] handling current node
I0222 03:19:31.029894       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:31.029903       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:31.029966       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:31.029980       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:19:41.032899       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:41.032945       1 main.go:227] handling current node
I0222 03:19:41.032954       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:41.032959       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:41.033024       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:41.033028       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:19:51.037833       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:19:51.038027       1 main.go:227] handling current node
I0222 03:19:51.038053       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:19:51.038064       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:19:51.038222       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:19:51.038299       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:20:01.041995       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:20:01.042251       1 main.go:227] handling current node
I0222 03:20:01.042289       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:20:01.042445       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:20:01.042555       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:20:01.042567       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
I0222 03:20:11.054715       1 main.go:223] Handling node with IPs: map[172.18.0.4:{}]
I0222 03:20:11.054790       1 main.go:227] handling current node
I0222 03:20:11.054808       1 main.go:223] Handling node with IPs: map[172.18.0.3:{}]
I0222 03:20:11.054818       1 main.go:250] Node acing-worker has CIDR [10.244.1.0/24] 
I0222 03:20:11.054931       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I0222 03:20:11.059870       1 main.go:250] Node acing-worker2 has CIDR [10.244.2.0/24] 
==== END logs for container kindnet-cni of pod kube-system/kindnet-gfbqg ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-acing-control-plane ====
I0222 03:18:28.657514       1 server.go:563] external host was not specified, using 172.18.0.4
I0222 03:18:28.658856       1 server.go:161] Version: v1.25.3
I0222 03:18:28.659299       1 server.go:163] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:18:28.974085       1 shared_informer.go:255] Waiting for caches to sync for node_authorizer
I0222 03:18:28.974531       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0222 03:18:28.974544       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
I0222 03:18:28.975327       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0222 03:18:28.975336       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
W0222 03:18:28.977033       1 logging.go:59] [core] [Channel #1 SubChannel #2] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing dial tcp 127.0.0.1:2379: connect: connection refused"
W0222 03:18:30.527532       1 genericapiserver.go:656] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I0222 03:18:30.528327       1 instance.go:261] Using reconciler: lease
I0222 03:18:30.656669       1 instance.go:574] API group "internal.apiserver.k8s.io" is not enabled, skipping.
W0222 03:18:30.945611       1 genericapiserver.go:656] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W0222 03:18:30.946659       1 genericapiserver.go:656] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
W0222 03:18:30.953469       1 genericapiserver.go:656] Skipping API autoscaling/v2beta1 because it has no resources.
W0222 03:18:30.958729       1 genericapiserver.go:656] Skipping API batch/v1beta1 because it has no resources.
W0222 03:18:30.959961       1 genericapiserver.go:656] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W0222 03:18:30.961006       1 genericapiserver.go:656] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W0222 03:18:30.961046       1 genericapiserver.go:656] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
W0222 03:18:30.963019       1 genericapiserver.go:656] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W0222 03:18:30.963048       1 genericapiserver.go:656] Skipping API networking.k8s.io/v1alpha1 because it has no resources.
W0222 03:18:30.963730       1 genericapiserver.go:656] Skipping API node.k8s.io/v1beta1 because it has no resources.
W0222 03:18:30.963753       1 genericapiserver.go:656] Skipping API node.k8s.io/v1alpha1 because it has no resources.
W0222 03:18:30.963779       1 genericapiserver.go:656] Skipping API policy/v1beta1 because it has no resources.
W0222 03:18:30.966033       1 genericapiserver.go:656] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W0222 03:18:30.966060       1 genericapiserver.go:656] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
W0222 03:18:30.967010       1 genericapiserver.go:656] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W0222 03:18:30.967040       1 genericapiserver.go:656] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
W0222 03:18:30.969125       1 genericapiserver.go:656] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
W0222 03:18:30.970751       1 genericapiserver.go:656] Skipping API flowcontrol.apiserver.k8s.io/v1alpha1 because it has no resources.
W0222 03:18:30.972992       1 genericapiserver.go:656] Skipping API apps/v1beta2 because it has no resources.
W0222 03:18:30.973019       1 genericapiserver.go:656] Skipping API apps/v1beta1 because it has no resources.
W0222 03:18:30.973790       1 genericapiserver.go:656] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W0222 03:18:30.974807       1 genericapiserver.go:656] Skipping API events.k8s.io/v1beta1 because it has no resources.
I0222 03:18:30.975515       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0222 03:18:30.975526       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
W0222 03:18:30.987368       1 genericapiserver.go:656] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0222 03:18:31.784697       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0222 03:18:31.784730       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0222 03:18:31.784745       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key"
I0222 03:18:31.784757       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0222 03:18:31.784722       1 secure_serving.go:210] Serving securely on [::]:6443
I0222 03:18:31.785599       1 available_controller.go:491] Starting AvailableConditionController
I0222 03:18:31.785639       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0222 03:18:31.785690       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0222 03:18:31.785695       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0222 03:18:31.785712       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key"
I0222 03:18:31.787330       1 apf_controller.go:300] Starting API Priority and Fairness config controller
I0222 03:18:31.802393       1 autoregister_controller.go:141] Starting autoregister controller
I0222 03:18:31.802414       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0222 03:18:31.802423       1 controller.go:83] Starting OpenAPI AggregationController
I0222 03:18:31.802436       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0222 03:18:31.802690       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0222 03:18:31.802710       1 shared_informer.go:255] Waiting for caches to sync for crd-autoregister
I0222 03:18:31.804791       1 customresource_discovery_controller.go:209] Starting DiscoveryController
I0222 03:18:31.805154       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0222 03:18:31.808192       1 shared_informer.go:255] Waiting for caches to sync for cluster_authentication_trust_controller
I0222 03:18:31.805605       1 crd_finalizer.go:266] Starting CRDFinalizer
I0222 03:18:31.805612       1 controller.go:85] Starting OpenAPI V3 controller
I0222 03:18:31.805618       1 naming_controller.go:291] Starting NamingConditionController
I0222 03:18:31.805621       1 establishing_controller.go:76] Starting EstablishingController
I0222 03:18:31.805625       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0222 03:18:31.805631       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0222 03:18:31.805703       1 controller.go:85] Starting OpenAPI controller
I0222 03:18:31.806147       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0222 03:18:31.806153       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0222 03:18:31.813481       1 controller.go:616] quota admission added evaluator for: namespaces
I0222 03:18:31.875131       1 shared_informer.go:262] Caches are synced for node_authorizer
I0222 03:18:31.886699       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0222 03:18:31.886730       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0222 03:18:31.888108       1 apf_controller.go:305] Running API Priority and Fairness config worker
I0222 03:18:31.902460       1 cache.go:39] Caches are synced for autoregister controller
I0222 03:18:31.903049       1 shared_informer.go:262] Caches are synced for crd-autoregister
I0222 03:18:31.908643       1 shared_informer.go:262] Caches are synced for cluster_authentication_trust_controller
I0222 03:18:32.649812       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0222 03:18:32.808466       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0222 03:18:32.821220       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0222 03:18:32.821244       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0222 03:18:33.068818       1 controller.go:616] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0222 03:18:33.091663       1 controller.go:616] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0222 03:18:33.215153       1 alloc.go:327] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W0222 03:18:33.218288       1 lease.go:250] Resetting endpoints for master service "kubernetes" to [172.18.0.4]
I0222 03:18:33.218680       1 controller.go:616] quota admission added evaluator for: endpoints
I0222 03:18:33.221447       1 controller.go:616] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0222 03:18:34.367200       1 controller.go:616] quota admission added evaluator for: serviceaccounts
I0222 03:18:34.371878       1 controller.go:616] quota admission added evaluator for: deployments.apps
I0222 03:18:34.376462       1 alloc.go:327] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0222 03:18:34.381517       1 controller.go:616] quota admission added evaluator for: daemonsets.apps
I0222 03:18:34.429784       1 controller.go:616] quota admission added evaluator for: leases.coordination.k8s.io
I0222 03:18:48.272340       1 controller.go:616] quota admission added evaluator for: replicasets.apps
I0222 03:18:49.121436       1 controller.go:616] quota admission added evaluator for: controllerrevisions.apps
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-acing-control-plane ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-acing-control-plane ====
I0222 03:18:28.803567       1 serving.go:348] Generated self-signed cert in-memory
I0222 03:18:28.996683       1 controllermanager.go:178] Version: v1.25.3
I0222 03:18:28.996698       1 controllermanager.go:180] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:18:28.997303       1 secure_serving.go:210] Serving securely on 127.0.0.1:10257
I0222 03:18:28.997398       1 leaderelection.go:248] attempting to acquire leader lease kube-system/kube-controller-manager...
I0222 03:18:28.997667       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0222 03:18:28.998007       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0222 03:18:28.998088       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
E0222 03:18:31.801215       1 leaderelection.go:330] error retrieving resource lock kube-system/kube-controller-manager: leases.coordination.k8s.io "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-system"
I0222 03:18:35.362196       1 leaderelection.go:258] successfully acquired lease kube-system/kube-controller-manager
I0222 03:18:35.362767       1 event.go:294] "Event occurred" object="kube-system/kube-controller-manager" fieldPath="" kind="Lease" apiVersion="coordination.k8s.io/v1" type="Normal" reason="LeaderElection" message="acing-control-plane_8200d1ce-4ee0-4396-b162-00325c50195d became leader"
I0222 03:18:35.369795       1 shared_informer.go:255] Waiting for caches to sync for tokens
I0222 03:18:35.374453       1 controllermanager.go:603] Started "replicaset"
W0222 03:18:35.374501       1 core.go:232] configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes.
W0222 03:18:35.374517       1 controllermanager.go:581] Skipping "route"
I0222 03:18:35.374576       1 replica_set.go:205] Starting replicaset controller
I0222 03:18:35.374582       1 shared_informer.go:255] Waiting for caches to sync for ReplicaSet
I0222 03:18:35.377928       1 controllermanager.go:603] Started "pv-protection"
I0222 03:18:35.377967       1 pv_protection_controller.go:79] Starting PV protection controller
I0222 03:18:35.377972       1 shared_informer.go:255] Waiting for caches to sync for PV protection
I0222 03:18:35.392946       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for daemonsets.apps
I0222 03:18:35.393026       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for rolebindings.rbac.authorization.k8s.io
I0222 03:18:35.393041       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for replicasets.apps
I0222 03:18:35.393050       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for csistoragecapacities.storage.k8s.io
I0222 03:18:35.393057       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for limitranges
I0222 03:18:35.393064       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for podtemplates
I0222 03:18:35.393074       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for horizontalpodautoscalers.autoscaling
I0222 03:18:35.393082       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for jobs.batch
I0222 03:18:35.393088       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for roles.rbac.authorization.k8s.io
I0222 03:18:35.393094       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for endpoints
I0222 03:18:35.393170       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for cronjobs.batch
I0222 03:18:35.393214       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for ingresses.networking.k8s.io
I0222 03:18:35.393222       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for poddisruptionbudgets.policy
I0222 03:18:35.393229       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for leases.coordination.k8s.io
I0222 03:18:35.393277       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for serviceaccounts
I0222 03:18:35.393320       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for controllerrevisions.apps
I0222 03:18:35.393333       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for networkpolicies.networking.k8s.io
I0222 03:18:35.393343       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for endpointslices.discovery.k8s.io
I0222 03:18:35.393360       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for deployments.apps
I0222 03:18:35.393371       1 resource_quota_monitor.go:218] QuotaMonitor created object count evaluator for statefulsets.apps
I0222 03:18:35.393416       1 controllermanager.go:603] Started "resourcequota"
I0222 03:18:35.393457       1 resource_quota_controller.go:277] Starting resource quota controller
I0222 03:18:35.393464       1 shared_informer.go:255] Waiting for caches to sync for resource quota
I0222 03:18:35.393498       1 resource_quota_monitor.go:295] QuotaMonitor running
I0222 03:18:35.400621       1 controllermanager.go:603] Started "job"
I0222 03:18:35.400697       1 job_controller.go:196] Starting job controller
I0222 03:18:35.400701       1 shared_informer.go:255] Waiting for caches to sync for job
I0222 03:18:35.404633       1 controllermanager.go:603] Started "deployment"
I0222 03:18:35.404730       1 deployment_controller.go:160] "Starting controller" controller="deployment"
I0222 03:18:35.404736       1 shared_informer.go:255] Waiting for caches to sync for deployment
I0222 03:18:35.408800       1 controllermanager.go:603] Started "ttl-after-finished"
I0222 03:18:35.408922       1 ttlafterfinished_controller.go:109] Starting TTL after finished controller
I0222 03:18:35.408929       1 shared_informer.go:255] Waiting for caches to sync for TTL after finished
I0222 03:18:35.413445       1 controllermanager.go:603] Started "endpoint"
I0222 03:18:35.413596       1 endpoints_controller.go:182] Starting endpoint controller
I0222 03:18:35.413655       1 shared_informer.go:255] Waiting for caches to sync for endpoint
I0222 03:18:35.423326       1 controllermanager.go:603] Started "disruption"
I0222 03:18:35.423558       1 disruption.go:421] Sending events to api server.
I0222 03:18:35.423579       1 disruption.go:432] Starting disruption controller
I0222 03:18:35.423583       1 shared_informer.go:255] Waiting for caches to sync for disruption
I0222 03:18:35.467422       1 controllermanager.go:603] Started "csrsigning"
I0222 03:18:35.467468       1 certificate_controller.go:112] Starting certificate controller "csrsigning-legacy-unknown"
I0222 03:18:35.467473       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I0222 03:18:35.467491       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-serving"
I0222 03:18:35.467494       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I0222 03:18:35.467501       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-client"
I0222 03:18:35.467503       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I0222 03:18:35.467522       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kube-apiserver-client"
I0222 03:18:35.467525       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I0222 03:18:35.467547       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 03:18:35.467626       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 03:18:35.467881       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 03:18:35.468195       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 03:18:35.471598       1 shared_informer.go:262] Caches are synced for tokens
I0222 03:18:35.616210       1 controllermanager.go:603] Started "ttl"
I0222 03:18:35.616385       1 ttl_controller.go:120] Starting TTL controller
I0222 03:18:35.616396       1 shared_informer.go:255] Waiting for caches to sync for TTL
I0222 03:18:35.766067       1 controllermanager.go:603] Started "bootstrapsigner"
I0222 03:18:35.766121       1 shared_informer.go:255] Waiting for caches to sync for bootstrap_signer
I0222 03:18:35.916152       1 node_ipam_controller.go:91] Sending events to api server.
I0222 03:18:45.922470       1 range_allocator.go:76] Sending events to api server.
I0222 03:18:45.922544       1 range_allocator.go:110] No Secondary Service CIDR provided. Skipping filtering out secondary service addresses.
I0222 03:18:45.922572       1 controllermanager.go:603] Started "nodeipam"
I0222 03:18:45.922638       1 node_ipam_controller.go:154] Starting ipam controller
I0222 03:18:45.922642       1 shared_informer.go:255] Waiting for caches to sync for node
I0222 03:18:45.927614       1 controllermanager.go:603] Started "podgc"
I0222 03:18:45.927756       1 gc_controller.go:99] Starting GC controller
I0222 03:18:45.927774       1 shared_informer.go:255] Waiting for caches to sync for GC
I0222 03:18:45.931247       1 controllermanager.go:603] Started "daemonset"
I0222 03:18:45.931368       1 daemon_controller.go:291] Starting daemon sets controller
I0222 03:18:45.931397       1 shared_informer.go:255] Waiting for caches to sync for daemon sets
I0222 03:18:45.932368       1 controllermanager.go:603] Started "csrcleaner"
I0222 03:18:45.932401       1 cleaner.go:82] Starting CSR cleaner controller
I0222 03:18:45.943594       1 controllermanager.go:603] Started "namespace"
I0222 03:18:45.943700       1 namespace_controller.go:200] Starting namespace controller
I0222 03:18:45.943704       1 shared_informer.go:255] Waiting for caches to sync for namespace
I0222 03:18:45.947443       1 controllermanager.go:603] Started "attachdetach"
I0222 03:18:45.947561       1 attach_detach_controller.go:328] Starting attach detach controller
I0222 03:18:45.947577       1 shared_informer.go:255] Waiting for caches to sync for attach detach
I0222 03:18:45.951002       1 controllermanager.go:603] Started "persistentvolume-expander"
I0222 03:18:45.951032       1 expand_controller.go:340] Starting expand controller
I0222 03:18:45.951094       1 shared_informer.go:255] Waiting for caches to sync for expand
E0222 03:18:45.954067       1 core.go:92] Failed to start service controller: WARNING: no cloud provider provided, services of type LoadBalancer will fail
W0222 03:18:45.954107       1 controllermanager.go:581] Skipping "service"
I0222 03:18:45.957611       1 controllermanager.go:603] Started "clusterrole-aggregation"
I0222 03:18:45.957693       1 clusterroleaggregation_controller.go:194] Starting ClusterRoleAggregator
I0222 03:18:45.957697       1 shared_informer.go:255] Waiting for caches to sync for ClusterRoleAggregator
I0222 03:18:45.968165       1 controllermanager.go:603] Started "garbagecollector"
I0222 03:18:45.968203       1 garbagecollector.go:154] Starting garbage collector controller
I0222 03:18:45.968347       1 shared_informer.go:255] Waiting for caches to sync for garbage collector
I0222 03:18:45.968361       1 graph_builder.go:291] GraphBuilder running
I0222 03:18:46.369086       1 controllermanager.go:603] Started "horizontalpodautoscaling"
I0222 03:18:46.369123       1 horizontal.go:168] Starting HPA controller
I0222 03:18:46.369130       1 shared_informer.go:255] Waiting for caches to sync for HPA
I0222 03:18:46.419291       1 node_lifecycle_controller.go:497] Controller will reconcile labels.
I0222 03:18:46.419330       1 controllermanager.go:603] Started "nodelifecycle"
I0222 03:18:46.419373       1 node_lifecycle_controller.go:532] Sending events to api server.
I0222 03:18:46.419481       1 node_lifecycle_controller.go:543] Starting node controller
I0222 03:18:46.419487       1 shared_informer.go:255] Waiting for caches to sync for taint
I0222 03:18:46.569445       1 controllermanager.go:603] Started "statefulset"
I0222 03:18:46.569632       1 stateful_set.go:152] Starting stateful set controller
I0222 03:18:46.569637       1 shared_informer.go:255] Waiting for caches to sync for stateful set
E0222 03:18:46.618475       1 core.go:218] failed to start cloud node lifecycle controller: no cloud provider provided
W0222 03:18:46.618557       1 controllermanager.go:581] Skipping "cloud-node-lifecycle"
I0222 03:18:46.769690       1 controllermanager.go:603] Started "persistentvolume-binder"
I0222 03:18:46.769758       1 pv_controller_base.go:318] Starting persistent volume controller
I0222 03:18:46.769763       1 shared_informer.go:255] Waiting for caches to sync for persistent volume
I0222 03:18:46.819573       1 controllermanager.go:603] Started "csrapproving"
I0222 03:18:46.819601       1 certificate_controller.go:112] Starting certificate controller "csrapproving"
I0222 03:18:46.819605       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrapproving
I0222 03:18:46.969289       1 controllermanager.go:603] Started "tokencleaner"
I0222 03:18:46.969411       1 tokencleaner.go:118] Starting token cleaner controller
I0222 03:18:46.969425       1 shared_informer.go:255] Waiting for caches to sync for token_cleaner
I0222 03:18:46.969455       1 shared_informer.go:262] Caches are synced for token_cleaner
I0222 03:18:47.118689       1 controllermanager.go:603] Started "root-ca-cert-publisher"
I0222 03:18:47.118727       1 publisher.go:107] Starting root CA certificate configmap publisher
I0222 03:18:47.118732       1 shared_informer.go:255] Waiting for caches to sync for crt configmap
I0222 03:18:47.269575       1 controllermanager.go:603] Started "ephemeral-volume"
I0222 03:18:47.269613       1 controller.go:169] Starting ephemeral volume controller
I0222 03:18:47.269618       1 shared_informer.go:255] Waiting for caches to sync for ephemeral
I0222 03:18:47.419714       1 controllermanager.go:603] Started "endpointslicemirroring"
I0222 03:18:47.419762       1 endpointslicemirroring_controller.go:216] Starting EndpointSliceMirroring controller
I0222 03:18:47.419767       1 shared_informer.go:255] Waiting for caches to sync for endpoint_slice_mirroring
I0222 03:18:47.570439       1 controllermanager.go:603] Started "replicationcontroller"
I0222 03:18:47.570510       1 replica_set.go:205] Starting replicationcontroller controller
I0222 03:18:47.570516       1 shared_informer.go:255] Waiting for caches to sync for ReplicationController
I0222 03:18:47.718727       1 controllermanager.go:603] Started "cronjob"
I0222 03:18:47.718770       1 cronjob_controllerv2.go:135] "Starting cronjob controller v2"
I0222 03:18:47.718776       1 shared_informer.go:255] Waiting for caches to sync for cronjob
I0222 03:18:47.869607       1 controllermanager.go:603] Started "endpointslice"
I0222 03:18:47.869663       1 endpointslice_controller.go:261] Starting endpoint slice controller
I0222 03:18:47.869925       1 shared_informer.go:255] Waiting for caches to sync for endpoint_slice
I0222 03:18:48.020012       1 controllermanager.go:603] Started "serviceaccount"
I0222 03:18:48.020046       1 serviceaccounts_controller.go:117] Starting service account controller
I0222 03:18:48.020050       1 shared_informer.go:255] Waiting for caches to sync for service account
I0222 03:18:48.169069       1 controllermanager.go:603] Started "pvc-protection"
I0222 03:18:48.169406       1 pvc_protection_controller.go:103] "Starting PVC protection controller"
I0222 03:18:48.169509       1 shared_informer.go:255] Waiting for caches to sync for PVC protection
I0222 03:18:48.170162       1 shared_informer.go:255] Waiting for caches to sync for resource quota
I0222 03:18:48.178999       1 shared_informer.go:262] Caches are synced for PV protection
I0222 03:18:48.180497       1 shared_informer.go:255] Waiting for caches to sync for garbage collector
I0222 03:18:48.201778       1 shared_informer.go:262] Caches are synced for job
I0222 03:18:48.205254       1 shared_informer.go:262] Caches are synced for deployment
I0222 03:18:48.209560       1 shared_informer.go:262] Caches are synced for TTL after finished
I0222 03:18:48.219887       1 shared_informer.go:262] Caches are synced for certificate-csrapproving
I0222 03:18:48.219964       1 shared_informer.go:262] Caches are synced for cronjob
I0222 03:18:48.220085       1 shared_informer.go:262] Caches are synced for service account
I0222 03:18:48.223917       1 shared_informer.go:262] Caches are synced for disruption
I0222 03:18:48.246685       1 shared_informer.go:262] Caches are synced for namespace
I0222 03:18:48.251713       1 shared_informer.go:262] Caches are synced for expand
I0222 03:18:48.258240       1 shared_informer.go:262] Caches are synced for ClusterRoleAggregator
I0222 03:18:48.267665       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0222 03:18:48.267770       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-legacy-unknown
I0222 03:18:48.267815       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kubelet-serving
I0222 03:18:48.267818       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kubelet-client
I0222 03:18:48.269762       1 shared_informer.go:262] Caches are synced for ephemeral
I0222 03:18:48.269882       1 shared_informer.go:262] Caches are synced for HPA
I0222 03:18:48.269892       1 shared_informer.go:262] Caches are synced for PVC protection
I0222 03:18:48.270013       1 shared_informer.go:262] Caches are synced for stateful set
I0222 03:18:48.271175       1 shared_informer.go:262] Caches are synced for ReplicationController
I0222 03:18:48.273307       1 shared_informer.go:262] Caches are synced for resource quota
I0222 03:18:48.274461       1 event.go:294] "Event occurred" object="local-path-storage/local-path-provisioner" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set local-path-provisioner-684f458cdd to 1"
I0222 03:18:48.275494       1 shared_informer.go:262] Caches are synced for ReplicaSet
I0222 03:18:48.277111       1 event.go:294] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-565d847f94 to 2"
I0222 03:18:48.294542       1 shared_informer.go:262] Caches are synced for resource quota
I0222 03:18:48.313827       1 shared_informer.go:262] Caches are synced for endpoint
I0222 03:18:48.319544       1 shared_informer.go:262] Caches are synced for crt configmap
I0222 03:18:48.320668       1 shared_informer.go:262] Caches are synced for endpoint_slice_mirroring
I0222 03:18:48.367219       1 shared_informer.go:262] Caches are synced for bootstrap_signer
W0222 03:18:48.372174       1 actual_state_of_world.go:541] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="acing-control-plane" does not exist
I0222 03:18:48.416669       1 shared_informer.go:262] Caches are synced for TTL
I0222 03:18:48.419887       1 shared_informer.go:262] Caches are synced for taint
I0222 03:18:48.419936       1 node_lifecycle_controller.go:1443] Initializing eviction metric for zone: 
I0222 03:18:48.419950       1 taint_manager.go:204] "Starting NoExecuteTaintManager"
W0222 03:18:48.419967       1 node_lifecycle_controller.go:1058] Missing timestamp for Node acing-control-plane. Assuming now as a timestamp.
I0222 03:18:48.419985       1 node_lifecycle_controller.go:1209] Controller detected that all Nodes are not-Ready. Entering master disruption mode.
I0222 03:18:48.419997       1 taint_manager.go:209] "Sending events to api server"
I0222 03:18:48.420131       1 event.go:294] "Event occurred" object="acing-control-plane" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node acing-control-plane event: Registered Node acing-control-plane in Controller"
I0222 03:18:48.423148       1 shared_informer.go:262] Caches are synced for node
I0222 03:18:48.423237       1 range_allocator.go:166] Starting range CIDR allocator
I0222 03:18:48.423252       1 shared_informer.go:255] Waiting for caches to sync for cidrallocator
I0222 03:18:48.423268       1 shared_informer.go:262] Caches are synced for cidrallocator
I0222 03:18:48.428188       1 shared_informer.go:262] Caches are synced for GC
I0222 03:18:48.428380       1 event.go:294] "Event occurred" object="kube-system/kube-scheduler-acing-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0222 03:18:48.428484       1 event.go:294] "Event occurred" object="kube-system/kube-controller-manager-acing-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0222 03:18:48.428555       1 event.go:294] "Event occurred" object="kube-system/etcd-acing-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0222 03:18:48.428616       1 event.go:294] "Event occurred" object="kube-system/kube-apiserver-acing-control-plane" fieldPath="" kind="Pod" apiVersion="v1" type="Warning" reason="NodeNotReady" message="Node is not ready"
I0222 03:18:48.428589       1 range_allocator.go:367] Set node acing-control-plane PodCIDR to [10.244.0.0/24]
I0222 03:18:48.432479       1 shared_informer.go:262] Caches are synced for daemon sets
I0222 03:18:48.448523       1 shared_informer.go:262] Caches are synced for attach detach
I0222 03:18:48.470099       1 shared_informer.go:262] Caches are synced for persistent volume
I0222 03:18:48.470347       1 shared_informer.go:262] Caches are synced for endpoint_slice
I0222 03:18:48.774466       1 event.go:294] "Event occurred" object="kube-system/coredns-565d847f94" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-565d847f94-m89qd"
I0222 03:18:48.776055       1 event.go:294] "Event occurred" object="local-path-storage/local-path-provisioner-684f458cdd" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: local-path-provisioner-684f458cdd-t2x8w"
I0222 03:18:48.780165       1 event.go:294] "Event occurred" object="kube-system/coredns-565d847f94" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-565d847f94-nh92p"
I0222 03:18:48.781333       1 shared_informer.go:262] Caches are synced for garbage collector
I0222 03:18:48.868526       1 shared_informer.go:262] Caches are synced for garbage collector
I0222 03:18:48.868553       1 garbagecollector.go:163] Garbage collector: all resource monitors have synced. Proceeding to collect garbage
I0222 03:18:48.877187       1 event.go:294] "Event occurred" object="kube-dns" fieldPath="" kind="Endpoints" apiVersion="v1" type="Warning" reason="FailedToCreateEndpoint" message="Failed to create endpoint for service kube-system/kube-dns: endpoints \"kube-dns\" already exists"
I0222 03:18:49.127031       1 event.go:294] "Event occurred" object="kube-system/kindnet" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kindnet-gfbqg"
I0222 03:18:49.129089       1 event.go:294] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-6z4z4"
W0222 03:18:51.591707       1 actual_state_of_world.go:541] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="acing-worker" does not exist
W0222 03:18:51.596093       1 actual_state_of_world.go:541] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="acing-worker2" does not exist
I0222 03:18:51.600126       1 range_allocator.go:367] Set node acing-worker2 PodCIDR to [10.244.2.0/24]
I0222 03:18:51.602094       1 event.go:294] "Event occurred" object="kube-system/kindnet" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kindnet-bw5zp"
I0222 03:18:51.602402       1 event.go:294] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-v76cb"
I0222 03:18:51.604354       1 range_allocator.go:367] Set node acing-worker PodCIDR to [10.244.1.0/24]
I0222 03:18:51.609403       1 event.go:294] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-g627l"
I0222 03:18:51.611988       1 event.go:294] "Event occurred" object="kube-system/kindnet" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kindnet-5thgl"
W0222 03:18:53.420604       1 node_lifecycle_controller.go:1058] Missing timestamp for Node acing-worker. Assuming now as a timestamp.
W0222 03:18:53.420646       1 node_lifecycle_controller.go:1058] Missing timestamp for Node acing-worker2. Assuming now as a timestamp.
I0222 03:18:53.420771       1 event.go:294] "Event occurred" object="acing-worker" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node acing-worker event: Registered Node acing-worker in Controller"
I0222 03:18:53.420788       1 event.go:294] "Event occurred" object="acing-worker2" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node acing-worker2 event: Registered Node acing-worker2 in Controller"
I0222 03:18:58.421504       1 node_lifecycle_controller.go:1236] Controller detected that some Nodes are Ready. Exiting master disruption mode.
W0222 03:19:01.740619       1 topologycache.go:199] Can't get CPU or zone information for acing-worker2 node
W0222 03:19:01.921528       1 topologycache.go:199] Can't get CPU or zone information for acing-worker node
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-acing-control-plane ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-6z4z4 ====
I0222 03:18:49.919749       1 node.go:163] Successfully retrieved node IP: 172.18.0.4
I0222 03:18:49.919814       1 server_others.go:138] "Detected node IP" address="172.18.0.4"
I0222 03:18:49.989556       1 server_others.go:206] "Using iptables Proxier"
I0222 03:18:49.989579       1 server_others.go:213] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0222 03:18:49.989658       1 server_others.go:214] "Creating dualStackProxier for iptables"
I0222 03:18:49.989693       1 server_others.go:501] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6"
I0222 03:18:49.989711       1 proxier.go:262] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0222 03:18:49.990091       1 proxier.go:262] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0222 03:18:49.990189       1 server.go:661] "Version info" version="v1.25.3"
I0222 03:18:49.990193       1 server.go:663] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:18:49.990351       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0222 03:18:49.991049       1 config.go:317] "Starting service config controller"
I0222 03:18:49.991549       1 config.go:226] "Starting endpoint slice config controller"
I0222 03:18:49.991586       1 shared_informer.go:255] Waiting for caches to sync for service config
I0222 03:18:49.991590       1 shared_informer.go:255] Waiting for caches to sync for endpoint slice config
I0222 03:18:49.992075       1 config.go:444] "Starting node config controller"
I0222 03:18:49.992079       1 shared_informer.go:255] Waiting for caches to sync for node config
I0222 03:18:50.092251       1 shared_informer.go:262] Caches are synced for endpoint slice config
I0222 03:18:50.092509       1 shared_informer.go:262] Caches are synced for node config
I0222 03:18:50.092527       1 shared_informer.go:262] Caches are synced for service config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-6z4z4 ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-g627l ====
I0222 03:18:53.729612       1 node.go:163] Successfully retrieved node IP: 172.18.0.2
I0222 03:18:53.729667       1 server_others.go:138] "Detected node IP" address="172.18.0.2"
I0222 03:18:53.750351       1 server_others.go:206] "Using iptables Proxier"
I0222 03:18:53.750493       1 server_others.go:213] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0222 03:18:53.750504       1 server_others.go:214] "Creating dualStackProxier for iptables"
I0222 03:18:53.750512       1 server_others.go:501] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6"
I0222 03:18:53.750528       1 proxier.go:262] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0222 03:18:53.750584       1 proxier.go:262] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0222 03:18:53.750667       1 server.go:661] "Version info" version="v1.25.3"
I0222 03:18:53.750671       1 server.go:663] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:18:53.750803       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0222 03:18:53.751376       1 config.go:317] "Starting service config controller"
I0222 03:18:53.751379       1 shared_informer.go:255] Waiting for caches to sync for service config
I0222 03:18:53.751388       1 config.go:226] "Starting endpoint slice config controller"
I0222 03:18:53.751389       1 shared_informer.go:255] Waiting for caches to sync for endpoint slice config
I0222 03:18:53.751547       1 config.go:444] "Starting node config controller"
I0222 03:18:53.751549       1 shared_informer.go:255] Waiting for caches to sync for node config
I0222 03:18:53.852278       1 shared_informer.go:262] Caches are synced for node config
I0222 03:18:53.852313       1 shared_informer.go:262] Caches are synced for service config
I0222 03:18:53.852333       1 shared_informer.go:262] Caches are synced for endpoint slice config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-g627l ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-v76cb ====
I0222 03:18:53.718629       1 node.go:163] Successfully retrieved node IP: 172.18.0.3
I0222 03:18:53.718691       1 server_others.go:138] "Detected node IP" address="172.18.0.3"
I0222 03:18:53.739223       1 server_others.go:206] "Using iptables Proxier"
I0222 03:18:53.739691       1 server_others.go:213] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I0222 03:18:53.739718       1 server_others.go:214] "Creating dualStackProxier for iptables"
I0222 03:18:53.739727       1 server_others.go:501] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6"
I0222 03:18:53.739965       1 proxier.go:262] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0222 03:18:53.740263       1 proxier.go:262] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I0222 03:18:53.740383       1 server.go:661] "Version info" version="v1.25.3"
I0222 03:18:53.740387       1 server.go:663] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:18:53.743121       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0222 03:18:53.744218       1 config.go:226] "Starting endpoint slice config controller"
I0222 03:18:53.744256       1 shared_informer.go:255] Waiting for caches to sync for endpoint slice config
I0222 03:18:53.744283       1 config.go:317] "Starting service config controller"
I0222 03:18:53.744285       1 shared_informer.go:255] Waiting for caches to sync for service config
I0222 03:18:53.744786       1 config.go:444] "Starting node config controller"
I0222 03:18:53.744805       1 shared_informer.go:255] Waiting for caches to sync for node config
I0222 03:18:53.845273       1 shared_informer.go:262] Caches are synced for service config
I0222 03:18:53.845312       1 shared_informer.go:262] Caches are synced for endpoint slice config
I0222 03:18:53.845350       1 shared_informer.go:262] Caches are synced for node config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-v76cb ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-acing-control-plane ====
I0222 03:18:28.854196       1 serving.go:348] Generated self-signed cert in-memory
W0222 03:18:31.804117       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0222 03:18:31.804259       1 authentication.go:346] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0222 03:18:31.804276       1 authentication.go:347] Continuing without authentication configuration. This may treat all requests as anonymous.
W0222 03:18:31.804286       1 authentication.go:348] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0222 03:18:31.811791       1 server.go:148] "Starting Kubernetes Scheduler" version="v1.25.3"
I0222 03:18:31.811819       1 server.go:150] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 03:18:31.812781       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I0222 03:18:31.813029       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0222 03:18:31.813195       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0222 03:18:31.813218       1 shared_informer.go:255] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
W0222 03:18:31.813997       1 reflector.go:424] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0222 03:18:31.814037       1 reflector.go:140] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0222 03:18:31.814254       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0222 03:18:31.814263       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0222 03:18:31.814512       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0222 03:18:31.814589       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0222 03:18:31.814820       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0222 03:18:31.815046       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0222 03:18:31.817585       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0222 03:18:31.817619       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0222 03:18:31.817663       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0222 03:18:31.817675       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0222 03:18:31.817727       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0222 03:18:31.817764       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0222 03:18:31.817768       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0222 03:18:31.817782       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0222 03:18:31.817786       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0222 03:18:31.817818       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0222 03:18:31.817821       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0222 03:18:31.817878       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0222 03:18:31.817882       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0222 03:18:31.817907       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0222 03:18:31.817910       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0222 03:18:31.817927       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0222 03:18:31.817930       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0222 03:18:31.817947       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0222 03:18:31.817951       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0222 03:18:31.817970       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0222 03:18:31.817973       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0222 03:18:31.817692       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0222 03:18:32.635475       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0222 03:18:32.635516       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0222 03:18:32.637460       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0222 03:18:32.637488       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0222 03:18:32.693710       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0222 03:18:32.693794       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0222 03:18:32.807058       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0222 03:18:32.807093       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0222 03:18:32.876131       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0222 03:18:32.876216       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0222 03:18:32.954252       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0222 03:18:32.954286       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
I0222 03:18:33.314493       1 shared_informer.go:262] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0222 03:18:35.815438       1 leaderelection.go:248] attempting to acquire leader lease kube-system/kube-scheduler...
I0222 03:18:35.821671       1 leaderelection.go:258] successfully acquired lease kube-system/kube-scheduler
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-acing-control-plane ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": [
        {
            "metadata": {
                "name": "acing-control-plane.174607476256571c",
                "namespace": "default",
                "uid": "6d440647-d60f-402c-89a2-5c5b0e3654fb",
                "resourceVersion": "225",
                "creationTimestamp": "2023-02-22T03:18:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-control-plane",
                "uid": "acing-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:34Z",
            "lastTimestamp": "2023-02-22T03:18:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-control-plane.1746074765dd10ee",
                "namespace": "default",
                "uid": "3c76bc06-196c-4d81-b15c-6808ec8acf26",
                "resourceVersion": "227",
                "creationTimestamp": "2023-02-22T03:18:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-control-plane",
                "uid": "acing-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:34Z",
            "lastTimestamp": "2023-02-22T03:18:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-control-plane.1746074768edfac1",
                "namespace": "default",
                "uid": "b376ac32-9eae-4719-93b3-af2776ae1e43",
                "resourceVersion": "228",
                "creationTimestamp": "2023-02-22T03:18:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-control-plane",
                "uid": "acing-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node acing-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:34Z",
            "lastTimestamp": "2023-02-22T03:18:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-control-plane.1746074768ee0432",
                "namespace": "default",
                "uid": "4b7768ec-3f15-4251-a9b7-5bd3088788d9",
                "resourceVersion": "229",
                "creationTimestamp": "2023-02-22T03:18:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-control-plane",
                "uid": "acing-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node acing-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:34Z",
            "lastTimestamp": "2023-02-22T03:18:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-control-plane.1746074768ee0b08",
                "namespace": "default",
                "uid": "2c859485-1f1d-48e8-9232-114267c27edc",
                "resourceVersion": "230",
                "creationTimestamp": "2023-02-22T03:18:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-control-plane",
                "uid": "acing-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node acing-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:34Z",
            "lastTimestamp": "2023-02-22T03:18:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-control-plane.1746074aa50978f9",
                "namespace": "default",
                "uid": "56de0572-9a4e-4ce8-bbce-117a38212f43",
                "resourceVersion": "321",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-control-plane",
                "uid": "d1df0202-9e40-450a-b8a9-62db9b094152",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node acing-control-plane event: Registered Node acing-control-plane in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-control-plane.1746074b02a61785",
                "namespace": "default",
                "uid": "8488e9a4-f1f1-4495-9302-6cabb55a9fb3",
                "resourceVersion": "395",
                "creationTimestamp": "2023-02-22T03:18:49Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-control-plane",
                "uid": "acing-control-plane"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-02-22T03:18:49.990468Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-acing-control-plane"
        },
        {
            "metadata": {
                "name": "acing-control-plane.1746074c306558e5",
                "namespace": "default",
                "uid": "3695b0a4-2dcc-42fa-ad78-c613109e0afe",
                "resourceVersion": "483",
                "creationTimestamp": "2023-02-22T03:18:55Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-control-plane",
                "uid": "acing-control-plane"
            },
            "reason": "NodeReady",
            "message": "Node acing-control-plane status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "acing-control-plane"
            },
            "firstTimestamp": "2023-02-22T03:18:55Z",
            "lastTimestamp": "2023-02-22T03:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker.1746074b4a0e39e1",
                "namespace": "default",
                "uid": "e84e80c6-5204-4c4e-ba95-c8e73d5bd952",
                "resourceVersion": "405",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker",
                "uid": "acing-worker"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker.1746074b4b1e1789",
                "namespace": "default",
                "uid": "27c5a369-9a8b-47c1-905b-6c7d12610845",
                "resourceVersion": "415",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker",
                "uid": "acing-worker"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node acing-worker status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker.1746074b4b1e1f59",
                "namespace": "default",
                "uid": "8ba0621a-e46f-48ff-a9fe-378fda46cc05",
                "resourceVersion": "416",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker",
                "uid": "acing-worker"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node acing-worker status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker.1746074b4b1e2659",
                "namespace": "default",
                "uid": "4ab017b9-ef92-4edb-87ee-23f09bcf0885",
                "resourceVersion": "417",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker",
                "uid": "acing-worker"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node acing-worker status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker.1746074b4cb99502",
                "namespace": "default",
                "uid": "125f4ee6-ed9e-42d5-9554-c0425b23663a",
                "resourceVersion": "413",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker",
                "uid": "acing-worker"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker.1746074bcf18c172",
                "namespace": "default",
                "uid": "43008327-5c86-4be7-bc24-b1282fbbaa5c",
                "resourceVersion": "455",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker",
                "uid": "48f742c7-4c8f-4bf8-b622-6f221913fc38",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node acing-worker event: Registered Node acing-worker in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:53Z",
            "lastTimestamp": "2023-02-22T03:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker.1746074be2639a02",
                "namespace": "default",
                "uid": "ed3cdc16-4166-446e-8f5a-7dc2861f7e6a",
                "resourceVersion": "464",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker",
                "uid": "acing-worker"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-02-22T03:18:53.744207Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-acing-worker"
        },
        {
            "metadata": {
                "name": "acing-worker.1746074dc98ed6e1",
                "namespace": "default",
                "uid": "33d8d752-085a-4d79-885e-116301e33f06",
                "resourceVersion": "542",
                "creationTimestamp": "2023-02-22T03:19:01Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker",
                "uid": "acing-worker"
            },
            "reason": "NodeReady",
            "message": "Node acing-worker status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "acing-worker"
            },
            "firstTimestamp": "2023-02-22T03:19:01Z",
            "lastTimestamp": "2023-02-22T03:19:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker2.1746074b4a096563",
                "namespace": "default",
                "uid": "38b50360-f93b-4437-8b7b-08cd1fce149f",
                "resourceVersion": "406",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker2",
                "uid": "acing-worker2"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker2.1746074b4b7d2a14",
                "namespace": "default",
                "uid": "40bddf24-0da9-472e-9e08-133912fecf90",
                "resourceVersion": "418",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker2",
                "uid": "acing-worker2"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node acing-worker2 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker2.1746074b4b7d3261",
                "namespace": "default",
                "uid": "01cbc99d-d420-4b34-90bd-70119a03135a",
                "resourceVersion": "419",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker2",
                "uid": "acing-worker2"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node acing-worker2 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker2.1746074b4b7d3a07",
                "namespace": "default",
                "uid": "02c1b3a8-4164-4c75-9a96-189c373d3b35",
                "resourceVersion": "420",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker2",
                "uid": "acing-worker2"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node acing-worker2 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker2.1746074b4cbcbca0",
                "namespace": "default",
                "uid": "05e3af86-9efe-4ad0-b81c-6156fff90ffc",
                "resourceVersion": "414",
                "creationTimestamp": "2023-02-22T03:18:51Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker2",
                "uid": "acing-worker2"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:18:51Z",
            "lastTimestamp": "2023-02-22T03:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker2.1746074bcf18f4e0",
                "namespace": "default",
                "uid": "c7f9e392-51d0-4b09-9495-101d5435307e",
                "resourceVersion": "456",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker2",
                "uid": "d4b840cd-f2ed-4fb9-babb-0499b10784fb",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node acing-worker2 event: Registered Node acing-worker2 in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:53Z",
            "lastTimestamp": "2023-02-22T03:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-worker2.1746074be2cb6dec",
                "namespace": "default",
                "uid": "a58b2168-0c27-414e-9604-35577e5c894b",
                "resourceVersion": "465",
                "creationTimestamp": "2023-02-22T03:18:53Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker2",
                "uid": "acing-worker2"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2023-02-22T03:18:53.751012Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-acing-worker2"
        },
        {
            "metadata": {
                "name": "acing-worker2.1746074dbec303d1",
                "namespace": "default",
                "uid": "37ff78c0-7742-4930-8c5b-4a2109678b2f",
                "resourceVersion": "538",
                "creationTimestamp": "2023-02-22T03:19:01Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-worker2",
                "uid": "acing-worker2"
            },
            "reason": "NodeReady",
            "message": "Node acing-worker2 status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "acing-worker2"
            },
            "firstTimestamp": "2023-02-22T03:19:01Z",
            "lastTimestamp": "2023-02-22T03:19:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-dns.1746074ac048d849",
                "namespace": "default",
                "uid": "d402d0ba-c2cb-4306-877d-711d65ca1b36",
                "resourceVersion": "361",
                "creationTimestamp": "2023-02-22T03:18:48Z"
            },
            "involvedObject": {
                "kind": "Endpoints",
                "name": "kube-dns",
                "apiVersion": "v1"
            },
            "reason": "FailedToCreateEndpoint",
            "message": "Failed to create endpoint for service kube-system/kube-dns: endpoints \"kube-dns\" already exists",
            "source": {
                "component": "endpoint-controller"
            },
            "firstTimestamp": "2023-02-22T03:18:48Z",
            "lastTimestamp": "2023-02-22T03:18:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "62200c03-eced-4344-84c8-496902341e5b",
                "resourceVersion": "198",
                "creationTimestamp": "2023-02-22T03:18:33Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "641"
    },
    "items": []
}
