{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": [
        {
            "metadata": {
                "name": "acing-advanced-control-plane",
                "uid": "c506ce1e-9ec3-48fa-9b17-8f47e9e875e7",
                "resourceVersion": "394",
                "creationTimestamp": "2024-02-22T02:33:15Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "ingress-ready": "true",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "acing-advanced-control-plane",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ],
                "providerID": "kind://docker/acing-advanced/acing-advanced-control-plane"
            },
            "status": {
                "capacity": {
                    "cpu": "8",
                    "ephemeral-storage": "61202244Ki",
                    "memory": "8034972Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "8",
                    "ephemeral-storage": "61202244Ki",
                    "memory": "8034972Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-02-22T02:33:34Z",
                        "lastTransitionTime": "2024-02-22T02:33:13Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-02-22T02:33:34Z",
                        "lastTransitionTime": "2024-02-22T02:33:13Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-02-22T02:33:34Z",
                        "lastTransitionTime": "2024-02-22T02:33:13Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2024-02-22T02:33:34Z",
                        "lastTransitionTime": "2024-02-22T02:33:34Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.5"
                    },
                    {
                        "type": "Hostname",
                        "address": "acing-advanced-control-plane"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "82260e462c2d48d4aca0ddeb414b4adc",
                    "systemUUID": "82260e462c2d48d4aca0ddeb414b4adc",
                    "bootID": "0532bf04-3607-442f-ba73-0430355e1631",
                    "kernelVersion": "6.5.11-linuxkit",
                    "osImage": "Debian GNU/Linux 12 (bookworm)",
                    "containerRuntimeVersion": "containerd://1.7.13",
                    "kubeletVersion": "v1.29.2",
                    "kubeProxyVersion": "v1.29.2",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "docker.io/library/import-2024-02-14@sha256:67a29a48e4b046cb8e09750f6955526f0e82544a137993e26c7761aef8393f6f",
                            "registry.k8s.io/kube-proxy-arm64:v1.29.2",
                            "registry.k8s.io/kube-proxy:v1.29.2"
                        ],
                        "sizeBytes": 86635209
                    },
                    {
                        "names": [
                            "docker.io/library/import-2024-02-14@sha256:a03e924b2d1671991ef73f73ad659619f49a9bd090a08d3e0ddc407fc4ba6437",
                            "registry.k8s.io/kube-apiserver-arm64:v1.29.2",
                            "registry.k8s.io/kube-apiserver:v1.29.2"
                        ],
                        "sizeBytes": 83343331
                    },
                    {
                        "names": [
                            "docker.io/library/import-2024-02-14@sha256:687b91fad3beb0d6c428fbe2c7fc7108fe0b4673b6009d448ee5abc1b559e441",
                            "registry.k8s.io/kube-controller-manager-arm64:v1.29.2",
                            "registry.k8s.io/kube-controller-manager:v1.29.2"
                        ],
                        "sizeBytes": 77707081
                    },
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.10-0"
                        ],
                        "sizeBytes": 65198393
                    },
                    {
                        "names": [
                            "docker.io/library/import-2024-02-14@sha256:ee28e569ed76ef9d583d37555c8afbaee1ea1d8e17c1177971b6a11eeb37fb86",
                            "registry.k8s.io/kube-scheduler-arm64:v1.29.2",
                            "registry.k8s.io/kube-scheduler:v1.29.2"
                        ],
                        "sizeBytes": 59094857
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20240202-8f1494ea"
                        ],
                        "sizeBytes": 25336339
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20240202-8f1494ea"
                        ],
                        "sizeBytes": 17299575
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.11.1"
                        ],
                        "sizeBytes": 16482581
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20230510-486859a6"
                        ],
                        "sizeBytes": 2922287
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 268400
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-76f75df574-7vq95.17b60ea59489a4d4",
                "namespace": "kube-system",
                "uid": "b1022a16-cf3b-493a-a6fa-2c9f8bd70be7",
                "resourceVersion": "368",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-76f75df574-7vq95",
                "uid": "8d4878e3-f779-4d11-a38e-d4db22e66e9e",
                "apiVersion": "v1",
                "resourceVersion": "366"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-76f75df574-7vq95.17b60ea5e9d96e2f",
                "namespace": "kube-system",
                "uid": "0a85a184-ba63-4fe4-9959-93dbf3d66ae0",
                "resourceVersion": "398",
                "creationTimestamp": "2024-02-22T02:33:34Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-76f75df574-7vq95",
                "uid": "8d4878e3-f779-4d11-a38e-d4db22e66e9e",
                "apiVersion": "v1",
                "resourceVersion": "372"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-76f75df574-7vq95 to acing-advanced-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-02-22T02:33:34Z",
            "lastTimestamp": "2024-02-22T02:33:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-76f75df574-7vq95.17b60ea600b2979a",
                "namespace": "kube-system",
                "uid": "6661bd77-748b-4449-b2f0-23c1741ebc61",
                "resourceVersion": "409",
                "creationTimestamp": "2024-02-22T02:33:34Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-76f75df574-7vq95",
                "uid": "8d4878e3-f779-4d11-a38e-d4db22e66e9e",
                "apiVersion": "v1",
                "resourceVersion": "395",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.11.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:34Z",
            "lastTimestamp": "2024-02-22T02:33:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "coredns-76f75df574-7vq95.17b60ea61c1a2589",
                "namespace": "kube-system",
                "uid": "23063f6d-6e32-49c1-8bca-ac09fb25a40f",
                "resourceVersion": "412",
                "creationTimestamp": "2024-02-22T02:33:35Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-76f75df574-7vq95",
                "uid": "8d4878e3-f779-4d11-a38e-d4db22e66e9e",
                "apiVersion": "v1",
                "resourceVersion": "395",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:35Z",
            "lastTimestamp": "2024-02-22T02:33:35Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "coredns-76f75df574-7vq95.17b60ea620dfbe8a",
                "namespace": "kube-system",
                "uid": "7dbb8577-6114-466c-94dd-70b5dc7bf38b",
                "resourceVersion": "415",
                "creationTimestamp": "2024-02-22T02:33:35Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-76f75df574-7vq95",
                "uid": "8d4878e3-f779-4d11-a38e-d4db22e66e9e",
                "apiVersion": "v1",
                "resourceVersion": "395",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:35Z",
            "lastTimestamp": "2024-02-22T02:33:35Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "coredns-76f75df574-wzhpg.17b60ea59514d675",
                "namespace": "kube-system",
                "uid": "ba7b2f81-2cc6-4db1-bcd0-aa0a6c9c6195",
                "resourceVersion": "380",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-76f75df574-wzhpg",
                "uid": "568a8ec2-3c8a-4685-a099-1b139d56787d",
                "apiVersion": "v1",
                "resourceVersion": "370"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-76f75df574-wzhpg.17b60ea5e9dfe90a",
                "namespace": "kube-system",
                "uid": "15d9328a-701a-429c-80cf-fa472c7774b7",
                "resourceVersion": "399",
                "creationTimestamp": "2024-02-22T02:33:34Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-76f75df574-wzhpg",
                "uid": "568a8ec2-3c8a-4685-a099-1b139d56787d",
                "apiVersion": "v1",
                "resourceVersion": "381"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-76f75df574-wzhpg to acing-advanced-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-02-22T02:33:34Z",
            "lastTimestamp": "2024-02-22T02:33:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-76f75df574-wzhpg.17b60ea600dfafdf",
                "namespace": "kube-system",
                "uid": "9c8ea617-e0fb-4cc9-a29f-82aa7d32abd1",
                "resourceVersion": "411",
                "creationTimestamp": "2024-02-22T02:33:34Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-76f75df574-wzhpg",
                "uid": "568a8ec2-3c8a-4685-a099-1b139d56787d",
                "apiVersion": "v1",
                "resourceVersion": "397",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.11.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:34Z",
            "lastTimestamp": "2024-02-22T02:33:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "coredns-76f75df574-wzhpg.17b60ea61caa0009",
                "namespace": "kube-system",
                "uid": "1711717e-a9df-47e5-9567-2834e3acdcd3",
                "resourceVersion": "413",
                "creationTimestamp": "2024-02-22T02:33:35Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-76f75df574-wzhpg",
                "uid": "568a8ec2-3c8a-4685-a099-1b139d56787d",
                "apiVersion": "v1",
                "resourceVersion": "397",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:35Z",
            "lastTimestamp": "2024-02-22T02:33:35Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "coredns-76f75df574-wzhpg.17b60ea6214ed722",
                "namespace": "kube-system",
                "uid": "c3fca855-2720-49a4-a844-824b1537b838",
                "resourceVersion": "417",
                "creationTimestamp": "2024-02-22T02:33:35Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-76f75df574-wzhpg",
                "uid": "568a8ec2-3c8a-4685-a099-1b139d56787d",
                "apiVersion": "v1",
                "resourceVersion": "397",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:35Z",
            "lastTimestamp": "2024-02-22T02:33:35Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "coredns-76f75df574.17b60ea5949fd6f5",
                "namespace": "kube-system",
                "uid": "3602ecdb-6070-4299-8bc8-82de03c97498",
                "resourceVersion": "371",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-76f75df574",
                "uid": "20842625-39ab-46d5-8c27-675d458ccb8e",
                "apiVersion": "apps/v1",
                "resourceVersion": "353"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-76f75df574-7vq95",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-76f75df574.17b60ea594dba6a5",
                "namespace": "kube-system",
                "uid": "cee48cd1-1c8f-4f3e-a8f2-80f3782d72a6",
                "resourceVersion": "379",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-76f75df574",
                "uid": "20842625-39ab-46d5-8c27-675d458ccb8e",
                "apiVersion": "apps/v1",
                "resourceVersion": "353"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-76f75df574-wzhpg",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.17b60ea588b06d40",
                "namespace": "kube-system",
                "uid": "07d91012-bdc6-4d09-baf5-fe9f015dcec8",
                "resourceVersion": "356",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "13d71248-772e-4767-a2bf-38a126c9e8e4",
                "apiVersion": "apps/v1",
                "resourceVersion": "233"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-76f75df574 to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "deployment-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-w88bq.17b60ea577248872",
                "namespace": "kube-system",
                "uid": "a531023c-c3a8-48be-8b5b-e2518a77477f",
                "resourceVersion": "340",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-w88bq",
                "uid": "5571bf0c-c499-4a1b-8111-a75098724ace",
                "apiVersion": "v1",
                "resourceVersion": "332"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-w88bq to acing-advanced-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-w88bq.17b60ea58771d778",
                "namespace": "kube-system",
                "uid": "706ad031-1fcf-4398-b442-5b93505239eb",
                "resourceVersion": "350",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-w88bq",
                "uid": "5571bf0c-c499-4a1b-8111-a75098724ace",
                "apiVersion": "v1",
                "resourceVersion": "336"
            },
            "reason": "FailedMount",
            "message": "MountVolume.SetUp failed for volume \"kube-api-access-5rb44\" : configmap \"kube-root-ca.crt\" not found",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "kindnet-w88bq.17b60ea5b1f36340",
                "namespace": "kube-system",
                "uid": "d6191f4f-aa52-4899-917f-e4652a8dfa58",
                "resourceVersion": "385",
                "creationTimestamp": "2024-02-22T02:33:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-w88bq",
                "uid": "5571bf0c-c499-4a1b-8111-a75098724ace",
                "apiVersion": "v1",
                "resourceVersion": "336",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20240202-8f1494ea\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:33Z",
            "lastTimestamp": "2024-02-22T02:33:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "kindnet-w88bq.17b60ea5c5fe56da",
                "namespace": "kube-system",
                "uid": "9dbbb6d7-dd24-4159-85f9-0dbb12c83b7b",
                "resourceVersion": "388",
                "creationTimestamp": "2024-02-22T02:33:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-w88bq",
                "uid": "5571bf0c-c499-4a1b-8111-a75098724ace",
                "apiVersion": "v1",
                "resourceVersion": "336",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:33Z",
            "lastTimestamp": "2024-02-22T02:33:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "kindnet-w88bq.17b60ea5d3a67ea4",
                "namespace": "kube-system",
                "uid": "62c9bcc2-e393-4f2d-9741-55601319d82e",
                "resourceVersion": "391",
                "creationTimestamp": "2024-02-22T02:33:34Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-w88bq",
                "uid": "5571bf0c-c499-4a1b-8111-a75098724ace",
                "apiVersion": "v1",
                "resourceVersion": "336",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:34Z",
            "lastTimestamp": "2024-02-22T02:33:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "kindnet.17b60ea576ed3391",
                "namespace": "kube-system",
                "uid": "55606f21-86bf-4219-8384-bce01f096d2d",
                "resourceVersion": "337",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "bf705353-8f2c-4c1d-9f99-b64ddefaf1c5",
                "apiVersion": "apps/v1",
                "resourceVersion": "255"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-w88bq",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager.17b60ea23431c26d",
                "namespace": "kube-system",
                "uid": "4805b3c6-3502-42c0-a0f4-b0fa07bab17d",
                "resourceVersion": "213",
                "creationTimestamp": "2024-02-22T02:33:18Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "81fba62a-017b-4737-92f7-cbc6513ad91a",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "209"
            },
            "reason": "LeaderElection",
            "message": "acing-advanced-control-plane_936605df-121c-4e67-afa1-3d6980a714f0 became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2024-02-22T02:33:18Z",
            "lastTimestamp": "2024-02-22T02:33:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kube-controller-manager",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-vkc66.17b60ea5770a4e6a",
                "namespace": "kube-system",
                "uid": "e9cef830-8a5f-4474-8a47-4c515a312531",
                "resourceVersion": "339",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vkc66",
                "uid": "e7025245-898a-49b2-a65e-02e91ec11d2d",
                "apiVersion": "v1",
                "resourceVersion": "331"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-vkc66 to acing-advanced-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-vkc66.17b60ea58773e994",
                "namespace": "kube-system",
                "uid": "1047c58f-5cc6-4005-8d58-b36c2b7e85ee",
                "resourceVersion": "351",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vkc66",
                "uid": "e7025245-898a-49b2-a65e-02e91ec11d2d",
                "apiVersion": "v1",
                "resourceVersion": "335"
            },
            "reason": "FailedMount",
            "message": "MountVolume.SetUp failed for volume \"kube-api-access-blj8m\" : configmap \"kube-root-ca.crt\" not found",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "kube-proxy-vkc66.17b60ea5b1a9c5b6",
                "namespace": "kube-system",
                "uid": "3ca4548a-f8fc-484e-af70-1819a5d48cc5",
                "resourceVersion": "384",
                "creationTimestamp": "2024-02-22T02:33:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vkc66",
                "uid": "e7025245-898a-49b2-a65e-02e91ec11d2d",
                "apiVersion": "v1",
                "resourceVersion": "335",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.29.2\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:33Z",
            "lastTimestamp": "2024-02-22T02:33:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "kube-proxy-vkc66.17b60ea5bf643724",
                "namespace": "kube-system",
                "uid": "60b63dc2-7b5a-4a20-b2eb-65860d4d42fd",
                "resourceVersion": "386",
                "creationTimestamp": "2024-02-22T02:33:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vkc66",
                "uid": "e7025245-898a-49b2-a65e-02e91ec11d2d",
                "apiVersion": "v1",
                "resourceVersion": "335",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:33Z",
            "lastTimestamp": "2024-02-22T02:33:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "kube-proxy-vkc66.17b60ea5c388eab1",
                "namespace": "kube-system",
                "uid": "ce68a6d8-8c65-4611-baea-d8ac9ac8dedd",
                "resourceVersion": "387",
                "creationTimestamp": "2024-02-22T02:33:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-vkc66",
                "uid": "e7025245-898a-49b2-a65e-02e91ec11d2d",
                "apiVersion": "v1",
                "resourceVersion": "335",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:33Z",
            "lastTimestamp": "2024-02-22T02:33:33Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "kube-proxy.17b60ea576d64838",
                "namespace": "kube-system",
                "uid": "e0fb35b4-c7b3-48fe-acd1-6c7d20c0f607",
                "resourceVersion": "333",
                "creationTimestamp": "2024-02-22T02:33:32Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "418c318f-123f-46ca-bc34-ddc5c1c38d89",
                "apiVersion": "apps/v1",
                "resourceVersion": "237"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-vkc66",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-02-22T02:33:32Z",
            "lastTimestamp": "2024-02-22T02:33:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.17b60ea285f77837",
                "namespace": "kube-system",
                "uid": "8dcb79d3-18a0-4bcf-bc5d-283bb73d1cab",
                "resourceVersion": "262",
                "creationTimestamp": "2024-02-22T02:33:19Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "a363079d-b1b2-4245-b024-9038a0ee99ed",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "260"
            },
            "reason": "LeaderElection",
            "message": "acing-advanced-control-plane_957a7176-41e2-4e41-a3ab-ec2f884a88c9 became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-02-22T02:33:19Z",
            "lastTimestamp": "2024-02-22T02:33:19Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "a5e7fef1-0aeb-4cb5-9a9d-a77963a9d74c",
                "resourceVersion": "235",
                "creationTimestamp": "2024-02-22T02:33:18Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": [
        {
            "metadata": {
                "name": "kindnet",
                "namespace": "kube-system",
                "uid": "bf705353-8f2c-4c1d-9f99-b64ddefaf1c5",
                "resourceVersion": "406",
                "generation": 1,
                "creationTimestamp": "2024-02-22T02:33:19Z",
                "labels": {
                    "app": "kindnet",
                    "k8s-app": "kindnet",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "kindnet"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kindnet",
                            "k8s-app": "kindnet",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-cfg",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kindnet-cni",
                                "image": "docker.io/kindest/kindnetd:v20240202-8f1494ea",
                                "env": [
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_SUBNET",
                                        "value": "10.244.0.0/16"
                                    },
                                    {
                                        "name": "CONTROL_PLANE_ENDPOINT",
                                        "value": "acing-advanced-control-plane:6443"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-cfg",
                                        "mountPath": "/etc/cni/net.d"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_RAW",
                                            "NET_ADMIN"
                                        ]
                                    },
                                    "privileged": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kindnet",
                        "serviceAccount": "kindnet",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "418c318f-123f-46ca-bc34-ddc5c1c38d89",
                "resourceVersion": "408",
                "generation": 1,
                "creationTimestamp": "2024-02-22T02:33:18Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.29.2",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "13d71248-772e-4767-a2bf-38a126c9e8e4",
                "resourceVersion": "430",
                "generation": 1,
                "creationTimestamp": "2024-02-22T02:33:18Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.11.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-02-22T02:33:35Z",
                        "lastTransitionTime": "2024-02-22T02:33:35Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-02-22T02:33:35Z",
                        "lastTransitionTime": "2024-02-22T02:33:32Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-76f75df574\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-76f75df574",
                "namespace": "kube-system",
                "uid": "20842625-39ab-46d5-8c27-675d458ccb8e",
                "resourceVersion": "429",
                "generation": 1,
                "creationTimestamp": "2024-02-22T02:33:32Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "76f75df574"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "13d71248-772e-4767-a2bf-38a126c9e8e4",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "76f75df574"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "76f75df574"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.11.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-76f75df574-7vq95",
                "generateName": "coredns-76f75df574-",
                "namespace": "kube-system",
                "uid": "8d4878e3-f779-4d11-a38e-d4db22e66e9e",
                "resourceVersion": "425",
                "creationTimestamp": "2024-02-22T02:33:32Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "76f75df574"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-76f75df574",
                        "uid": "20842625-39ab-46d5-8c27-675d458ccb8e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-8vpjf",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.11.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-8vpjf",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "acing-advanced-control-plane",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:35Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:34Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:35Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:35Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:34Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "hostIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "podIP": "10.244.0.2",
                "podIPs": [
                    {
                        "ip": "10.244.0.2"
                    }
                ],
                "startTime": "2024-02-22T02:33:34Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2024-02-22T02:33:35Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/coredns/coredns:v1.11.1",
                        "imageID": "sha256:2437cf762177702dec2dfe99a09c37427a15af6d9a57c456b65352667c223d93",
                        "containerID": "containerd://88fa5aafdfcf5c8bfe06d256dc285efdc0732ac9e560d4f2ec3138ac187b8d8e",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-76f75df574-wzhpg",
                "generateName": "coredns-76f75df574-",
                "namespace": "kube-system",
                "uid": "568a8ec2-3c8a-4685-a099-1b139d56787d",
                "resourceVersion": "420",
                "creationTimestamp": "2024-02-22T02:33:32Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "76f75df574"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-76f75df574",
                        "uid": "20842625-39ab-46d5-8c27-675d458ccb8e",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-tkt4b",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.11.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-tkt4b",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "acing-advanced-control-plane",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:35Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:34Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:35Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:35Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:34Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "hostIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "podIP": "10.244.0.3",
                "podIPs": [
                    {
                        "ip": "10.244.0.3"
                    }
                ],
                "startTime": "2024-02-22T02:33:34Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2024-02-22T02:33:35Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/coredns/coredns:v1.11.1",
                        "imageID": "sha256:2437cf762177702dec2dfe99a09c37427a15af6d9a57c456b65352667c223d93",
                        "containerID": "containerd://92667b6cb12dde439a265ee44f2e3a13079d530aa64aa2e7021f78198641f3f1",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-acing-advanced-control-plane",
                "namespace": "kube-system",
                "uid": "5ec7ccf7-d0ff-4d06-89cc-d800b10781e0",
                "resourceVersion": "300",
                "creationTimestamp": "2024-02-22T02:33:18Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.18.0.5:2379",
                    "kubernetes.io/config.hash": "995235507365387957f4cdf1ca497d92",
                    "kubernetes.io/config.mirror": "995235507365387957f4cdf1ca497d92",
                    "kubernetes.io/config.seen": "2024-02-22T02:33:12.425784919Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "acing-advanced-control-plane",
                        "uid": "c506ce1e-9ec3-48fa-9b17-8f47e9e875e7",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.5.10-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.18.0.5:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://172.18.0.5:2380",
                            "--initial-cluster=acing-advanced-control-plane=https://172.18.0.5:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.5:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.18.0.5:2380",
                            "--name=acing-advanced-control-plane",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health?exclude=NOSPACE\u0026serializable=true",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health?serializable=false",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "acing-advanced-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:29Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:29Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "hostIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "startTime": "2024-02-22T02:33:18Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2024-02-22T02:33:14Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/etcd:3.5.10-0",
                        "imageID": "sha256:79f8d13ae8b8839cadfb2f83416935f5184206d386028e2d1263577f0ab3620b",
                        "containerID": "containerd://16cec29ef5ceb6d8988a7f33f1817e524cad3c5b097f84f5b95ddae8e459d660",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kindnet-w88bq",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "5571bf0c-c499-4a1b-8111-a75098724ace",
                "resourceVersion": "405",
                "creationTimestamp": "2024-02-22T02:33:32Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "7c5b4544c6",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "bf705353-8f2c-4c1d-9f99-b64ddefaf1c5",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-5rb44",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20240202-8f1494ea",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "acing-advanced-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-5rb44",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "acing-advanced-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "acing-advanced-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:34Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:32Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:34Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:34Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:32Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "hostIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "startTime": "2024-02-22T02:33:32Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2024-02-22T02:33:34Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/kindest/kindnetd:v20240202-8f1494ea",
                        "imageID": "sha256:4740c1948d3fceb8d7dacc63033aa6299d80794ee4f4811539ec1081d9211f3d",
                        "containerID": "containerd://57d929f8c754d23ce11273a40e66de91260c6551f2bf66b0d65697ae6daa1c4f",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-acing-advanced-control-plane",
                "namespace": "kube-system",
                "uid": "875eddd8-be58-46bb-b68c-268384026763",
                "resourceVersion": "278",
                "creationTimestamp": "2024-02-22T02:33:17Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.18.0.5:6443",
                    "kubernetes.io/config.hash": "2aa72945aca15221d4749b644d8bf054",
                    "kubernetes.io/config.mirror": "2aa72945aca15221d4749b644d8bf054",
                    "kubernetes.io/config.seen": "2024-02-22T02:33:12.425789836Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "acing-advanced-control-plane",
                        "uid": "c506ce1e-9ec3-48fa-9b17-8f47e9e875e7",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.29.2",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.18.0.5",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--runtime-config=",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.5",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 6443,
                                "host": "172.18.0.5",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.5",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "acing-advanced-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:25Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:25Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "hostIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "startTime": "2024-02-22T02:33:18Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2024-02-22T02:33:13Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-apiserver-arm64:v1.29.2",
                        "imageID": "docker.io/library/import-2024-02-14@sha256:a03e924b2d1671991ef73f73ad659619f49a9bd090a08d3e0ddc407fc4ba6437",
                        "containerID": "containerd://17e2d2338aa29fc0208b9f5ec72a0e4bf25ddb2130a741b54daea882975d6491",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-acing-advanced-control-plane",
                "namespace": "kube-system",
                "uid": "0c52c85e-62c6-4ad7-b86a-8aac24b04719",
                "resourceVersion": "276",
                "creationTimestamp": "2024-02-22T02:33:17Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "b2f2cbcfc9547207d094bda681962c78",
                    "kubernetes.io/config.mirror": "b2f2cbcfc9547207d094bda681962c78",
                    "kubernetes.io/config.seen": "2024-02-22T02:33:12.425791794Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "acing-advanced-control-plane",
                        "uid": "c506ce1e-9ec3-48fa-9b17-8f47e9e875e7",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.29.2",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=acing-advanced",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "acing-advanced-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:24Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:24Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "hostIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "startTime": "2024-02-22T02:33:18Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2024-02-22T02:33:13Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-controller-manager-arm64:v1.29.2",
                        "imageID": "docker.io/library/import-2024-02-14@sha256:687b91fad3beb0d6c428fbe2c7fc7108fe0b4673b6009d448ee5abc1b559e441",
                        "containerID": "containerd://0f99c1b0ee71a2669e99842d5d36866b7355da4bb20a876b6f6f4d844ad1dea7",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-vkc66",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "e7025245-898a-49b2-a65e-02e91ec11d2d",
                "resourceVersion": "407",
                "creationTimestamp": "2024-02-22T02:33:32Z",
                "labels": {
                    "controller-revision-hash": "65bbdcdfff",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "418c318f-123f-46ca-bc34-ddc5c1c38d89",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-blj8m",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.29.2",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-blj8m",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "acing-advanced-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "acing-advanced-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:34Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:32Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:34Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:34Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:32Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "hostIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "startTime": "2024-02-22T02:33:32Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2024-02-22T02:33:33Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy-arm64:v1.29.2",
                        "imageID": "docker.io/library/import-2024-02-14@sha256:67a29a48e4b046cb8e09750f6955526f0e82544a137993e26c7761aef8393f6f",
                        "containerID": "containerd://c14f530aaac5692865b62f60a05b6f49e61a21089bbf3e124def49eaffa491b7",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-acing-advanced-control-plane",
                "namespace": "kube-system",
                "uid": "5c6bacd6-77b5-4f82-8157-6c9b61332116",
                "resourceVersion": "284",
                "creationTimestamp": "2024-02-22T02:33:18Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "e90fe5e6cbf920258c177f0fe30430c9",
                    "kubernetes.io/config.mirror": "e90fe5e6cbf920258c177f0fe30430c9",
                    "kubernetes.io/config.seen": "2024-02-22T02:33:18.648195130Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "acing-advanced-control-plane",
                        "uid": "c506ce1e-9ec3-48fa-9b17-8f47e9e875e7",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.29.2",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "acing-advanced-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:27Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:27Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-02-22T02:33:18Z"
                    }
                ],
                "hostIP": "172.18.0.5",
                "hostIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "podIP": "172.18.0.5",
                "podIPs": [
                    {
                        "ip": "172.18.0.5"
                    }
                ],
                "startTime": "2024-02-22T02:33:18Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2024-02-22T02:33:13Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-scheduler-arm64:v1.29.2",
                        "imageID": "docker.io/library/import-2024-02-14@sha256:ee28e569ed76ef9d583d37555c8afbaee1ea1d8e17c1177971b6a11eeb37fb86",
                        "containerID": "containerd://f7cc7427296044baf0cf1fd4e3867b7f7d651356b790c2a661a8afec6d7526cc",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-76f75df574-7vq95 ====
.:53
[INFO] plugin/reload: Running configuration SHA512 = 591cf328cccc12bc490481273e738df59329c62c0b729d94e8b61db9961c2fa5f046dd37f1cf888b953814040d180f52594972691cd6ff41be96639138a43908
CoreDNS-1.11.1
linux/arm64, go1.20.7, ae2bbc2
==== END logs for container coredns of pod kube-system/coredns-76f75df574-7vq95 ====
==== START logs for container coredns of pod kube-system/coredns-76f75df574-wzhpg ====
.:53
[INFO] plugin/reload: Running configuration SHA512 = 591cf328cccc12bc490481273e738df59329c62c0b729d94e8b61db9961c2fa5f046dd37f1cf888b953814040d180f52594972691cd6ff41be96639138a43908
CoreDNS-1.11.1
linux/arm64, go1.20.7, ae2bbc2
==== END logs for container coredns of pod kube-system/coredns-76f75df574-wzhpg ====
==== START logs for container etcd of pod kube-system/etcd-acing-advanced-control-plane ====
{"level":"warn","ts":"2024-02-22T02:33:14.350462Z","caller":"embed/config.go:676","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-02-22T02:33:14.35053Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://172.18.0.5:2379","--cert-file=/etc/kubernetes/pki/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://172.18.0.5:2380","--initial-cluster=acing-advanced-control-plane=https://172.18.0.5:2380","--key-file=/etc/kubernetes/pki/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.5:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://172.18.0.5:2380","--name=acing-advanced-control-plane","--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/etc/kubernetes/pki/etcd/peer.key","--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--snapshot-count=10000","--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"]}
{"level":"warn","ts":"2024-02-22T02:33:14.350574Z","caller":"embed/config.go:676","msg":"Running http and grpc server on single port. This is not recommended for production."}
{"level":"info","ts":"2024-02-22T02:33:14.350587Z","caller":"embed/etcd.go:127","msg":"configuring peer listeners","listen-peer-urls":["https://172.18.0.5:2380"]}
{"level":"info","ts":"2024-02-22T02:33:14.350602Z","caller":"embed/etcd.go:495","msg":"starting with peer TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-02-22T02:33:14.35245Z","caller":"embed/etcd.go:135","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.5:2379"]}
{"level":"info","ts":"2024-02-22T02:33:14.352508Z","caller":"embed/etcd.go:309","msg":"starting an etcd server","etcd-version":"3.5.10","git-sha":"0223ca52b","go-version":"go1.20.10","go-os":"linux","go-arch":"arm64","max-cpu-set":8,"max-cpu-available":8,"member-initialized":false,"name":"acing-advanced-control-plane","data-dir":"/var/lib/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://172.18.0.5:2380"],"listen-peer-urls":["https://172.18.0.5:2380"],"advertise-client-urls":["https://172.18.0.5:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.5:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"acing-advanced-control-plane=https://172.18.0.5:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2024-02-22T02:33:14.353632Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/etcd/member/snap/db","took":"1.0125ms"}
{"level":"info","ts":"2024-02-22T02:33:14.3551Z","caller":"etcdserver/raft.go:495","msg":"starting local member","local-member-id":"26e8d9c7b9b778d","cluster-id":"63d49e4051c250ad"}
{"level":"info","ts":"2024-02-22T02:33:14.355141Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d switched to configuration voters=()"}
{"level":"info","ts":"2024-02-22T02:33:14.355157Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d became follower at term 0"}
{"level":"info","ts":"2024-02-22T02:33:14.355163Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft 26e8d9c7b9b778d [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2024-02-22T02:33:14.355166Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d became follower at term 1"}
{"level":"info","ts":"2024-02-22T02:33:14.355182Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d switched to configuration voters=(175233138742228877)"}
{"level":"warn","ts":"2024-02-22T02:33:14.35613Z","caller":"auth/store.go:1241","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2024-02-22T02:33:14.356903Z","caller":"mvcc/kvstore.go:407","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2024-02-22T02:33:14.357138Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2024-02-22T02:33:14.357802Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"26e8d9c7b9b778d","local-server-version":"3.5.10","cluster-version":"to_be_decided"}
{"level":"info","ts":"2024-02-22T02:33:14.357834Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"26e8d9c7b9b778d","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2024-02-22T02:33:14.357921Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2024-02-22T02:33:14.357936Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2024-02-22T02:33:14.357939Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2024-02-22T02:33:14.358239Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d switched to configuration voters=(175233138742228877)"}
{"level":"info","ts":"2024-02-22T02:33:14.358273Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"63d49e4051c250ad","local-member-id":"26e8d9c7b9b778d","added-peer-id":"26e8d9c7b9b778d","added-peer-peer-urls":["https://172.18.0.5:2380"]}
{"level":"info","ts":"2024-02-22T02:33:14.358749Z","caller":"embed/etcd.go:726","msg":"starting with client TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-02-22T02:33:14.358844Z","caller":"embed/etcd.go:278","msg":"now serving peer/client/metrics","local-member-id":"26e8d9c7b9b778d","initial-advertise-peer-urls":["https://172.18.0.5:2380"],"listen-peer-urls":["https://172.18.0.5:2380"],"advertise-client-urls":["https://172.18.0.5:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.5:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2024-02-22T02:33:14.358858Z","caller":"embed/etcd.go:855","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2024-02-22T02:33:14.358904Z","caller":"embed/etcd.go:597","msg":"serving peer traffic","address":"172.18.0.5:2380"}
{"level":"info","ts":"2024-02-22T02:33:14.358949Z","caller":"embed/etcd.go:569","msg":"cmux::serve","address":"172.18.0.5:2380"}
{"level":"info","ts":"2024-02-22T02:33:15.255289Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d is starting a new election at term 1"}
{"level":"info","ts":"2024-02-22T02:33:15.255352Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d became pre-candidate at term 1"}
{"level":"info","ts":"2024-02-22T02:33:15.255375Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d received MsgPreVoteResp from 26e8d9c7b9b778d at term 1"}
{"level":"info","ts":"2024-02-22T02:33:15.255389Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d became candidate at term 2"}
{"level":"info","ts":"2024-02-22T02:33:15.255395Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d received MsgVoteResp from 26e8d9c7b9b778d at term 2"}
{"level":"info","ts":"2024-02-22T02:33:15.255405Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"26e8d9c7b9b778d became leader at term 2"}
{"level":"info","ts":"2024-02-22T02:33:15.255415Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: 26e8d9c7b9b778d elected leader 26e8d9c7b9b778d at term 2"}
{"level":"info","ts":"2024-02-22T02:33:15.256087Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2024-02-22T02:33:15.256539Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"26e8d9c7b9b778d","local-member-attributes":"{Name:acing-advanced-control-plane ClientURLs:[https://172.18.0.5:2379]}","request-path":"/0/members/26e8d9c7b9b778d/attributes","cluster-id":"63d49e4051c250ad","publish-timeout":"7s"}
{"level":"info","ts":"2024-02-22T02:33:15.256588Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-02-22T02:33:15.256583Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-02-22T02:33:15.256622Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"63d49e4051c250ad","local-member-id":"26e8d9c7b9b778d","cluster-version":"3.5"}
{"level":"info","ts":"2024-02-22T02:33:15.256816Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2024-02-22T02:33:15.25688Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2024-02-22T02:33:15.257049Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2024-02-22T02:33:15.257109Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2024-02-22T02:33:15.259574Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"172.18.0.5:2379"}
{"level":"info","ts":"2024-02-22T02:33:15.259586Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
==== END logs for container etcd of pod kube-system/etcd-acing-advanced-control-plane ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-w88bq ====
I0222 02:33:34.104577       1 main.go:316] probe TCP address acing-advanced-control-plane:6443
I0222 02:33:34.105364       1 main.go:102] connected to apiserver: https://acing-advanced-control-plane:6443
I0222 02:33:34.105373       1 main.go:107] hostIP = 172.18.0.5
podIP = 172.18.0.5
I0222 02:33:34.105420       1 main.go:116] setting mtu 65535 for CNI 
I0222 02:33:34.105431       1 main.go:146] kindnetd IP family: "ipv4"
I0222 02:33:34.105437       1 main.go:150] noMask IPv4 subnets: [10.244.0.0/16]
I0222 02:33:34.245313       1 main.go:223] Handling node with IPs: map[172.18.0.5:{}]
I0222 02:33:34.245328       1 main.go:227] handling current node
I0222 02:33:44.307338       1 main.go:223] Handling node with IPs: map[172.18.0.5:{}]
I0222 02:33:44.307375       1 main.go:227] handling current node
I0222 02:33:54.319738       1 main.go:223] Handling node with IPs: map[172.18.0.5:{}]
I0222 02:33:54.319769       1 main.go:227] handling current node
I0222 02:34:04.324195       1 main.go:223] Handling node with IPs: map[172.18.0.5:{}]
I0222 02:34:04.324229       1 main.go:227] handling current node
I0222 02:34:14.341589       1 main.go:223] Handling node with IPs: map[172.18.0.5:{}]
I0222 02:34:14.341649       1 main.go:227] handling current node
I0222 02:34:24.349302       1 main.go:223] Handling node with IPs: map[172.18.0.5:{}]
I0222 02:34:24.349371       1 main.go:227] handling current node
I0222 02:34:34.357979       1 main.go:223] Handling node with IPs: map[172.18.0.5:{}]
I0222 02:34:34.358029       1 main.go:227] handling current node
==== END logs for container kindnet-cni of pod kube-system/kindnet-w88bq ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-acing-advanced-control-plane ====
I0222 02:33:13.742932       1 options.go:222] external host was not specified, using 172.18.0.5
I0222 02:33:13.743529       1 server.go:148] Version: v1.29.2
I0222 02:33:13.743547       1 server.go:150] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
W0222 02:33:14.247876       1 logging.go:59] [core] [Channel #1 SubChannel #2] grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", }. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
W0222 02:33:14.247893       1 logging.go:59] [core] [Channel #3 SubChannel #4] grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", }. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
I0222 02:33:14.247887       1 shared_informer.go:311] Waiting for caches to sync for node_authorizer
I0222 02:33:14.249406       1 plugins.go:157] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I0222 02:33:14.251013       1 plugins.go:160] Loaded 13 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,ClusterTrustBundleAttest,CertificateSubjectRestriction,ValidatingAdmissionPolicy,ValidatingAdmissionWebhook,ResourceQuota.
I0222 02:33:14.251530       1 instance.go:297] Using reconciler: lease
W0222 02:33:14.252167       1 logging.go:59] [core] [Channel #5 SubChannel #6] grpc: addrConn.createTransport failed to connect to {Addr: "127.0.0.1:2379", ServerName: "127.0.0.1:2379", }. Err: connection error: desc = "transport: Error while dialing: dial tcp 127.0.0.1:2379: connect: connection refused"
I0222 02:33:15.294189       1 handler.go:275] Adding GroupVersion apiextensions.k8s.io v1 to ResourceManager
W0222 02:33:15.294211       1 genericapiserver.go:742] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I0222 02:33:15.388175       1 handler.go:275] Adding GroupVersion  v1 to ResourceManager
I0222 02:33:15.388277       1 instance.go:693] API group "internal.apiserver.k8s.io" is not enabled, skipping.
I0222 02:33:15.550572       1 instance.go:693] API group "resource.k8s.io" is not enabled, skipping.
I0222 02:33:15.555453       1 handler.go:275] Adding GroupVersion authentication.k8s.io v1 to ResourceManager
W0222 02:33:15.555465       1 genericapiserver.go:742] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W0222 02:33:15.555468       1 genericapiserver.go:742] Skipping API authentication.k8s.io/v1alpha1 because it has no resources.
I0222 02:33:15.555801       1 handler.go:275] Adding GroupVersion authorization.k8s.io v1 to ResourceManager
W0222 02:33:15.555817       1 genericapiserver.go:742] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
I0222 02:33:15.556435       1 handler.go:275] Adding GroupVersion autoscaling v2 to ResourceManager
I0222 02:33:15.557020       1 handler.go:275] Adding GroupVersion autoscaling v1 to ResourceManager
W0222 02:33:15.557032       1 genericapiserver.go:742] Skipping API autoscaling/v2beta1 because it has no resources.
W0222 02:33:15.557034       1 genericapiserver.go:742] Skipping API autoscaling/v2beta2 because it has no resources.
I0222 02:33:15.558253       1 handler.go:275] Adding GroupVersion batch v1 to ResourceManager
W0222 02:33:15.558265       1 genericapiserver.go:742] Skipping API batch/v1beta1 because it has no resources.
I0222 02:33:15.558976       1 handler.go:275] Adding GroupVersion certificates.k8s.io v1 to ResourceManager
W0222 02:33:15.558986       1 genericapiserver.go:742] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W0222 02:33:15.558991       1 genericapiserver.go:742] Skipping API certificates.k8s.io/v1alpha1 because it has no resources.
I0222 02:33:15.559241       1 handler.go:275] Adding GroupVersion coordination.k8s.io v1 to ResourceManager
W0222 02:33:15.559249       1 genericapiserver.go:742] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W0222 02:33:15.559268       1 genericapiserver.go:742] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
I0222 02:33:15.559508       1 handler.go:275] Adding GroupVersion discovery.k8s.io v1 to ResourceManager
I0222 02:33:15.560181       1 handler.go:275] Adding GroupVersion networking.k8s.io v1 to ResourceManager
W0222 02:33:15.560188       1 genericapiserver.go:742] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W0222 02:33:15.560190       1 genericapiserver.go:742] Skipping API networking.k8s.io/v1alpha1 because it has no resources.
I0222 02:33:15.560371       1 handler.go:275] Adding GroupVersion node.k8s.io v1 to ResourceManager
W0222 02:33:15.560378       1 genericapiserver.go:742] Skipping API node.k8s.io/v1beta1 because it has no resources.
W0222 02:33:15.560381       1 genericapiserver.go:742] Skipping API node.k8s.io/v1alpha1 because it has no resources.
I0222 02:33:15.560696       1 handler.go:275] Adding GroupVersion policy v1 to ResourceManager
W0222 02:33:15.560702       1 genericapiserver.go:742] Skipping API policy/v1beta1 because it has no resources.
I0222 02:33:15.561275       1 handler.go:275] Adding GroupVersion rbac.authorization.k8s.io v1 to ResourceManager
W0222 02:33:15.561283       1 genericapiserver.go:742] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W0222 02:33:15.561286       1 genericapiserver.go:742] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
I0222 02:33:15.561455       1 handler.go:275] Adding GroupVersion scheduling.k8s.io v1 to ResourceManager
W0222 02:33:15.561461       1 genericapiserver.go:742] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W0222 02:33:15.561463       1 genericapiserver.go:742] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
I0222 02:33:15.562325       1 handler.go:275] Adding GroupVersion storage.k8s.io v1 to ResourceManager
W0222 02:33:15.562332       1 genericapiserver.go:742] Skipping API storage.k8s.io/v1beta1 because it has no resources.
W0222 02:33:15.562334       1 genericapiserver.go:742] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
I0222 02:33:15.562813       1 handler.go:275] Adding GroupVersion flowcontrol.apiserver.k8s.io v1beta3 to ResourceManager
I0222 02:33:15.563269       1 handler.go:275] Adding GroupVersion flowcontrol.apiserver.k8s.io v1 to ResourceManager
W0222 02:33:15.563276       1 genericapiserver.go:742] Skipping API flowcontrol.apiserver.k8s.io/v1beta2 because it has no resources.
W0222 02:33:15.563278       1 genericapiserver.go:742] Skipping API flowcontrol.apiserver.k8s.io/v1beta1 because it has no resources.
I0222 02:33:15.565057       1 handler.go:275] Adding GroupVersion apps v1 to ResourceManager
W0222 02:33:15.565065       1 genericapiserver.go:742] Skipping API apps/v1beta2 because it has no resources.
W0222 02:33:15.565067       1 genericapiserver.go:742] Skipping API apps/v1beta1 because it has no resources.
I0222 02:33:15.565459       1 handler.go:275] Adding GroupVersion admissionregistration.k8s.io v1 to ResourceManager
W0222 02:33:15.565465       1 genericapiserver.go:742] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W0222 02:33:15.565468       1 genericapiserver.go:742] Skipping API admissionregistration.k8s.io/v1alpha1 because it has no resources.
I0222 02:33:15.565722       1 handler.go:275] Adding GroupVersion events.k8s.io v1 to ResourceManager
W0222 02:33:15.565729       1 genericapiserver.go:742] Skipping API events.k8s.io/v1beta1 because it has no resources.
I0222 02:33:15.580329       1 handler.go:275] Adding GroupVersion apiregistration.k8s.io v1 to ResourceManager
W0222 02:33:15.580337       1 genericapiserver.go:742] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0222 02:33:15.795005       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0222 02:33:15.795004       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0222 02:33:15.795427       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key"
I0222 02:33:15.796035       1 secure_serving.go:213] Serving securely on [::]:6443
I0222 02:33:15.796054       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0222 02:33:15.796097       1 controller.go:78] Starting OpenAPI AggregationController
I0222 02:33:15.796120       1 apf_controller.go:374] Starting API Priority and Fairness config controller
I0222 02:33:15.796128       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0222 02:33:15.796130       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0222 02:33:15.796155       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0222 02:33:15.796168       1 controller.go:85] Starting OpenAPI V3 controller
I0222 02:33:15.796180       1 naming_controller.go:291] Starting NamingConditionController
I0222 02:33:15.796186       1 crd_finalizer.go:266] Starting CRDFinalizer
I0222 02:33:15.796201       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0222 02:33:15.796332       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0222 02:33:15.797033       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0222 02:33:15.796349       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0222 02:33:15.796357       1 controller.go:133] Starting OpenAPI controller
I0222 02:33:15.796366       1 establishing_controller.go:76] Starting EstablishingController
I0222 02:33:15.796113       1 controller.go:116] Starting legacy_token_tracking_controller
I0222 02:33:15.798093       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I0222 02:33:15.796421       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key"
I0222 02:33:15.796441       1 aggregator.go:163] waiting for initial CRD sync...
I0222 02:33:15.796446       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0222 02:33:15.799076       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0222 02:33:15.796492       1 available_controller.go:423] Starting AvailableConditionController
I0222 02:33:15.799352       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0222 02:33:15.796510       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0222 02:33:15.799371       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I0222 02:33:15.796523       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0222 02:33:15.796524       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0222 02:33:15.796529       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0222 02:33:15.796841       1 handler_discovery.go:412] Starting ResourceDiscoveryManager
I0222 02:33:15.848127       1 shared_informer.go:318] Caches are synced for node_authorizer
E0222 02:33:15.863387       1 controller.go:145] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
I0222 02:33:15.897253       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0222 02:33:15.897310       1 apf_controller.go:379] Running API Priority and Fairness config worker
I0222 02:33:15.897315       1 apf_controller.go:382] Running API Priority and Fairness periodic rebalancing process
I0222 02:33:15.897946       1 controller.go:624] quota admission added evaluator for: namespaces
I0222 02:33:15.898411       1 shared_informer.go:318] Caches are synced for configmaps
I0222 02:33:15.899090       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0222 02:33:15.899152       1 aggregator.go:165] initial CRD sync complete...
I0222 02:33:15.899163       1 autoregister_controller.go:141] Starting autoregister controller
I0222 02:33:15.899171       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0222 02:33:15.899219       1 cache.go:39] Caches are synced for autoregister controller
I0222 02:33:15.899371       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0222 02:33:15.899391       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0222 02:33:16.065174       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0222 02:33:16.811897       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0222 02:33:16.815547       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0222 02:33:16.815574       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0222 02:33:16.990215       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0222 02:33:17.010871       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0222 02:33:17.106083       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0222 02:33:17.109519       1 lease.go:265] Resetting endpoints for master service "kubernetes" to [172.18.0.5]
I0222 02:33:17.110017       1 controller.go:624] quota admission added evaluator for: endpoints
I0222 02:33:17.111700       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0222 02:33:18.471768       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0222 02:33:18.619383       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0222 02:33:18.623085       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0222 02:33:18.627072       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0222 02:33:32.456159       1 controller.go:624] quota admission added evaluator for: controllerrevisions.apps
I0222 02:33:32.757041       1 controller.go:624] quota admission added evaluator for: replicasets.apps
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-acing-advanced-control-plane ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-acing-advanced-control-plane ====
I0222 02:33:13.951334       1 serving.go:380] Generated self-signed cert in-memory
I0222 02:33:14.202027       1 controllermanager.go:187] "Starting" version="v1.29.2"
I0222 02:33:14.202046       1 controllermanager.go:189] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 02:33:14.203700       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I0222 02:33:14.203806       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I0222 02:33:14.203948       1 secure_serving.go:213] Serving securely on 127.0.0.1:10257
I0222 02:33:14.204055       1 leaderelection.go:250] attempting to acquire leader lease kube-system/kube-controller-manager...
I0222 02:33:14.204179       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
E0222 02:33:15.812887       1 leaderelection.go:332] error retrieving resource lock kube-system/kube-controller-manager: leases.coordination.k8s.io "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-system"
I0222 02:33:18.456882       1 leaderelection.go:260] successfully acquired lease kube-system/kube-controller-manager
I0222 02:33:18.457124       1 event.go:376] "Event occurred" object="kube-system/kube-controller-manager" fieldPath="" kind="Lease" apiVersion="coordination.k8s.io/v1" type="Normal" reason="LeaderElection" message="acing-advanced-control-plane_936605df-121c-4e67-afa1-3d6980a714f0 became leader"
I0222 02:33:18.462618       1 controllermanager.go:735] "Started controller" controller="serviceaccount-token-controller"
I0222 02:33:18.462850       1 shared_informer.go:311] Waiting for caches to sync for tokens
I0222 02:33:18.473097       1 controllermanager.go:735] "Started controller" controller="endpoints-controller"
I0222 02:33:18.473283       1 endpoints_controller.go:174] "Starting endpoint controller"
I0222 02:33:18.473299       1 shared_informer.go:311] Waiting for caches to sync for endpoint
I0222 02:33:18.478766       1 controllermanager.go:735] "Started controller" controller="replicationcontroller-controller"
I0222 02:33:18.478962       1 replica_set.go:214] "Starting controller" name="replicationcontroller"
I0222 02:33:18.478987       1 shared_informer.go:311] Waiting for caches to sync for ReplicationController
I0222 02:33:18.483581       1 controllermanager.go:735] "Started controller" controller="replicaset-controller"
I0222 02:33:18.483698       1 replica_set.go:214] "Starting controller" name="replicaset"
I0222 02:33:18.483712       1 shared_informer.go:311] Waiting for caches to sync for ReplicaSet
I0222 02:33:18.487519       1 controllermanager.go:735] "Started controller" controller="cronjob-controller"
I0222 02:33:18.487646       1 cronjob_controllerv2.go:139] "Starting cronjob controller v2"
I0222 02:33:18.487662       1 shared_informer.go:311] Waiting for caches to sync for cronjob
I0222 02:33:18.492121       1 node_lifecycle_controller.go:425] "Controller will reconcile labels"
I0222 02:33:18.492156       1 controllermanager.go:735] "Started controller" controller="node-lifecycle-controller"
I0222 02:33:18.492263       1 node_lifecycle_controller.go:459] "Sending events to api server"
I0222 02:33:18.492298       1 node_lifecycle_controller.go:470] "Starting node controller"
I0222 02:33:18.492307       1 shared_informer.go:311] Waiting for caches to sync for taint
I0222 02:33:18.497162       1 controllermanager.go:735] "Started controller" controller="persistentvolume-protection-controller"
I0222 02:33:18.497252       1 pv_protection_controller.go:78] "Starting PV protection controller"
I0222 02:33:18.497265       1 shared_informer.go:311] Waiting for caches to sync for PV protection
I0222 02:33:18.500793       1 controllermanager.go:735] "Started controller" controller="pod-garbage-collector-controller"
I0222 02:33:18.500876       1 gc_controller.go:101] "Starting GC controller"
I0222 02:33:18.500882       1 shared_informer.go:311] Waiting for caches to sync for GC
I0222 02:33:18.563946       1 shared_informer.go:318] Caches are synced for tokens
I0222 02:33:28.523078       1 range_allocator.go:111] "No Secondary Service CIDR provided. Skipping filtering out secondary service addresses"
I0222 02:33:28.523144       1 controllermanager.go:735] "Started controller" controller="node-ipam-controller"
I0222 02:33:28.523194       1 controllermanager.go:687] "Controller is disabled by a feature gate" controller="validatingadmissionpolicy-status-controller" requiredFeatureGates=["ValidatingAdmissionPolicy"]
I0222 02:33:28.523206       1 controllermanager.go:687] "Controller is disabled by a feature gate" controller="service-cidr-controller" requiredFeatureGates=["MultiCIDRServiceAllocator"]
I0222 02:33:28.523445       1 node_ipam_controller.go:160] "Starting ipam controller"
I0222 02:33:28.523478       1 shared_informer.go:311] Waiting for caches to sync for node
I0222 02:33:28.529847       1 controllermanager.go:735] "Started controller" controller="endpointslice-mirroring-controller"
I0222 02:33:28.530044       1 endpointslicemirroring_controller.go:223] "Starting EndpointSliceMirroring controller"
I0222 02:33:28.530060       1 shared_informer.go:311] Waiting for caches to sync for endpoint_slice_mirroring
I0222 02:33:28.535125       1 controllermanager.go:735] "Started controller" controller="clusterrole-aggregation-controller"
I0222 02:33:28.535192       1 clusterroleaggregation_controller.go:189] "Starting ClusterRoleAggregator controller"
I0222 02:33:28.535208       1 shared_informer.go:311] Waiting for caches to sync for ClusterRoleAggregator
I0222 02:33:28.539498       1 controllermanager.go:735] "Started controller" controller="ttl-after-finished-controller"
I0222 02:33:28.539574       1 ttlafterfinished_controller.go:109] "Starting TTL after finished controller"
I0222 02:33:28.539586       1 shared_informer.go:311] Waiting for caches to sync for TTL after finished
I0222 02:33:28.540993       1 controllermanager.go:735] "Started controller" controller="taint-eviction-controller"
I0222 02:33:28.541061       1 taint_eviction.go:285] "Starting" controller="taint-eviction-controller"
I0222 02:33:28.541091       1 taint_eviction.go:291] "Sending events to api server"
I0222 02:33:28.541408       1 shared_informer.go:311] Waiting for caches to sync for taint-eviction-controller
I0222 02:33:28.545247       1 controllermanager.go:735] "Started controller" controller="endpointslice-controller"
I0222 02:33:28.545313       1 endpointslice_controller.go:264] "Starting endpoint slice controller"
I0222 02:33:28.545327       1 shared_informer.go:311] Waiting for caches to sync for endpoint_slice
I0222 02:33:28.548783       1 controllermanager.go:735] "Started controller" controller="daemonset-controller"
I0222 02:33:28.548862       1 daemon_controller.go:291] "Starting daemon sets controller"
I0222 02:33:28.548871       1 shared_informer.go:311] Waiting for caches to sync for daemon sets
I0222 02:33:28.552355       1 controllermanager.go:735] "Started controller" controller="deployment-controller"
I0222 02:33:28.552437       1 deployment_controller.go:168] "Starting controller" controller="deployment"
I0222 02:33:28.552446       1 shared_informer.go:311] Waiting for caches to sync for deployment
I0222 02:33:28.555468       1 controllermanager.go:735] "Started controller" controller="token-cleaner-controller"
I0222 02:33:28.555489       1 tokencleaner.go:112] "Starting token cleaner controller"
I0222 02:33:28.555496       1 shared_informer.go:311] Waiting for caches to sync for token_cleaner
I0222 02:33:28.555500       1 shared_informer.go:318] Caches are synced for token_cleaner
I0222 02:33:28.558531       1 controllermanager.go:735] "Started controller" controller="persistentvolume-expander-controller"
I0222 02:33:28.558587       1 expand_controller.go:328] "Starting expand controller"
I0222 02:33:28.558599       1 shared_informer.go:311] Waiting for caches to sync for expand
I0222 02:33:28.561178       1 controllermanager.go:735] "Started controller" controller="legacy-serviceaccount-token-cleaner-controller"
I0222 02:33:28.561232       1 legacy_serviceaccount_token_cleaner.go:103] "Starting legacy service account token cleaner controller"
I0222 02:33:28.561241       1 shared_informer.go:311] Waiting for caches to sync for legacy-service-account-token-cleaner
I0222 02:33:28.809174       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="endpointslices.discovery.k8s.io"
I0222 02:33:28.809211       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="limitranges"
I0222 02:33:28.809222       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="replicasets.apps"
I0222 02:33:28.809232       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="daemonsets.apps"
I0222 02:33:28.809276       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="networkpolicies.networking.k8s.io"
I0222 02:33:28.809308       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="deployments.apps"
I0222 02:33:28.809326       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="jobs.batch"
I0222 02:33:28.809341       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="horizontalpodautoscalers.autoscaling"
I0222 02:33:28.809362       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="cronjobs.batch"
I0222 02:33:28.809376       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="poddisruptionbudgets.policy"
I0222 02:33:28.809390       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="roles.rbac.authorization.k8s.io"
I0222 02:33:28.809406       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="leases.coordination.k8s.io"
I0222 02:33:28.809414       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="controllerrevisions.apps"
I0222 02:33:28.809428       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="rolebindings.rbac.authorization.k8s.io"
I0222 02:33:28.809440       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="endpoints"
I0222 02:33:28.809497       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="serviceaccounts"
I0222 02:33:28.809520       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="csistoragecapacities.storage.k8s.io"
I0222 02:33:28.809541       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="podtemplates"
I0222 02:33:28.809559       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="statefulsets.apps"
I0222 02:33:28.809661       1 resource_quota_monitor.go:224] "QuotaMonitor created object count evaluator" resource="ingresses.networking.k8s.io"
I0222 02:33:28.809699       1 controllermanager.go:735] "Started controller" controller="resourcequota-controller"
I0222 02:33:28.809801       1 resource_quota_controller.go:294] "Starting resource quota controller"
I0222 02:33:28.809814       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I0222 02:33:28.809824       1 resource_quota_monitor.go:305] "QuotaMonitor running"
I0222 02:33:28.956557       1 certificate_controller.go:115] "Starting certificate controller" name="csrsigning-kubelet-serving"
I0222 02:33:28.956577       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I0222 02:33:28.956592       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 02:33:28.957633       1 certificate_controller.go:115] "Starting certificate controller" name="csrsigning-kubelet-client"
I0222 02:33:28.957643       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I0222 02:33:28.957655       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 02:33:28.958766       1 certificate_controller.go:115] "Starting certificate controller" name="csrsigning-kube-apiserver-client"
I0222 02:33:28.958779       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I0222 02:33:28.958787       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 02:33:28.959827       1 controllermanager.go:735] "Started controller" controller="certificatesigningrequest-signing-controller"
I0222 02:33:28.959859       1 certificate_controller.go:115] "Starting certificate controller" name="csrsigning-legacy-unknown"
I0222 02:33:28.959864       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I0222 02:33:28.959877       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I0222 02:33:29.003943       1 controllermanager.go:735] "Started controller" controller="certificatesigningrequest-cleaner-controller"
I0222 02:33:29.003968       1 cleaner.go:83] "Starting CSR cleaner controller"
I0222 02:33:29.155078       1 controllermanager.go:735] "Started controller" controller="bootstrap-signer-controller"
I0222 02:33:29.155104       1 controllermanager.go:687] "Controller is disabled by a feature gate" controller="storageversion-garbage-collector-controller" requiredFeatureGates=["APIServerIdentity","StorageVersionAPI"]
I0222 02:33:29.155130       1 shared_informer.go:311] Waiting for caches to sync for bootstrap_signer
I0222 02:33:29.409270       1 controllermanager.go:735] "Started controller" controller="namespace-controller"
I0222 02:33:29.409320       1 namespace_controller.go:197] "Starting namespace controller"
I0222 02:33:29.409331       1 shared_informer.go:311] Waiting for caches to sync for namespace
I0222 02:33:29.556976       1 controllermanager.go:735] "Started controller" controller="serviceaccount-controller"
I0222 02:33:29.557041       1 serviceaccounts_controller.go:111] "Starting service account controller"
I0222 02:33:29.557052       1 shared_informer.go:311] Waiting for caches to sync for service account
I0222 02:33:29.805288       1 controllermanager.go:735] "Started controller" controller="garbage-collector-controller"
I0222 02:33:29.805308       1 garbagecollector.go:155] "Starting controller" controller="garbagecollector"
I0222 02:33:29.805316       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0222 02:33:29.805337       1 graph_builder.go:302] "Running" component="GraphBuilder"
I0222 02:33:30.058437       1 controllermanager.go:735] "Started controller" controller="job-controller"
I0222 02:33:30.058569       1 job_controller.go:224] "Starting job controller"
I0222 02:33:30.058592       1 shared_informer.go:311] Waiting for caches to sync for job
I0222 02:33:30.257187       1 controllermanager.go:735] "Started controller" controller="disruption-controller"
I0222 02:33:30.257277       1 disruption.go:433] "Sending events to api server."
I0222 02:33:30.257330       1 disruption.go:444] "Starting disruption controller"
I0222 02:33:30.257340       1 shared_informer.go:311] Waiting for caches to sync for disruption
I0222 02:33:30.307017       1 controllermanager.go:735] "Started controller" controller="certificatesigningrequest-approving-controller"
I0222 02:33:30.307105       1 certificate_controller.go:115] "Starting certificate controller" name="csrapproving"
I0222 02:33:30.307116       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrapproving
I0222 02:33:30.461014       1 controllermanager.go:735] "Started controller" controller="ephemeral-volume-controller"
I0222 02:33:30.461154       1 controller.go:169] "Starting ephemeral volume controller"
I0222 02:33:30.461169       1 shared_informer.go:311] Waiting for caches to sync for ephemeral
I0222 02:33:30.755883       1 controllermanager.go:735] "Started controller" controller="horizontal-pod-autoscaler-controller"
I0222 02:33:30.755942       1 horizontal.go:200] "Starting HPA controller"
I0222 02:33:30.755951       1 shared_informer.go:311] Waiting for caches to sync for HPA
I0222 02:33:30.905695       1 controllermanager.go:735] "Started controller" controller="persistentvolume-attach-detach-controller"
I0222 02:33:30.905756       1 attach_detach_controller.go:337] "Starting attach detach controller"
I0222 02:33:30.905762       1 shared_informer.go:311] Waiting for caches to sync for attach detach
I0222 02:33:31.056281       1 controllermanager.go:735] "Started controller" controller="persistentvolumeclaim-protection-controller"
I0222 02:33:31.056315       1 pvc_protection_controller.go:102] "Starting PVC protection controller"
I0222 02:33:31.056327       1 shared_informer.go:311] Waiting for caches to sync for PVC protection
I0222 02:33:31.206534       1 controllermanager.go:735] "Started controller" controller="root-ca-certificate-publisher-controller"
I0222 02:33:31.206605       1 publisher.go:102] "Starting root CA cert publisher controller"
I0222 02:33:31.206616       1 shared_informer.go:311] Waiting for caches to sync for crt configmap
I0222 02:33:31.356558       1 controllermanager.go:735] "Started controller" controller="statefulset-controller"
I0222 02:33:31.356662       1 stateful_set.go:161] "Starting stateful set controller"
I0222 02:33:31.356697       1 shared_informer.go:311] Waiting for caches to sync for stateful set
I0222 02:33:31.508807       1 controllermanager.go:735] "Started controller" controller="ttl-controller"
I0222 02:33:31.508869       1 ttl_controller.go:124] "Starting TTL controller"
I0222 02:33:31.508890       1 shared_informer.go:311] Waiting for caches to sync for TTL
E0222 02:33:31.657244       1 core.go:105] "Failed to start service controller" err="WARNING: no cloud provider provided, services of type LoadBalancer will fail"
I0222 02:33:31.657269       1 controllermanager.go:713] "Warning: skipping controller" controller="service-lb-controller"
I0222 02:33:31.657280       1 core.go:294] "Warning: configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes."
I0222 02:33:31.657286       1 controllermanager.go:713] "Warning: skipping controller" controller="node-route-controller"
E0222 02:33:31.705921       1 core.go:270] "Failed to start cloud node lifecycle controller" err="no cloud provider provided"
I0222 02:33:31.705956       1 controllermanager.go:713] "Warning: skipping controller" controller="cloud-node-lifecycle-controller"
I0222 02:33:31.856283       1 controllermanager.go:735] "Started controller" controller="persistentvolume-binder-controller"
I0222 02:33:31.856312       1 controllermanager.go:687] "Controller is disabled by a feature gate" controller="resourceclaim-controller" requiredFeatureGates=["DynamicResourceAllocation"]
I0222 02:33:31.856348       1 pv_controller_base.go:319] "Starting persistent volume controller"
I0222 02:33:31.856368       1 shared_informer.go:311] Waiting for caches to sync for persistent volume
I0222 02:33:31.859897       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I0222 02:33:31.901198       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"acing-advanced-control-plane\" does not exist"
I0222 02:33:31.901377       1 shared_informer.go:318] Caches are synced for PV protection
I0222 02:33:31.909947       1 shared_informer.go:318] Caches are synced for TTL
I0222 02:33:31.910834       1 shared_informer.go:318] Caches are synced for namespace
I0222 02:33:31.910887       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I0222 02:33:31.914090       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I0222 02:33:31.924545       1 shared_informer.go:318] Caches are synced for node
I0222 02:33:31.924620       1 range_allocator.go:174] "Sending events to api server"
I0222 02:33:31.924649       1 range_allocator.go:178] "Starting range CIDR allocator"
I0222 02:33:31.924652       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I0222 02:33:31.924655       1 shared_informer.go:318] Caches are synced for cidrallocator
I0222 02:33:31.927497       1 range_allocator.go:380] "Set node PodCIDR" node="acing-advanced-control-plane" podCIDRs=["10.244.0.0/24"]
I0222 02:33:31.930688       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I0222 02:33:31.935267       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I0222 02:33:31.939757       1 shared_informer.go:318] Caches are synced for TTL after finished
I0222 02:33:31.942049       1 shared_informer.go:318] Caches are synced for taint-eviction-controller
I0222 02:33:31.946317       1 shared_informer.go:318] Caches are synced for endpoint_slice
I0222 02:33:31.949815       1 shared_informer.go:318] Caches are synced for daemon sets
I0222 02:33:31.956014       1 shared_informer.go:318] Caches are synced for HPA
I0222 02:33:31.956919       1 shared_informer.go:318] Caches are synced for PVC protection
I0222 02:33:31.956921       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I0222 02:33:31.956945       1 shared_informer.go:318] Caches are synced for stateful set
I0222 02:33:31.956975       1 shared_informer.go:318] Caches are synced for persistent volume
I0222 02:33:31.958216       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I0222 02:33:31.958260       1 shared_informer.go:318] Caches are synced for service account
I0222 02:33:31.958919       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0222 02:33:31.958943       1 shared_informer.go:318] Caches are synced for expand
I0222 02:33:31.958953       1 shared_informer.go:318] Caches are synced for job
I0222 02:33:31.960473       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I0222 02:33:31.961630       1 shared_informer.go:318] Caches are synced for ephemeral
I0222 02:33:31.961656       1 shared_informer.go:318] Caches are synced for legacy-service-account-token-cleaner
I0222 02:33:31.974112       1 shared_informer.go:318] Caches are synced for endpoint
I0222 02:33:31.979620       1 shared_informer.go:318] Caches are synced for ReplicationController
I0222 02:33:31.988381       1 shared_informer.go:318] Caches are synced for cronjob
I0222 02:33:31.992786       1 shared_informer.go:318] Caches are synced for taint
I0222 02:33:31.992850       1 node_lifecycle_controller.go:1222] "Initializing eviction metric for zone" zone=""
I0222 02:33:31.992895       1 node_lifecycle_controller.go:874] "Missing timestamp for Node. Assuming now as a timestamp" node="acing-advanced-control-plane"
I0222 02:33:31.992914       1 node_lifecycle_controller.go:1026] "Controller detected that all Nodes are not-Ready. Entering master disruption mode"
I0222 02:33:31.992940       1 event.go:376] "Event occurred" object="acing-advanced-control-plane" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node acing-advanced-control-plane event: Registered Node acing-advanced-control-plane in Controller"
I0222 02:33:32.001393       1 shared_informer.go:318] Caches are synced for GC
I0222 02:33:32.006040       1 shared_informer.go:318] Caches are synced for attach detach
I0222 02:33:32.053297       1 shared_informer.go:318] Caches are synced for deployment
I0222 02:33:32.058244       1 shared_informer.go:318] Caches are synced for disruption
I0222 02:33:32.060723       1 shared_informer.go:318] Caches are synced for resource quota
I0222 02:33:32.084265       1 shared_informer.go:318] Caches are synced for ReplicaSet
I0222 02:33:32.107679       1 shared_informer.go:318] Caches are synced for crt configmap
I0222 02:33:32.110088       1 shared_informer.go:318] Caches are synced for resource quota
I0222 02:33:32.155430       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I0222 02:33:32.459951       1 event.go:376] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-vkc66"
I0222 02:33:32.461412       1 event.go:376] "Event occurred" object="kube-system/kindnet" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kindnet-w88bq"
I0222 02:33:32.506104       1 shared_informer.go:318] Caches are synced for garbage collector
I0222 02:33:32.506120       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I0222 02:33:32.515036       1 shared_informer.go:318] Caches are synced for garbage collector
I0222 02:33:32.758772       1 event.go:376] "Event occurred" object="local-path-storage/local-path-provisioner" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set local-path-provisioner-7577fdbbfb to 1"
I0222 02:33:32.759432       1 event.go:376] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-76f75df574 to 2"
I0222 02:33:32.959824       1 event.go:376] "Event occurred" object="kube-system/coredns-76f75df574" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-76f75df574-7vq95"
I0222 02:33:32.959936       1 event.go:376] "Event occurred" object="local-path-storage/local-path-provisioner-7577fdbbfb" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: local-path-provisioner-7577fdbbfb-b29hh"
I0222 02:33:32.962666       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-7577fdbbfb" duration="204.09675ms"
I0222 02:33:32.963571       1 event.go:376] "Event occurred" object="kube-system/coredns-76f75df574" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-76f75df574-wzhpg"
I0222 02:33:32.965429       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-7577fdbbfb" duration="2.718083ms"
I0222 02:33:32.965634       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-7577fdbbfb" duration="28.416µs"
I0222 02:33:32.966531       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="207.1555ms"
I0222 02:33:32.967028       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-7577fdbbfb" duration="16.542µs"
I0222 02:33:32.972418       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="5.868333ms"
I0222 02:33:32.972453       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="19.292µs"
I0222 02:33:34.389263       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="42.959µs"
I0222 02:33:34.390474       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-7577fdbbfb" duration="22µs"
I0222 02:33:34.390552       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="13.666µs"
I0222 02:33:34.395343       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="22.708µs"
I0222 02:33:34.398812       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-7577fdbbfb" duration="15.917µs"
I0222 02:33:34.401920       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="20.917µs"
I0222 02:33:35.691158       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-7577fdbbfb" duration="2.525458ms"
I0222 02:33:35.691211       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="local-path-storage/local-path-provisioner-7577fdbbfb" duration="19.291µs"
I0222 02:33:35.696724       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="3.107834ms"
I0222 02:33:35.696817       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="20.791µs"
I0222 02:33:35.701797       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="3.40125ms"
I0222 02:33:35.701828       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kube-system/coredns-76f75df574" duration="17.791µs"
I0222 02:33:36.995468       1 node_lifecycle_controller.go:1045] "Controller detected that some Nodes are Ready. Exiting master disruption mode"
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-acing-advanced-control-plane ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-vkc66 ====
I0222 02:33:33.779016       1 server.go:1050] "Successfully retrieved node IP(s)" IPs=["172.18.0.5"]
I0222 02:33:33.779089       1 conntrack.go:118] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_established" value=86400
I0222 02:33:33.779122       1 conntrack.go:118] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I0222 02:33:33.787612       1 server.go:652] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0222 02:33:33.787626       1 server_others.go:168] "Using iptables Proxier"
I0222 02:33:33.788515       1 server_others.go:512] "Detect-local-mode set to ClusterCIDR, but no cluster CIDR for family" ipFamily="IPv6"
I0222 02:33:33.788525       1 server_others.go:529] "Defaulting to no-op detect-local"
I0222 02:33:33.788543       1 proxier.go:245] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0222 02:33:33.788619       1 server.go:865] "Version info" version="v1.29.2"
I0222 02:33:33.788624       1 server.go:867] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 02:33:33.789262       1 config.go:188] "Starting service config controller"
I0222 02:33:33.789271       1 shared_informer.go:311] Waiting for caches to sync for service config
I0222 02:33:33.789280       1 config.go:315] "Starting node config controller"
I0222 02:33:33.789282       1 shared_informer.go:311] Waiting for caches to sync for node config
I0222 02:33:33.789355       1 config.go:97] "Starting endpoint slice config controller"
I0222 02:33:33.789377       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0222 02:33:33.890107       1 shared_informer.go:318] Caches are synced for node config
I0222 02:33:33.890131       1 shared_informer.go:318] Caches are synced for service config
I0222 02:33:33.890115       1 shared_informer.go:318] Caches are synced for endpoint slice config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-vkc66 ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-acing-advanced-control-plane ====
I0222 02:33:14.060846       1 serving.go:380] Generated self-signed cert in-memory
W0222 02:33:15.806948       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0222 02:33:15.806980       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0222 02:33:15.806989       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W0222 02:33:15.806998       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0222 02:33:15.822172       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.29.2"
I0222 02:33:15.822198       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0222 02:33:15.822955       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0222 02:33:15.822977       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0222 02:33:15.823269       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
I0222 02:33:15.823300       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W0222 02:33:15.824345       1 reflector.go:539] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0222 02:33:15.824374       1 reflector.go:147] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0222 02:33:15.824406       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0222 02:33:15.824426       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0222 02:33:15.824981       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0222 02:33:15.825001       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0222 02:33:15.825055       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0222 02:33:15.825066       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0222 02:33:15.825104       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0222 02:33:15.825108       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0222 02:33:15.825124       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0222 02:33:15.825128       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0222 02:33:15.825144       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0222 02:33:15.825147       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0222 02:33:15.825177       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0222 02:33:15.825182       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0222 02:33:15.825221       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0222 02:33:15.825233       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0222 02:33:15.825262       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0222 02:33:15.825266       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0222 02:33:15.825316       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0222 02:33:15.825321       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0222 02:33:15.825512       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0222 02:33:15.825526       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0222 02:33:15.825546       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0222 02:33:15.825555       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0222 02:33:15.825559       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0222 02:33:15.825561       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0222 02:33:15.825601       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0222 02:33:15.825609       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0222 02:33:16.694024       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0222 02:33:16.694072       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0222 02:33:16.807622       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0222 02:33:16.807699       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0222 02:33:16.816769       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0222 02:33:16.816809       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0222 02:33:16.855391       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0222 02:33:16.855434       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0222 02:33:16.897298       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0222 02:33:16.897322       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0222 02:33:16.901840       1 reflector.go:539] vendor/k8s.io/client-go/informers/factory.go:159: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0222 02:33:16.901855       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:159: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0222 02:33:16.908609       1 reflector.go:539] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0222 02:33:16.908632       1 reflector.go:147] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
I0222 02:33:19.824560       1 leaderelection.go:250] attempting to acquire leader lease kube-system/kube-scheduler...
I0222 02:33:19.828766       1 leaderelection.go:260] successfully acquired lease kube-system/kube-scheduler
I0222 02:33:19.923354       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-acing-advanced-control-plane ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": [
        {
            "metadata": {
                "name": "acing-advanced-control-plane.17b60ea23ed0647b",
                "namespace": "default",
                "uid": "9ae25c0c-ccca-480c-be45-dca6cf8975e0",
                "resourceVersion": "238",
                "creationTimestamp": "2024-02-22T02:33:18Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-advanced-control-plane",
                "uid": "acing-advanced-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:18Z",
            "lastTimestamp": "2024-02-22T02:33:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "acing-advanced-control-plane.17b60ea2407942c1",
                "namespace": "default",
                "uid": "d2c4f4e8-e6a3-481a-a794-72f78ea6901b",
                "resourceVersion": "242",
                "creationTimestamp": "2024-02-22T02:33:18Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-advanced-control-plane",
                "uid": "acing-advanced-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:18Z",
            "lastTimestamp": "2024-02-22T02:33:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "acing-advanced-control-plane.17b60ea244e041a9",
                "namespace": "default",
                "uid": "66752eee-6d50-40d6-aff5-41b5603a7b1b",
                "resourceVersion": "244",
                "creationTimestamp": "2024-02-22T02:33:18Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-advanced-control-plane",
                "uid": "acing-advanced-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node acing-advanced-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:18Z",
            "lastTimestamp": "2024-02-22T02:33:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "acing-advanced-control-plane.17b60ea244e05ef5",
                "namespace": "default",
                "uid": "40d19715-d687-4dfa-93bb-cac75e24b149",
                "resourceVersion": "245",
                "creationTimestamp": "2024-02-22T02:33:18Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-advanced-control-plane",
                "uid": "acing-advanced-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node acing-advanced-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:18Z",
            "lastTimestamp": "2024-02-22T02:33:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "acing-advanced-control-plane.17b60ea244e06742",
                "namespace": "default",
                "uid": "5988be59-2deb-46c2-b4d2-b190ce1ef7da",
                "resourceVersion": "246",
                "creationTimestamp": "2024-02-22T02:33:18Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-advanced-control-plane",
                "uid": "acing-advanced-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node acing-advanced-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:18Z",
            "lastTimestamp": "2024-02-22T02:33:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "acing-advanced-control-plane.17b60ea55b0058a2",
                "namespace": "default",
                "uid": "7a2b2f8c-5db9-4845-a7e7-8df48207a054",
                "resourceVersion": "321",
                "creationTimestamp": "2024-02-22T02:33:31Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-advanced-control-plane",
                "uid": "c506ce1e-9ec3-48fa-9b17-8f47e9e875e7",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node acing-advanced-control-plane event: Registered Node acing-advanced-control-plane in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2024-02-22T02:33:31Z",
            "lastTimestamp": "2024-02-22T02:33:31Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "node-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "acing-advanced-control-plane.17b60ea5c6119dc0",
                "namespace": "default",
                "uid": "5f5ab8a7-5de4-43c7-a693-b2831eedf0ed",
                "resourceVersion": "389",
                "creationTimestamp": "2024-02-22T02:33:33Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-advanced-control-plane",
                "uid": "acing-advanced-control-plane"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2024-02-22T02:33:33.789117Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-acing-advanced-control-plane"
        },
        {
            "metadata": {
                "name": "acing-advanced-control-plane.17b60ea5e9438db2",
                "namespace": "default",
                "uid": "b05e1b70-b0da-4fd1-801b-cb42ec09117c",
                "resourceVersion": "392",
                "creationTimestamp": "2024-02-22T02:33:34Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "acing-advanced-control-plane",
                "uid": "acing-advanced-control-plane"
            },
            "reason": "NodeReady",
            "message": "Node acing-advanced-control-plane status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "acing-advanced-control-plane"
            },
            "firstTimestamp": "2024-02-22T02:33:34Z",
            "lastTimestamp": "2024-02-22T02:33:34Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "acing-advanced-control-plane"
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "ebcb894e-b9d5-46db-a083-326ec86fb3b6",
                "resourceVersion": "194",
                "creationTimestamp": "2024-02-22T02:33:17Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "518"
    },
    "items": []
}
